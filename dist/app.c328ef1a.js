// modules are defined as an array
// [ module function, map of requires ]
//
// map of requires is short require name -> numeric require
//
// anything defined in a previous bundle is accessed via the
// orig method which is the require for previous bundles
parcelRequire = (function (modules, cache, entry, globalName) {
  // Save the require from previous bundle to this closure if any
  var previousRequire = typeof parcelRequire === 'function' && parcelRequire;
  var nodeRequire = typeof require === 'function' && require;

  function newRequire(name, jumped) {
    if (!cache[name]) {
      if (!modules[name]) {
        // if we cannot find the module within our internal map or
        // cache jump to the current global require ie. the last bundle
        // that was added to the page.
        var currentRequire = typeof parcelRequire === 'function' && parcelRequire;
        if (!jumped && currentRequire) {
          return currentRequire(name, true);
        }

        // If there are other bundles on this page the require from the
        // previous one is saved to 'previousRequire'. Repeat this as
        // many times as there are bundles until the module is found or
        // we exhaust the require chain.
        if (previousRequire) {
          return previousRequire(name, true);
        }

        // Try the node require function if it exists.
        if (nodeRequire && typeof name === 'string') {
          return nodeRequire(name);
        }

        var err = new Error('Cannot find module \'' + name + '\'');
        err.code = 'MODULE_NOT_FOUND';
        throw err;
      }

      localRequire.resolve = resolve;
      localRequire.cache = {};

      var module = cache[name] = new newRequire.Module(name);

      modules[name][0].call(module.exports, localRequire, module, module.exports, this);
    }

    return cache[name].exports;

    function localRequire(x){
      return newRequire(localRequire.resolve(x));
    }

    function resolve(x){
      return modules[name][1][x] || x;
    }
  }

  function Module(moduleName) {
    this.id = moduleName;
    this.bundle = newRequire;
    this.exports = {};
  }

  newRequire.isParcelRequire = true;
  newRequire.Module = Module;
  newRequire.modules = modules;
  newRequire.cache = cache;
  newRequire.parent = previousRequire;
  newRequire.register = function (id, exports) {
    modules[id] = [function (require, module) {
      module.exports = exports;
    }, {}];
  };

  var error;
  for (var i = 0; i < entry.length; i++) {
    try {
      newRequire(entry[i]);
    } catch (e) {
      // Save first error but execute all entries
      if (!error) {
        error = e;
      }
    }
  }

  if (entry.length) {
    // Expose entry point to Node, AMD or browser globals
    // Based on https://github.com/ForbesLindesay/umd/blob/master/template.js
    var mainExports = newRequire(entry[entry.length - 1]);

    // CommonJS
    if (typeof exports === "object" && typeof module !== "undefined") {
      module.exports = mainExports;

    // RequireJS
    } else if (typeof define === "function" && define.amd) {
     define(function () {
       return mainExports;
     });

    // <script>
    } else if (globalName) {
      this[globalName] = mainExports;
    }
  }

  // Override the current require with this new one
  parcelRequire = newRequire;

  if (error) {
    // throw error from earlier, _after updating parcelRequire_
    throw error;
  }

  return newRequire;
})({"app.js":[function(require,module,exports) {
function _typeof(obj) { if (typeof Symbol === "function" && typeof Symbol.iterator === "symbol") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; }; } return _typeof(obj); }

// Generated by purs bundle 0.12.5
var PS = {};

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Semigroupoid"] = $PS["Control.Semigroupoid"] || {};
  var exports = $PS["Control.Semigroupoid"];

  var Semigroupoid = function Semigroupoid(compose) {
    this.compose = compose;
  };

  var semigroupoidFn = new Semigroupoid(function (f) {
    return function (g) {
      return function (x) {
        return f(g(x));
      };
    };
  });

  var compose = function compose(dict) {
    return dict.compose;
  };

  exports["compose"] = compose;
  exports["Semigroupoid"] = Semigroupoid;
  exports["semigroupoidFn"] = semigroupoidFn;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Category"] = $PS["Control.Category"] || {};
  var exports = $PS["Control.Category"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];

  var Category = function Category(Semigroupoid0, identity) {
    this.Semigroupoid0 = Semigroupoid0;
    this.identity = identity;
  };

  var identity = function identity(dict) {
    return dict.identity;
  };

  var categoryFn = new Category(function () {
    return Control_Semigroupoid.semigroupoidFn;
  }, function (x) {
    return x;
  });
  exports["Category"] = Category;
  exports["identity"] = identity;
  exports["categoryFn"] = categoryFn;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["CSS.String"] = $PS["CSS.String"] || {};
  var exports = $PS["CSS.String"];
  var Control_Category = $PS["Control.Category"];

  var IsString = function IsString(fromString) {
    this.fromString = fromString;
  };

  var isStringString = new IsString(Control_Category.identity(Control_Category.categoryFn));

  var fromString = function fromString(dict) {
    return dict.fromString;
  };

  exports["fromString"] = fromString;
  exports["IsString"] = IsString;
  exports["isStringString"] = isStringString;
})(PS);

(function (exports) {
  "use strict";

  exports.arrayApply = function (fs) {
    return function (xs) {
      var l = fs.length;
      var k = xs.length;
      var result = new Array(l * k);
      var n = 0;

      for (var i = 0; i < l; i++) {
        var f = fs[i];

        for (var j = 0; j < k; j++) {
          result[n++] = f(xs[j]);
        }
      }

      return result;
    };
  };
})(PS["Control.Apply"] = PS["Control.Apply"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Function"] = $PS["Data.Function"] || {};
  var exports = $PS["Data.Function"];

  var flip = function flip(f) {
    return function (b) {
      return function (a) {
        return f(a)(b);
      };
    };
  };

  var $$const = function $$const(a) {
    return function (v) {
      return a;
    };
  };

  var applyFlipped = function applyFlipped(x) {
    return function (f) {
      return f(x);
    };
  };

  exports["flip"] = flip;
  exports["const"] = $$const;
  exports["applyFlipped"] = applyFlipped;
})(PS);

(function (exports) {
  "use strict";

  exports.arrayMap = function (f) {
    return function (arr) {
      var l = arr.length;
      var result = new Array(l);

      for (var i = 0; i < l; i++) {
        result[i] = f(arr[i]);
      }

      return result;
    };
  };
})(PS["Data.Functor"] = PS["Data.Functor"] || {});

(function (exports) {
  "use strict";

  exports.unit = {};
})(PS["Data.Unit"] = PS["Data.Unit"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Unit"] = $PS["Data.Unit"] || {};
  var exports = $PS["Data.Unit"];
  var $foreign = $PS["Data.Unit"];
  exports["unit"] = $foreign.unit;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Functor"] = $PS["Data.Functor"] || {};
  var exports = $PS["Data.Functor"];
  var $foreign = $PS["Data.Functor"];
  var Control_Semigroupoid = $PS["Control.Semigroupoid"];
  var Data_Function = $PS["Data.Function"];
  var Data_Unit = $PS["Data.Unit"];

  var Functor = function Functor(map) {
    this.map = map;
  };

  var map = function map(dict) {
    return dict.map;
  };

  var $$void = function $$void(dictFunctor) {
    return map(dictFunctor)(Data_Function["const"](Data_Unit.unit));
  };

  var voidLeft = function voidLeft(dictFunctor) {
    return function (f) {
      return function (x) {
        return map(dictFunctor)(Data_Function["const"](x))(f);
      };
    };
  };

  var voidRight = function voidRight(dictFunctor) {
    return function (x) {
      return map(dictFunctor)(Data_Function["const"](x));
    };
  };

  var functorFn = new Functor(Control_Semigroupoid.compose(Control_Semigroupoid.semigroupoidFn));
  var functorArray = new Functor($foreign.arrayMap);
  exports["Functor"] = Functor;
  exports["map"] = map;
  exports["void"] = $$void;
  exports["voidRight"] = voidRight;
  exports["voidLeft"] = voidLeft;
  exports["functorFn"] = functorFn;
  exports["functorArray"] = functorArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Apply"] = $PS["Control.Apply"] || {};
  var exports = $PS["Control.Apply"];
  var $foreign = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];

  var Apply = function Apply(Functor0, apply) {
    this.Functor0 = Functor0;
    this.apply = apply;
  };

  var applyArray = new Apply(function () {
    return Data_Functor.functorArray;
  }, $foreign.arrayApply);

  var apply = function apply(dict) {
    return dict.apply;
  };

  var applySecond = function applySecond(dictApply) {
    return function (a) {
      return function (b) {
        return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(Data_Function["const"](Control_Category.identity(Control_Category.categoryFn)))(a))(b);
      };
    };
  };

  var lift2 = function lift2(dictApply) {
    return function (f) {
      return function (a) {
        return function (b) {
          return apply(dictApply)(Data_Functor.map(dictApply.Functor0())(f)(a))(b);
        };
      };
    };
  };

  exports["Apply"] = Apply;
  exports["apply"] = apply;
  exports["applySecond"] = applySecond;
  exports["lift2"] = lift2;
  exports["applyArray"] = applyArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Applicative"] = $PS["Control.Applicative"] || {};
  var exports = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Unit = $PS["Data.Unit"];

  var Applicative = function Applicative(Apply0, pure) {
    this.Apply0 = Apply0;
    this.pure = pure;
  };

  var pure = function pure(dict) {
    return dict.pure;
  };

  var when = function when(dictApplicative) {
    return function (v) {
      return function (v1) {
        if (v) {
          return v1;
        }

        ;

        if (!v) {
          return pure(dictApplicative)(Data_Unit.unit);
        }

        ;
        throw new Error("Failed pattern match at Control.Applicative (line 57, column 1 - line 57, column 63): " + [v.constructor.name, v1.constructor.name]);
      };
    };
  };

  var liftA1 = function liftA1(dictApplicative) {
    return function (f) {
      return function (a) {
        return Control_Apply.apply(dictApplicative.Apply0())(pure(dictApplicative)(f))(a);
      };
    };
  };

  var applicativeArray = new Applicative(function () {
    return Control_Apply.applyArray;
  }, function (x) {
    return [x];
  });
  exports["Applicative"] = Applicative;
  exports["pure"] = pure;
  exports["liftA1"] = liftA1;
  exports["when"] = when;
  exports["applicativeArray"] = applicativeArray;
})(PS);

(function (exports) {
  "use strict";

  exports.arrayBind = function (arr) {
    return function (f) {
      var result = [];

      for (var i = 0, l = arr.length; i < l; i++) {
        Array.prototype.push.apply(result, f(arr[i]));
      }

      return result;
    };
  };
})(PS["Control.Bind"] = PS["Control.Bind"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Bind"] = $PS["Control.Bind"] || {};
  var exports = $PS["Control.Bind"];
  var $foreign = $PS["Control.Bind"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Function = $PS["Data.Function"];

  var Discard = function Discard(discard) {
    this.discard = discard;
  };

  var Bind = function Bind(Apply0, bind) {
    this.Apply0 = Apply0;
    this.bind = bind;
  };

  var discard = function discard(dict) {
    return dict.discard;
  };

  var bindArray = new Bind(function () {
    return Control_Apply.applyArray;
  }, $foreign.arrayBind);

  var bind = function bind(dict) {
    return dict.bind;
  };

  var bindFlipped = function bindFlipped(dictBind) {
    return Data_Function.flip(bind(dictBind));
  };

  var composeKleisliFlipped = function composeKleisliFlipped(dictBind) {
    return function (f) {
      return function (g) {
        return function (a) {
          return bindFlipped(dictBind)(f)(g(a));
        };
      };
    };
  };

  var composeKleisli = function composeKleisli(dictBind) {
    return function (f) {
      return function (g) {
        return function (a) {
          return bind(dictBind)(f(a))(g);
        };
      };
    };
  };

  var discardUnit = new Discard(function (dictBind) {
    return bind(dictBind);
  });

  var join = function join(dictBind) {
    return function (m) {
      return bind(dictBind)(m)(Control_Category.identity(Control_Category.categoryFn));
    };
  };

  exports["Bind"] = Bind;
  exports["bind"] = bind;
  exports["bindFlipped"] = bindFlipped;
  exports["Discard"] = Discard;
  exports["discard"] = discard;
  exports["join"] = join;
  exports["composeKleisli"] = composeKleisli;
  exports["composeKleisliFlipped"] = composeKleisliFlipped;
  exports["bindArray"] = bindArray;
  exports["discardUnit"] = discardUnit;
})(PS);

(function (exports) {
  "use strict"; //------------------------------------------------------------------------------
  // Array creation --------------------------------------------------------------
  //------------------------------------------------------------------------------

  exports.range = function (start) {
    return function (end) {
      var step = start > end ? -1 : 1;
      var result = new Array(step * (end - start) + 1);
      var i = start,
          n = 0;

      while (i !== end) {
        result[n++] = i;
        i += step;
      }

      result[n] = i;
      return result;
    };
  };

  exports.fromFoldableImpl = function () {
    function Cons(head, tail) {
      this.head = head;
      this.tail = tail;
    }

    var emptyList = {};

    function curryCons(head) {
      return function (tail) {
        return new Cons(head, tail);
      };
    }

    function listToArray(list) {
      var result = [];
      var count = 0;
      var xs = list;

      while (xs !== emptyList) {
        result[count++] = xs.head;
        xs = xs.tail;
      }

      return result;
    }

    return function (foldr) {
      return function (xs) {
        return listToArray(foldr(curryCons)(emptyList)(xs));
      };
    };
  }(); //------------------------------------------------------------------------------
  // Array size ------------------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.length = function (xs) {
    return xs.length;
  }; //------------------------------------------------------------------------------
  // Extending arrays ------------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.cons = function (e) {
    return function (l) {
      return [e].concat(l);
    };
  }; //------------------------------------------------------------------------------
  // Non-indexed reads -----------------------------------------------------------
  //------------------------------------------------------------------------------


  exports["uncons'"] = function (empty) {
    return function (next) {
      return function (xs) {
        return xs.length === 0 ? empty({}) : next(xs[0])(xs.slice(1));
      };
    };
  }; //------------------------------------------------------------------------------
  // Indexed operations ----------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.indexImpl = function (just) {
    return function (nothing) {
      return function (xs) {
        return function (i) {
          return i < 0 || i >= xs.length ? nothing : just(xs[i]);
        };
      };
    };
  };

  exports.concat = function (xss) {
    if (xss.length <= 10000) {
      // This method is faster, but it crashes on big arrays.
      // So we use it when can and fallback to simple variant otherwise.
      return Array.prototype.concat.apply([], xss);
    }

    var result = [];

    for (var i = 0, l = xss.length; i < l; i++) {
      var xs = xss[i];

      for (var j = 0, m = xs.length; j < m; j++) {
        result.push(xs[j]);
      }
    }

    return result;
  }; //------------------------------------------------------------------------------
  // Sorting ---------------------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.sortImpl = function (f) {
    return function (l) {
      return l.slice().sort(function (x, y) {
        return f(x)(y);
      });
    };
  }; //------------------------------------------------------------------------------
  // Subarrays -------------------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.slice = function (s) {
    return function (e) {
      return function (l) {
        return l.slice(s, e);
      };
    };
  };

  exports.drop = function (n) {
    return function (l) {
      return n < 1 ? l : l.slice(n);
    };
  }; //------------------------------------------------------------------------------
  // Zipping ---------------------------------------------------------------------
  //------------------------------------------------------------------------------


  exports.zipWith = function (f) {
    return function (xs) {
      return function (ys) {
        var l = xs.length < ys.length ? xs.length : ys.length;
        var result = new Array(l);

        for (var i = 0; i < l; i++) {
          result[i] = f(xs[i])(ys[i]);
        }

        return result;
      };
    };
  };
})(PS["Data.Array"] = PS["Data.Array"] || {});

(function (exports) {
  "use strict";

  exports.foldrArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;

        for (var i = len - 1; i >= 0; i--) {
          acc = f(xs[i])(acc);
        }

        return acc;
      };
    };
  };

  exports.foldlArray = function (f) {
    return function (init) {
      return function (xs) {
        var acc = init;
        var len = xs.length;

        for (var i = 0; i < len; i++) {
          acc = f(acc)(xs[i]);
        }

        return acc;
      };
    };
  };
})(PS["Data.Foldable"] = PS["Data.Foldable"] || {});

(function (exports) {
  "use strict";

  exports.refEq = function (r1) {
    return function (r2) {
      return r1 === r2;
    };
  };

  exports.eqArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        if (xs === ys) return true;
        if (xs.length !== ys.length) return false;

        for (var i = 0; i < xs.length; i++) {
          if (!f(xs[i])(ys[i])) return false;
        }

        return true;
      };
    };
  };
})(PS["Data.Eq"] = PS["Data.Eq"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Eq"] = $PS["Data.Eq"] || {};
  var exports = $PS["Data.Eq"];
  var $foreign = $PS["Data.Eq"];

  var Eq = function Eq(eq) {
    this.eq = eq;
  };

  var eqVoid = new Eq(function (v) {
    return function (v1) {
      return true;
    };
  });
  var eqString = new Eq($foreign.refEq);
  var eqNumber = new Eq($foreign.refEq);
  var eqInt = new Eq($foreign.refEq);
  var eqChar = new Eq($foreign.refEq);
  var eqBoolean = new Eq($foreign.refEq);

  var eq = function eq(dict) {
    return dict.eq;
  };

  var eqArray = function eqArray(dictEq) {
    return new Eq($foreign.eqArrayImpl(eq(dictEq)));
  };

  var notEq = function notEq(dictEq) {
    return function (x) {
      return function (y) {
        return eq(eqBoolean)(eq(dictEq)(x)(y))(false);
      };
    };
  };

  exports["Eq"] = Eq;
  exports["eq"] = eq;
  exports["notEq"] = notEq;
  exports["eqBoolean"] = eqBoolean;
  exports["eqInt"] = eqInt;
  exports["eqNumber"] = eqNumber;
  exports["eqChar"] = eqChar;
  exports["eqString"] = eqString;
  exports["eqVoid"] = eqVoid;
  exports["eqArray"] = eqArray;
})(PS);

(function (exports) {
  "use strict";

  exports.boolConj = function (b1) {
    return function (b2) {
      return b1 && b2;
    };
  };

  exports.boolDisj = function (b1) {
    return function (b2) {
      return b1 || b2;
    };
  };

  exports.boolNot = function (b) {
    return !b;
  };
})(PS["Data.HeytingAlgebra"] = PS["Data.HeytingAlgebra"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.HeytingAlgebra"] = $PS["Data.HeytingAlgebra"] || {};
  var exports = $PS["Data.HeytingAlgebra"];
  var $foreign = $PS["Data.HeytingAlgebra"];

  var HeytingAlgebra = function HeytingAlgebra(conj, disj, ff, implies, not, tt) {
    this.conj = conj;
    this.disj = disj;
    this.ff = ff;
    this.implies = implies;
    this.not = not;
    this.tt = tt;
  };

  var tt = function tt(dict) {
    return dict.tt;
  };

  var not = function not(dict) {
    return dict.not;
  };

  var implies = function implies(dict) {
    return dict.implies;
  };

  var ff = function ff(dict) {
    return dict.ff;
  };

  var disj = function disj(dict) {
    return dict.disj;
  };

  var heytingAlgebraBoolean = new HeytingAlgebra($foreign.boolConj, $foreign.boolDisj, false, function (a) {
    return function (b) {
      return disj(heytingAlgebraBoolean)(not(heytingAlgebraBoolean)(a))(b);
    };
  }, $foreign.boolNot, true);

  var conj = function conj(dict) {
    return dict.conj;
  };

  var heytingAlgebraFunction = function heytingAlgebraFunction(dictHeytingAlgebra) {
    return new HeytingAlgebra(function (f) {
      return function (g) {
        return function (a) {
          return conj(dictHeytingAlgebra)(f(a))(g(a));
        };
      };
    }, function (f) {
      return function (g) {
        return function (a) {
          return disj(dictHeytingAlgebra)(f(a))(g(a));
        };
      };
    }, function (v) {
      return ff(dictHeytingAlgebra);
    }, function (f) {
      return function (g) {
        return function (a) {
          return implies(dictHeytingAlgebra)(f(a))(g(a));
        };
      };
    }, function (f) {
      return function (a) {
        return not(dictHeytingAlgebra)(f(a));
      };
    }, function (v) {
      return tt(dictHeytingAlgebra);
    });
  };

  exports["HeytingAlgebra"] = HeytingAlgebra;
  exports["tt"] = tt;
  exports["ff"] = ff;
  exports["implies"] = implies;
  exports["conj"] = conj;
  exports["disj"] = disj;
  exports["not"] = not;
  exports["heytingAlgebraBoolean"] = heytingAlgebraBoolean;
  exports["heytingAlgebraFunction"] = heytingAlgebraFunction;
})(PS);

(function (exports) {
  "use strict";

  exports.concatString = function (s1) {
    return function (s2) {
      return s1 + s2;
    };
  };

  exports.concatArray = function (xs) {
    return function (ys) {
      if (xs.length === 0) return ys;
      if (ys.length === 0) return xs;
      return xs.concat(ys);
    };
  };
})(PS["Data.Semigroup"] = PS["Data.Semigroup"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Semigroup"] = $PS["Data.Semigroup"] || {};
  var exports = $PS["Data.Semigroup"];
  var $foreign = $PS["Data.Semigroup"];

  var Semigroup = function Semigroup(append) {
    this.append = append;
  };

  var semigroupString = new Semigroup($foreign.concatString);
  var semigroupArray = new Semigroup($foreign.concatArray);

  var append = function append(dict) {
    return dict.append;
  };

  var semigroupFn = function semigroupFn(dictSemigroup) {
    return new Semigroup(function (f) {
      return function (g) {
        return function (x) {
          return append(dictSemigroup)(f(x))(g(x));
        };
      };
    });
  };

  exports["Semigroup"] = Semigroup;
  exports["append"] = append;
  exports["semigroupString"] = semigroupString;
  exports["semigroupFn"] = semigroupFn;
  exports["semigroupArray"] = semigroupArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Alt"] = $PS["Control.Alt"] || {};
  var exports = $PS["Control.Alt"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Alt = function Alt(Functor0, alt) {
    this.Functor0 = Functor0;
    this.alt = alt;
  };

  var altArray = new Alt(function () {
    return Data_Functor.functorArray;
  }, Data_Semigroup.append(Data_Semigroup.semigroupArray));

  var alt = function alt(dict) {
    return dict.alt;
  };

  exports["Alt"] = Alt;
  exports["alt"] = alt;
  exports["altArray"] = altArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Plus"] = $PS["Control.Plus"] || {};
  var exports = $PS["Control.Plus"];
  var Control_Alt = $PS["Control.Alt"];

  var Plus = function Plus(Alt0, empty) {
    this.Alt0 = Alt0;
    this.empty = empty;
  };

  var plusArray = new Plus(function () {
    return Control_Alt.altArray;
  }, []);

  var empty = function empty(dict) {
    return dict.empty;
  };

  exports["Plus"] = Plus;
  exports["empty"] = empty;
  exports["plusArray"] = plusArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Alternative"] = $PS["Control.Alternative"] || {};
  var exports = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Plus = $PS["Control.Plus"];

  var Alternative = function Alternative(Applicative0, Plus1) {
    this.Applicative0 = Applicative0;
    this.Plus1 = Plus1;
  };

  var alternativeArray = new Alternative(function () {
    return Control_Applicative.applicativeArray;
  }, function () {
    return Control_Plus.plusArray;
  });
  exports["Alternative"] = Alternative;
  exports["alternativeArray"] = alternativeArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad"] = $PS["Control.Monad"] || {};
  var exports = $PS["Control.Monad"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];

  var Monad = function Monad(Applicative0, Bind1) {
    this.Applicative0 = Applicative0;
    this.Bind1 = Bind1;
  };

  var ap = function ap(dictMonad) {
    return function (f) {
      return function (a) {
        return Control_Bind.bind(dictMonad.Bind1())(f)(function (v) {
          return Control_Bind.bind(dictMonad.Bind1())(a)(function (v1) {
            return Control_Applicative.pure(dictMonad.Applicative0())(v(v1));
          });
        });
      };
    };
  };

  exports["Monad"] = Monad;
  exports["ap"] = ap;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.MonadZero"] = $PS["Control.MonadZero"] || {};
  var exports = $PS["Control.MonadZero"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Unit = $PS["Data.Unit"];

  var MonadZero = function MonadZero(Alternative1, Monad0) {
    this.Alternative1 = Alternative1;
    this.Monad0 = Monad0;
  };

  var guard = function guard(dictMonadZero) {
    return function (v) {
      if (v) {
        return Control_Applicative.pure(dictMonadZero.Alternative1().Applicative0())(Data_Unit.unit);
      }

      ;

      if (!v) {
        return Control_Plus.empty(dictMonadZero.Alternative1().Plus1());
      }

      ;
      throw new Error("Failed pattern match at Control.MonadZero (line 54, column 1 - line 54, column 52): " + [v.constructor.name]);
    };
  };

  exports["MonadZero"] = MonadZero;
  exports["guard"] = guard;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Monoid"] = $PS["Data.Monoid"] || {};
  var exports = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Monoid = function Monoid(Semigroup0, mempty) {
    this.Semigroup0 = Semigroup0;
    this.mempty = mempty;
  };

  var monoidString = new Monoid(function () {
    return Data_Semigroup.semigroupString;
  }, "");
  var monoidArray = new Monoid(function () {
    return Data_Semigroup.semigroupArray;
  }, []);

  var mempty = function mempty(dict) {
    return dict.mempty;
  };

  var monoidFn = function monoidFn(dictMonoid) {
    return new Monoid(function () {
      return Data_Semigroup.semigroupFn(dictMonoid.Semigroup0());
    }, function (v) {
      return mempty(dictMonoid);
    });
  };

  exports["Monoid"] = Monoid;
  exports["mempty"] = mempty;
  exports["monoidFn"] = monoidFn;
  exports["monoidString"] = monoidString;
  exports["monoidArray"] = monoidArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Maybe"] = $PS["Data.Maybe"] || {};
  var exports = $PS["Data.Maybe"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_MonadZero = $PS["Control.MonadZero"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Nothing = function () {
    function Nothing() {}

    ;
    Nothing.value = new Nothing();
    return Nothing;
  }();

  var Just = function () {
    function Just(value0) {
      this.value0 = value0;
    }

    ;

    Just.create = function (value0) {
      return new Just(value0);
    };

    return Just;
  }();

  var semigroupMaybe = function semigroupMaybe(dictSemigroup) {
    return new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
        if (v instanceof Nothing) {
          return v1;
        }

        ;

        if (v1 instanceof Nothing) {
          return v;
        }

        ;

        if (v instanceof Just && v1 instanceof Just) {
          return new Just(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Maybe (line 174, column 1 - line 174, column 62): " + [v.constructor.name, v1.constructor.name]);
      };
    });
  };

  var monoidMaybe = function monoidMaybe(dictSemigroup) {
    return new Data_Monoid.Monoid(function () {
      return semigroupMaybe(dictSemigroup);
    }, Nothing.value);
  };

  var maybe = function maybe(v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Nothing) {
          return v;
        }

        ;

        if (v2 instanceof Just) {
          return v1(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Maybe (line 217, column 1 - line 217, column 51): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };

  var isNothing = maybe(true)(Data_Function["const"](false));
  var isJust = maybe(false)(Data_Function["const"](true));
  var functorMaybe = new Data_Functor.Functor(function (v) {
    return function (v1) {
      if (v1 instanceof Just) {
        return new Just(v(v1.value0));
      }

      ;
      return Nothing.value;
    };
  });

  var fromMaybe = function fromMaybe(a) {
    return maybe(a)(Control_Category.identity(Control_Category.categoryFn));
  };

  var fromJust = function fromJust(dictPartial) {
    return function (v) {
      if (v instanceof Just) {
        return v.value0;
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 268, column 1 - line 268, column 46): " + [v.constructor.name]);
    };
  };

  var applyMaybe = new Control_Apply.Apply(function () {
    return functorMaybe;
  }, function (v) {
    return function (v1) {
      if (v instanceof Just) {
        return Data_Functor.map(functorMaybe)(v.value0)(v1);
      }

      ;

      if (v instanceof Nothing) {
        return Nothing.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 67, column 1 - line 67, column 35): " + [v.constructor.name, v1.constructor.name]);
    };
  });
  var bindMaybe = new Control_Bind.Bind(function () {
    return applyMaybe;
  }, function (v) {
    return function (v1) {
      if (v instanceof Just) {
        return v1(v.value0);
      }

      ;

      if (v instanceof Nothing) {
        return Nothing.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Maybe (line 125, column 1 - line 125, column 33): " + [v.constructor.name, v1.constructor.name]);
    };
  });
  var applicativeMaybe = new Control_Applicative.Applicative(function () {
    return applyMaybe;
  }, Just.create);
  var monadMaybe = new Control_Monad.Monad(function () {
    return applicativeMaybe;
  }, function () {
    return bindMaybe;
  });
  var altMaybe = new Control_Alt.Alt(function () {
    return functorMaybe;
  }, function (v) {
    return function (v1) {
      if (v instanceof Nothing) {
        return v1;
      }

      ;
      return v;
    };
  });
  var plusMaybe = new Control_Plus.Plus(function () {
    return altMaybe;
  }, Nothing.value);
  var alternativeMaybe = new Control_Alternative.Alternative(function () {
    return applicativeMaybe;
  }, function () {
    return plusMaybe;
  });
  var monadZeroMaybe = new Control_MonadZero.MonadZero(function () {
    return alternativeMaybe;
  }, function () {
    return monadMaybe;
  });
  exports["Nothing"] = Nothing;
  exports["Just"] = Just;
  exports["maybe"] = maybe;
  exports["fromMaybe"] = fromMaybe;
  exports["isJust"] = isJust;
  exports["isNothing"] = isNothing;
  exports["fromJust"] = fromJust;
  exports["functorMaybe"] = functorMaybe;
  exports["applyMaybe"] = applyMaybe;
  exports["applicativeMaybe"] = applicativeMaybe;
  exports["altMaybe"] = altMaybe;
  exports["plusMaybe"] = plusMaybe;
  exports["alternativeMaybe"] = alternativeMaybe;
  exports["bindMaybe"] = bindMaybe;
  exports["monadMaybe"] = monadMaybe;
  exports["monadZeroMaybe"] = monadZeroMaybe;
  exports["semigroupMaybe"] = semigroupMaybe;
  exports["monoidMaybe"] = monoidMaybe;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Monoid.Disj"] = $PS["Data.Monoid.Disj"] || {};
  var exports = $PS["Data.Monoid.Disj"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Disj = function Disj(x) {
    return x;
  };

  var semigroupDisj = function semigroupDisj(dictHeytingAlgebra) {
    return new Data_Semigroup.Semigroup(function (v) {
      return function (v1) {
        return Data_HeytingAlgebra.disj(dictHeytingAlgebra)(v)(v1);
      };
    });
  };

  var monoidDisj = function monoidDisj(dictHeytingAlgebra) {
    return new Data_Monoid.Monoid(function () {
      return semigroupDisj(dictHeytingAlgebra);
    }, Data_HeytingAlgebra.ff(dictHeytingAlgebra));
  };

  exports["Disj"] = Disj;
  exports["semigroupDisj"] = semigroupDisj;
  exports["monoidDisj"] = monoidDisj;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Newtype"] = $PS["Data.Newtype"] || {};
  var exports = $PS["Data.Newtype"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];

  var Newtype = function Newtype(unwrap, wrap) {
    this.unwrap = unwrap;
    this.wrap = wrap;
  };

  var wrap = function wrap(dict) {
    return dict.wrap;
  };

  var unwrap = function unwrap(dict) {
    return dict.unwrap;
  };

  var under = function under(dictNewtype) {
    return function (dictNewtype1) {
      return function (v) {
        return function (f) {
          return function ($71) {
            return unwrap(dictNewtype1)(f(wrap(dictNewtype)($71)));
          };
        };
      };
    };
  };

  var newtypeDisj = new Newtype(function (v) {
    return v;
  }, Data_Monoid_Disj.Disj);

  var alaF = function alaF(dictFunctor) {
    return function (dictFunctor1) {
      return function (dictNewtype) {
        return function (dictNewtype1) {
          return function (v) {
            return function (f) {
              return function ($80) {
                return Data_Functor.map(dictFunctor1)(unwrap(dictNewtype1))(f(Data_Functor.map(dictFunctor)(wrap(dictNewtype))($80)));
              };
            };
          };
        };
      };
    };
  };

  exports["unwrap"] = unwrap;
  exports["wrap"] = wrap;
  exports["Newtype"] = Newtype;
  exports["alaF"] = alaF;
  exports["under"] = under;
  exports["newtypeDisj"] = newtypeDisj;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Foldable"] = $PS["Data.Foldable"] || {};
  var exports = $PS["Data.Foldable"];
  var $foreign = $PS["Data.Foldable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Monoid_Disj = $PS["Data.Monoid.Disj"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Unit = $PS["Data.Unit"];

  var Foldable = function Foldable(foldMap, foldl, foldr) {
    this.foldMap = foldMap;
    this.foldl = foldl;
    this.foldr = foldr;
  };

  var foldr = function foldr(dict) {
    return dict.foldr;
  };

  var traverse_ = function traverse_(dictApplicative) {
    return function (dictFoldable) {
      return function (f) {
        return foldr(dictFoldable)(function ($195) {
          return Control_Apply.applySecond(dictApplicative.Apply0())(f($195));
        })(Control_Applicative.pure(dictApplicative)(Data_Unit.unit));
      };
    };
  };

  var for_ = function for_(dictApplicative) {
    return function (dictFoldable) {
      return Data_Function.flip(traverse_(dictApplicative)(dictFoldable));
    };
  };

  var sequence_ = function sequence_(dictApplicative) {
    return function (dictFoldable) {
      return traverse_(dictApplicative)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
    };
  };

  var foldl = function foldl(dict) {
    return dict.foldl;
  };

  var indexl = function indexl(dictFoldable) {
    return function (idx) {
      var go = function go(cursor) {
        return function (a) {
          if (cursor.elem instanceof Data_Maybe.Just) {
            return cursor;
          }

          ;
          var $109 = cursor.pos === idx;

          if ($109) {
            return {
              elem: new Data_Maybe.Just(a),
              pos: cursor.pos
            };
          }

          ;
          return {
            pos: cursor.pos + 1 | 0,
            elem: cursor.elem
          };
        };
      };

      return function ($196) {
        return function (v) {
          return v.elem;
        }(foldl(dictFoldable)(go)({
          elem: Data_Maybe.Nothing.value,
          pos: 0
        })($196));
      };
    };
  };

  var intercalate = function intercalate(dictFoldable) {
    return function (dictMonoid) {
      return function (sep) {
        return function (xs) {
          var go = function go(v) {
            return function (x) {
              if (v.init) {
                return {
                  init: false,
                  acc: x
                };
              }

              ;
              return {
                init: false,
                acc: Data_Semigroup.append(dictMonoid.Semigroup0())(v.acc)(Data_Semigroup.append(dictMonoid.Semigroup0())(sep)(x))
              };
            };
          };

          return foldl(dictFoldable)(go)({
            init: true,
            acc: Data_Monoid.mempty(dictMonoid)
          })(xs).acc;
        };
      };
    };
  };

  var foldableMaybe = new Foldable(function (dictMonoid) {
    return function (f) {
      return function (v) {
        if (v instanceof Data_Maybe.Nothing) {
          return Data_Monoid.mempty(dictMonoid);
        }

        ;

        if (v instanceof Data_Maybe.Just) {
          return f(v.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [f.constructor.name, v.constructor.name]);
      };
    };
  }, function (v) {
    return function (z) {
      return function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return z;
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          return v(z)(v1.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
      };
    };
  }, function (v) {
    return function (z) {
      return function (v1) {
        if (v1 instanceof Data_Maybe.Nothing) {
          return z;
        }

        ;

        if (v1 instanceof Data_Maybe.Just) {
          return v(v1.value0)(z);
        }

        ;
        throw new Error("Failed pattern match at Data.Foldable (line 129, column 1 - line 129, column 41): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
      };
    };
  });

  var foldMapDefaultR = function foldMapDefaultR(dictFoldable) {
    return function (dictMonoid) {
      return function (f) {
        return foldr(dictFoldable)(function (x) {
          return function (acc) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(f(x))(acc);
          };
        })(Data_Monoid.mempty(dictMonoid));
      };
    };
  };

  var foldableArray = new Foldable(function (dictMonoid) {
    return foldMapDefaultR(foldableArray)(dictMonoid);
  }, $foreign.foldlArray, $foreign.foldrArray);

  var foldMap = function foldMap(dict) {
    return dict.foldMap;
  };

  var fold = function fold(dictFoldable) {
    return function (dictMonoid) {
      return foldMap(dictFoldable)(dictMonoid)(Control_Category.identity(Control_Category.categoryFn));
    };
  };

  var any = function any(dictFoldable) {
    return function (dictHeytingAlgebra) {
      return Data_Newtype.alaF(Data_Functor.functorFn)(Data_Functor.functorFn)(Data_Newtype.newtypeDisj)(Data_Newtype.newtypeDisj)(Data_Monoid_Disj.Disj)(foldMap(dictFoldable)(Data_Monoid_Disj.monoidDisj(dictHeytingAlgebra)));
    };
  };

  var elem = function elem(dictFoldable) {
    return function (dictEq) {
      return function ($199) {
        return any(dictFoldable)(Data_HeytingAlgebra.heytingAlgebraBoolean)(Data_Eq.eq(dictEq)($199));
      };
    };
  };

  exports["Foldable"] = Foldable;
  exports["foldr"] = foldr;
  exports["foldl"] = foldl;
  exports["foldMap"] = foldMap;
  exports["foldMapDefaultR"] = foldMapDefaultR;
  exports["fold"] = fold;
  exports["traverse_"] = traverse_;
  exports["for_"] = for_;
  exports["sequence_"] = sequence_;
  exports["intercalate"] = intercalate;
  exports["any"] = any;
  exports["elem"] = elem;
  exports["indexl"] = indexl;
  exports["foldableArray"] = foldableArray;
  exports["foldableMaybe"] = foldableMaybe;
})(PS);

(function (exports) {
  "use strict";

  exports.ordArrayImpl = function (f) {
    return function (xs) {
      return function (ys) {
        var i = 0;
        var xlen = xs.length;
        var ylen = ys.length;

        while (i < xlen && i < ylen) {
          var x = xs[i];
          var y = ys[i];
          var o = f(x)(y);

          if (o !== 0) {
            return o;
          }

          i++;
        }

        if (xlen === ylen) {
          return 0;
        } else if (xlen > ylen) {
          return -1;
        } else {
          return 1;
        }
      };
    };
  };
})(PS["Data.Ord"] = PS["Data.Ord"] || {});

(function (exports) {
  "use strict";

  exports.unsafeCompareImpl = function (lt) {
    return function (eq) {
      return function (gt) {
        return function (x) {
          return function (y) {
            return x < y ? lt : x === y ? eq : gt;
          };
        };
      };
    };
  };
})(PS["Data.Ord.Unsafe"] = PS["Data.Ord.Unsafe"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Ordering"] = $PS["Data.Ordering"] || {};
  var exports = $PS["Data.Ordering"];

  var LT = function () {
    function LT() {}

    ;
    LT.value = new LT();
    return LT;
  }();

  var GT = function () {
    function GT() {}

    ;
    GT.value = new GT();
    return GT;
  }();

  var EQ = function () {
    function EQ() {}

    ;
    EQ.value = new EQ();
    return EQ;
  }();

  exports["LT"] = LT;
  exports["GT"] = GT;
  exports["EQ"] = EQ;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Ord.Unsafe"] = $PS["Data.Ord.Unsafe"] || {};
  var exports = $PS["Data.Ord.Unsafe"];
  var $foreign = $PS["Data.Ord.Unsafe"];
  var Data_Ordering = $PS["Data.Ordering"];
  var unsafeCompare = $foreign.unsafeCompareImpl(Data_Ordering.LT.value)(Data_Ordering.EQ.value)(Data_Ordering.GT.value);
  exports["unsafeCompare"] = unsafeCompare;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Ord"] = $PS["Data.Ord"] || {};
  var exports = $PS["Data.Ord"];
  var $foreign = $PS["Data.Ord"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ord_Unsafe = $PS["Data.Ord.Unsafe"];
  var Data_Ordering = $PS["Data.Ordering"];

  var Ord = function Ord(Eq0, compare) {
    this.Eq0 = Eq0;
    this.compare = compare;
  };

  var ordVoid = new Ord(function () {
    return Data_Eq.eqVoid;
  }, function (v) {
    return function (v1) {
      return Data_Ordering.EQ.value;
    };
  });
  var ordString = new Ord(function () {
    return Data_Eq.eqString;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordNumber = new Ord(function () {
    return Data_Eq.eqNumber;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordInt = new Ord(function () {
    return Data_Eq.eqInt;
  }, Data_Ord_Unsafe.unsafeCompare);
  var ordChar = new Ord(function () {
    return Data_Eq.eqChar;
  }, Data_Ord_Unsafe.unsafeCompare);

  var compare = function compare(dict) {
    return dict.compare;
  };

  var max = function max(dictOrd) {
    return function (x) {
      return function (y) {
        var v = compare(dictOrd)(x)(y);

        if (v instanceof Data_Ordering.LT) {
          return y;
        }

        ;

        if (v instanceof Data_Ordering.EQ) {
          return x;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return x;
        }

        ;
        throw new Error("Failed pattern match at Data.Ord (line 128, column 3 - line 131, column 12): " + [v.constructor.name]);
      };
    };
  };

  var min = function min(dictOrd) {
    return function (x) {
      return function (y) {
        var v = compare(dictOrd)(x)(y);

        if (v instanceof Data_Ordering.LT) {
          return x;
        }

        ;

        if (v instanceof Data_Ordering.EQ) {
          return x;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return y;
        }

        ;
        throw new Error("Failed pattern match at Data.Ord (line 119, column 3 - line 122, column 12): " + [v.constructor.name]);
      };
    };
  };

  var ordArray = function ordArray(dictOrd) {
    return new Ord(function () {
      return Data_Eq.eqArray(dictOrd.Eq0());
    }, function () {
      var toDelta = function toDelta(x) {
        return function (y) {
          var v = compare(dictOrd)(x)(y);

          if (v instanceof Data_Ordering.EQ) {
            return 0;
          }

          ;

          if (v instanceof Data_Ordering.LT) {
            return 1;
          }

          ;

          if (v instanceof Data_Ordering.GT) {
            return -1 | 0;
          }

          ;
          throw new Error("Failed pattern match at Data.Ord (line 66, column 7 - line 71, column 1): " + [v.constructor.name]);
        };
      };

      return function (xs) {
        return function (ys) {
          return compare(ordInt)(0)($foreign.ordArrayImpl(toDelta)(xs)(ys));
        };
      };
    }());
  };

  var clamp = function clamp(dictOrd) {
    return function (low) {
      return function (hi) {
        return function (x) {
          return min(dictOrd)(hi)(max(dictOrd)(low)(x));
        };
      };
    };
  };

  exports["Ord"] = Ord;
  exports["compare"] = compare;
  exports["min"] = min;
  exports["max"] = max;
  exports["clamp"] = clamp;
  exports["ordInt"] = ordInt;
  exports["ordNumber"] = ordNumber;
  exports["ordString"] = ordString;
  exports["ordChar"] = ordChar;
  exports["ordVoid"] = ordVoid;
  exports["ordArray"] = ordArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Array"] = $PS["Data.Array"] || {};
  var exports = $PS["Data.Array"];
  var $foreign = $PS["Data.Array"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var uncons = $foreign["uncons'"](Data_Function["const"](Data_Maybe.Nothing.value))(function (x) {
    return function (xs) {
      return new Data_Maybe.Just({
        head: x,
        tail: xs
      });
    };
  });

  var sortBy = function sortBy(comp) {
    return function (xs) {
      var comp$prime = function comp$prime(x) {
        return function (y) {
          var v = comp(x)(y);

          if (v instanceof Data_Ordering.GT) {
            return 1;
          }

          ;

          if (v instanceof Data_Ordering.EQ) {
            return 0;
          }

          ;

          if (v instanceof Data_Ordering.LT) {
            return -1 | 0;
          }

          ;
          throw new Error("Failed pattern match at Data.Array (line 702, column 15 - line 707, column 1): " + [v.constructor.name]);
        };
      };

      return $foreign.sortImpl(comp$prime)(xs);
    };
  };

  var sort = function sort(dictOrd) {
    return function (xs) {
      return sortBy(Data_Ord.compare(dictOrd))(xs);
    };
  };

  var singleton = function singleton(a) {
    return [a];
  };

  var $$null = function $$null(xs) {
    return $foreign.length(xs) === 0;
  };

  var mapWithIndex = function mapWithIndex(f) {
    return function (xs) {
      return $foreign.zipWith(f)($foreign.range(0)($foreign.length(xs) - 1 | 0))(xs);
    };
  };

  var index = $foreign.indexImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

  var head = function head(xs) {
    return index(xs)(0);
  };

  var fromFoldable = function fromFoldable(dictFoldable) {
    return $foreign.fromFoldableImpl(Data_Foldable.foldr(dictFoldable));
  };

  var concatMap = Data_Function.flip(Control_Bind.bind(Control_Bind.bindArray));

  var mapMaybe = function mapMaybe(f) {
    return concatMap(function ($117) {
      return Data_Maybe.maybe([])(singleton)(f($117));
    });
  };

  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["null"] = $$null;
  exports["head"] = head;
  exports["uncons"] = uncons;
  exports["index"] = index;
  exports["concatMap"] = concatMap;
  exports["mapMaybe"] = mapMaybe;
  exports["mapWithIndex"] = mapWithIndex;
  exports["sort"] = sort;
  exports["sortBy"] = sortBy;
  exports["range"] = $foreign.range;
  exports["length"] = $foreign.length;
  exports["cons"] = $foreign.cons;
  exports["drop"] = $foreign.drop;
})(PS);

(function (exports) {
  "use strict"; // module Unsafe.Coerce

  exports.unsafeCoerce = function (x) {
    return x;
  };
})(PS["Unsafe.Coerce"] = PS["Unsafe.Coerce"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Unsafe.Coerce"] = $PS["Unsafe.Coerce"] || {};
  var exports = $PS["Unsafe.Coerce"];
  var $foreign = $PS["Unsafe.Coerce"];
  exports["unsafeCoerce"] = $foreign.unsafeCoerce;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Array.NonEmpty"] = $PS["Data.Array.NonEmpty"] || {};
  var exports = $PS["Data.Array.NonEmpty"];
  var Data_Array = $PS["Data.Array"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var toArray = Unsafe_Coerce.unsafeCoerce;

  var adaptAny = function adaptAny(f) {
    return function ($54) {
      return f(toArray($54));
    };
  };

  var index = adaptAny(Data_Array.index);
  exports["toArray"] = toArray;
  exports["index"] = index;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Boolean"] = $PS["Data.Boolean"] || {};
  var exports = $PS["Data.Boolean"];
  var otherwise = true;
  exports["otherwise"] = otherwise;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Bifunctor"] = $PS["Data.Bifunctor"] || {};
  var exports = $PS["Data.Bifunctor"];
  var Control_Category = $PS["Control.Category"];

  var Bifunctor = function Bifunctor(bimap) {
    this.bimap = bimap;
  };

  var bimap = function bimap(dict) {
    return dict.bimap;
  };

  var rmap = function rmap(dictBifunctor) {
    return bimap(dictBifunctor)(Control_Category.identity(Control_Category.categoryFn));
  };

  exports["bimap"] = bimap;
  exports["Bifunctor"] = Bifunctor;
  exports["rmap"] = rmap;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Either"] = $PS["Data.Either"] || {};
  var exports = $PS["Data.Either"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];

  var Left = function () {
    function Left(value0) {
      this.value0 = value0;
    }

    ;

    Left.create = function (value0) {
      return new Left(value0);
    };

    return Left;
  }();

  var Right = function () {
    function Right(value0) {
      this.value0 = value0;
    }

    ;

    Right.create = function (value0) {
      return new Right(value0);
    };

    return Right;
  }();

  var functorEither = new Data_Functor.Functor(function (f) {
    return function (m) {
      if (m instanceof Left) {
        return new Left(m.value0);
      }

      ;

      if (m instanceof Right) {
        return new Right(f(m.value0));
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 38, column 8 - line 38, column 52): " + [m.constructor.name]);
    };
  });
  var foldableEither = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
      return function (v) {
        if (v instanceof Left) {
          return Data_Monoid.mempty(dictMonoid);
        }

        ;

        if (v instanceof Right) {
          return f(v.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 187, column 47): " + [f.constructor.name, v.constructor.name]);
      };
    };
  }, function (v) {
    return function (z) {
      return function (v1) {
        if (v1 instanceof Left) {
          return z;
        }

        ;

        if (v1 instanceof Right) {
          return v(z)(v1.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 187, column 47): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
      };
    };
  }, function (v) {
    return function (z) {
      return function (v1) {
        if (v1 instanceof Left) {
          return z;
        }

        ;

        if (v1 instanceof Right) {
          return v(v1.value0)(z);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 187, column 1 - line 187, column 47): " + [v.constructor.name, z.constructor.name, v1.constructor.name]);
      };
    };
  });

  var eqEither = function eqEither(dictEq) {
    return function (dictEq1) {
      return new Data_Eq.Eq(function (x) {
        return function (y) {
          if (x instanceof Left && y instanceof Left) {
            return Data_Eq.eq(dictEq)(x.value0)(y.value0);
          }

          ;

          if (x instanceof Right && y instanceof Right) {
            return Data_Eq.eq(dictEq1)(x.value0)(y.value0);
          }

          ;
          return false;
        };
      });
    };
  };

  var ordEither = function ordEither(dictOrd) {
    return function (dictOrd1) {
      return new Data_Ord.Ord(function () {
        return eqEither(dictOrd.Eq0())(dictOrd1.Eq0());
      }, function (x) {
        return function (y) {
          if (x instanceof Left && y instanceof Left) {
            return Data_Ord.compare(dictOrd)(x.value0)(y.value0);
          }

          ;

          if (x instanceof Left) {
            return Data_Ordering.LT.value;
          }

          ;

          if (y instanceof Left) {
            return Data_Ordering.GT.value;
          }

          ;

          if (x instanceof Right && y instanceof Right) {
            return Data_Ord.compare(dictOrd1)(x.value0)(y.value0);
          }

          ;
          throw new Error("Failed pattern match at Data.Either (line 179, column 8 - line 179, column 64): " + [x.constructor.name, y.constructor.name]);
        };
      });
    };
  };

  var either = function either(v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Left) {
          return v(v2.value0);
        }

        ;

        if (v2 instanceof Right) {
          return v1(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 238, column 1 - line 238, column 64): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };

  var bifunctorEither = new Data_Bifunctor.Bifunctor(function (v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Left) {
          return new Left(v(v2.value0));
        }

        ;

        if (v2 instanceof Right) {
          return new Right(v1(v2.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Either (line 46, column 1 - line 46, column 45): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  });
  var applyEither = new Control_Apply.Apply(function () {
    return functorEither;
  }, function (v) {
    return function (v1) {
      if (v instanceof Left) {
        return new Left(v.value0);
      }

      ;

      if (v instanceof Right) {
        return Data_Functor.map(functorEither)(v.value0)(v1);
      }

      ;
      throw new Error("Failed pattern match at Data.Either (line 82, column 1 - line 82, column 41): " + [v.constructor.name, v1.constructor.name]);
    };
  });
  exports["Left"] = Left;
  exports["Right"] = Right;
  exports["either"] = either;
  exports["functorEither"] = functorEither;
  exports["bifunctorEither"] = bifunctorEither;
  exports["applyEither"] = applyEither;
  exports["eqEither"] = eqEither;
  exports["ordEither"] = ordEither;
  exports["foldableEither"] = foldableEither;
})(PS);

(function (exports) {
  "use strict";

  exports.fromNumberImpl = function (just) {
    return function (nothing) {
      return function (n) {
        /* jshint bitwise: false */
        return (n | 0) === n ? just(n) : nothing;
      };
    };
  };

  exports.toNumber = function (n) {
    return n;
  };

  exports.fromStringAsImpl = function (just) {
    return function (nothing) {
      return function (radix) {
        var digits;

        if (radix < 11) {
          digits = "[0-" + (radix - 1).toString() + "]";
        } else if (radix === 11) {
          digits = "[0-9a]";
        } else {
          digits = "[0-9a-" + String.fromCharCode(86 + radix) + "]";
        }

        var pattern = new RegExp("^[\\+\\-]?" + digits + "+$", "i");
        return function (s) {
          /* jshint bitwise: false */
          if (pattern.test(s)) {
            var i = parseInt(s, radix);
            return (i | 0) === i ? just(i) : nothing;
          } else {
            return nothing;
          }
        };
      };
    };
  };
})(PS["Data.Int"] = PS["Data.Int"] || {});

(function (exports) {
  "use strict";

  exports.topInt = 2147483647;
  exports.bottomInt = -2147483648;
  exports.topChar = String.fromCharCode(65535);
  exports.bottomChar = String.fromCharCode(0);
})(PS["Data.Bounded"] = PS["Data.Bounded"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Bounded"] = $PS["Data.Bounded"] || {};
  var exports = $PS["Data.Bounded"];
  var $foreign = $PS["Data.Bounded"];
  var Data_Ord = $PS["Data.Ord"];

  var Bounded = function Bounded(Ord0, bottom, top) {
    this.Ord0 = Ord0;
    this.bottom = bottom;
    this.top = top;
  };

  var top = function top(dict) {
    return dict.top;
  };

  var boundedInt = new Bounded(function () {
    return Data_Ord.ordInt;
  }, $foreign.bottomInt, $foreign.topInt);
  var boundedChar = new Bounded(function () {
    return Data_Ord.ordChar;
  }, $foreign.bottomChar, $foreign.topChar);

  var bottom = function bottom(dict) {
    return dict.bottom;
  };

  exports["Bounded"] = Bounded;
  exports["bottom"] = bottom;
  exports["top"] = top;
  exports["boundedInt"] = boundedInt;
  exports["boundedChar"] = boundedChar;
})(PS);

(function (exports) {
  /* globals exports */
  "use strict";

  exports.infinity = Infinity;
  exports.isFinite = isFinite;
  exports.readFloat = parseFloat;
})(PS["Global"] = PS["Global"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Global"] = $PS["Global"] || {};
  var exports = $PS["Global"];
  var $foreign = $PS["Global"];
  exports["infinity"] = $foreign.infinity;
  exports["isFinite"] = $foreign["isFinite"];
  exports["readFloat"] = $foreign.readFloat;
})(PS);

(function (exports) {
  "use strict"; // module Math

  exports.abs = Math.abs;

  exports.remainder = function (n) {
    return function (m) {
      return n % m;
    };
  };

  exports.round = Math.round;
})(PS["Math"] = PS["Math"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Math"] = $PS["Math"] || {};
  var exports = $PS["Math"];
  var $foreign = $PS["Math"];
  exports["abs"] = $foreign.abs;
  exports["round"] = $foreign.round;
  exports["remainder"] = $foreign.remainder;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Int"] = $PS["Data.Int"] || {};
  var exports = $PS["Data.Int"];
  var $foreign = $PS["Data.Int"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Global = $PS["Global"];
  var $$Math = $PS["Math"];
  var hexadecimal = 16;
  var fromStringAs = $foreign.fromStringAsImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  var fromNumber = $foreign.fromNumberImpl(Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

  var unsafeClamp = function unsafeClamp(x) {
    if (x === Global.infinity) {
      return 0;
    }

    ;

    if (x === -Global.infinity) {
      return 0;
    }

    ;

    if (x >= $foreign.toNumber(Data_Bounded.top(Data_Bounded.boundedInt))) {
      return Data_Bounded.top(Data_Bounded.boundedInt);
    }

    ;

    if (x <= $foreign.toNumber(Data_Bounded.bottom(Data_Bounded.boundedInt))) {
      return Data_Bounded.bottom(Data_Bounded.boundedInt);
    }

    ;

    if (Data_Boolean.otherwise) {
      return Data_Maybe.fromMaybe(0)(fromNumber(x));
    }

    ;
    throw new Error("Failed pattern match at Data.Int (line 66, column 1 - line 66, column 29): " + [x.constructor.name]);
  };

  var round = function round($23) {
    return unsafeClamp($$Math.round($23));
  };

  exports["fromNumber"] = fromNumber;
  exports["round"] = round;
  exports["hexadecimal"] = hexadecimal;
  exports["fromStringAs"] = fromStringAs;
  exports["toNumber"] = $foreign.toNumber;
})(PS);

(function (exports) {
  "use strict";

  exports.showIntImpl = function (n) {
    return n.toString();
  };

  exports.showNumberImpl = function (n) {
    var str = n.toString();
    return isNaN(str + ".0") ? str : str + ".0";
  };
})(PS["Data.Show"] = PS["Data.Show"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Show"] = $PS["Data.Show"] || {};
  var exports = $PS["Data.Show"];
  var $foreign = $PS["Data.Show"];

  var Show = function Show(show) {
    this.show = show;
  };

  var showNumber = new Show($foreign.showNumberImpl);
  var showInt = new Show($foreign.showIntImpl);

  var show = function show(dict) {
    return dict.show;
  };

  exports["Show"] = Show;
  exports["show"] = show;
  exports["showInt"] = showInt;
  exports["showNumber"] = showNumber;
})(PS);

(function (exports) {
  "use strict";
  /* global Symbol */

  var hasArrayFrom = typeof Array.from === "function";
  var hasStringIterator = typeof Symbol !== "undefined" && Symbol != null && typeof Symbol.iterator !== "undefined" && typeof String.prototype[Symbol.iterator] === "function";
  var hasFromCodePoint = typeof String.prototype.fromCodePoint === "function";
  var hasCodePointAt = typeof String.prototype.codePointAt === "function";

  exports._unsafeCodePointAt0 = function (fallback) {
    return hasCodePointAt ? function (str) {
      return str.codePointAt(0);
    } : fallback;
  };

  exports._singleton = function (fallback) {
    return hasFromCodePoint ? String.fromCodePoint : fallback;
  };

  exports._take = function (fallback) {
    return function (n) {
      if (hasStringIterator) {
        return function (str) {
          var accum = "";
          var iter = str[Symbol.iterator]();

          for (var i = 0; i < n; ++i) {
            var o = iter.next();
            if (o.done) return accum;
            accum += o.value;
          }

          return accum;
        };
      }

      return fallback(n);
    };
  };

  exports._toCodePointArray = function (fallback) {
    return function (unsafeCodePointAt0) {
      if (hasArrayFrom) {
        return function (str) {
          return Array.from(str, unsafeCodePointAt0);
        };
      }

      return fallback;
    };
  };
})(PS["Data.String.CodePoints"] = PS["Data.String.CodePoints"] || {});

(function (exports) {
  "use strict";

  exports.toCharCode = function (c) {
    return c.charCodeAt(0);
  };

  exports.fromCharCode = function (c) {
    return String.fromCharCode(c);
  };
})(PS["Data.Enum"] = PS["Data.Enum"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Enum"] = $PS["Data.Enum"] || {};
  var exports = $PS["Data.Enum"];
  var $foreign = $PS["Data.Enum"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];

  var Enum = function Enum(Ord0, pred, succ) {
    this.Ord0 = Ord0;
    this.pred = pred;
    this.succ = succ;
  };

  var BoundedEnum = function BoundedEnum(Bounded0, Enum1, cardinality, fromEnum, toEnum) {
    this.Bounded0 = Bounded0;
    this.Enum1 = Enum1;
    this.cardinality = cardinality;
    this.fromEnum = fromEnum;
    this.toEnum = toEnum;
  };

  var toEnum = function toEnum(dict) {
    return dict.toEnum;
  };

  var succ = function succ(dict) {
    return dict.succ;
  };

  var pred = function pred(dict) {
    return dict.pred;
  };

  var fromEnum = function fromEnum(dict) {
    return dict.fromEnum;
  };

  var toEnumWithDefaults = function toEnumWithDefaults(dictBoundedEnum) {
    return function (low) {
      return function (high) {
        return function (x) {
          var v = toEnum(dictBoundedEnum)(x);

          if (v instanceof Data_Maybe.Just) {
            return v.value0;
          }

          ;

          if (v instanceof Data_Maybe.Nothing) {
            var $54 = x < fromEnum(dictBoundedEnum)(Data_Bounded.bottom(dictBoundedEnum.Bounded0()));

            if ($54) {
              return low;
            }

            ;
            return high;
          }

          ;
          throw new Error("Failed pattern match at Data.Enum (line 158, column 33 - line 160, column 62): " + [v.constructor.name]);
        };
      };
    };
  };

  var defaultSucc = function defaultSucc(toEnum$prime) {
    return function (fromEnum$prime) {
      return function (a) {
        return toEnum$prime(fromEnum$prime(a) + 1 | 0);
      };
    };
  };

  var defaultPred = function defaultPred(toEnum$prime) {
    return function (fromEnum$prime) {
      return function (a) {
        return toEnum$prime(fromEnum$prime(a) - 1 | 0);
      };
    };
  };

  var charToEnum = function charToEnum(v) {
    if (v >= Data_Bounded.bottom(Data_Bounded.boundedInt) && v <= Data_Bounded.top(Data_Bounded.boundedInt)) {
      return new Data_Maybe.Just($foreign.fromCharCode(v));
    }

    ;
    return Data_Maybe.Nothing.value;
  };

  var enumChar = new Enum(function () {
    return Data_Ord.ordChar;
  }, defaultPred(charToEnum)($foreign.toCharCode), defaultSucc(charToEnum)($foreign.toCharCode));

  var cardinality = function cardinality(dict) {
    return dict.cardinality;
  };

  var boundedEnumChar = new BoundedEnum(function () {
    return Data_Bounded.boundedChar;
  }, function () {
    return enumChar;
  }, $foreign.toCharCode(Data_Bounded.top(Data_Bounded.boundedChar)) - $foreign.toCharCode(Data_Bounded.bottom(Data_Bounded.boundedChar)) | 0, $foreign.toCharCode, charToEnum);
  exports["Enum"] = Enum;
  exports["succ"] = succ;
  exports["pred"] = pred;
  exports["BoundedEnum"] = BoundedEnum;
  exports["cardinality"] = cardinality;
  exports["toEnum"] = toEnum;
  exports["fromEnum"] = fromEnum;
  exports["toEnumWithDefaults"] = toEnumWithDefaults;
  exports["defaultSucc"] = defaultSucc;
  exports["defaultPred"] = defaultPred;
  exports["enumChar"] = enumChar;
  exports["boundedEnumChar"] = boundedEnumChar;
})(PS);

(function (exports) {
  "use strict";

  exports.intDegree = function (x) {
    return Math.min(Math.abs(x), 2147483647);
  }; // See the Euclidean definition in
  // https://en.m.wikipedia.org/wiki/Modulo_operation.


  exports.intDiv = function (x) {
    return function (y) {
      if (y === 0) return 0;
      return y > 0 ? Math.floor(x / y) : -Math.floor(x / -y);
    };
  };

  exports.intMod = function (x) {
    return function (y) {
      if (y === 0) return 0;
      var yy = Math.abs(y);
      return (x % yy + yy) % yy;
    };
  };
})(PS["Data.EuclideanRing"] = PS["Data.EuclideanRing"] || {});

(function (exports) {
  "use strict";

  exports.intSub = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x - y | 0;
    };
  };
})(PS["Data.Ring"] = PS["Data.Ring"] || {});

(function (exports) {
  "use strict";

  exports.intAdd = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x + y | 0;
    };
  };

  exports.intMul = function (x) {
    return function (y) {
      /* jshint bitwise: false */
      return x * y | 0;
    };
  };
})(PS["Data.Semiring"] = PS["Data.Semiring"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Semiring"] = $PS["Data.Semiring"] || {};
  var exports = $PS["Data.Semiring"];
  var $foreign = $PS["Data.Semiring"];

  var Semiring = function Semiring(add, mul, one, zero) {
    this.add = add;
    this.mul = mul;
    this.one = one;
    this.zero = zero;
  };

  var zero = function zero(dict) {
    return dict.zero;
  };

  var semiringInt = new Semiring($foreign.intAdd, $foreign.intMul, 1, 0);

  var one = function one(dict) {
    return dict.one;
  };

  var mul = function mul(dict) {
    return dict.mul;
  };

  var add = function add(dict) {
    return dict.add;
  };

  exports["Semiring"] = Semiring;
  exports["add"] = add;
  exports["zero"] = zero;
  exports["mul"] = mul;
  exports["one"] = one;
  exports["semiringInt"] = semiringInt;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Ring"] = $PS["Data.Ring"] || {};
  var exports = $PS["Data.Ring"];
  var $foreign = $PS["Data.Ring"];
  var Data_Semiring = $PS["Data.Semiring"];

  var Ring = function Ring(Semiring0, sub) {
    this.Semiring0 = Semiring0;
    this.sub = sub;
  };

  var sub = function sub(dict) {
    return dict.sub;
  };

  var ringInt = new Ring(function () {
    return Data_Semiring.semiringInt;
  }, $foreign.intSub);
  exports["Ring"] = Ring;
  exports["sub"] = sub;
  exports["ringInt"] = ringInt;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.CommutativeRing"] = $PS["Data.CommutativeRing"] || {};
  var exports = $PS["Data.CommutativeRing"];
  var Data_Ring = $PS["Data.Ring"];

  var CommutativeRing = function CommutativeRing(Ring0) {
    this.Ring0 = Ring0;
  };

  var commutativeRingInt = new CommutativeRing(function () {
    return Data_Ring.ringInt;
  });
  exports["CommutativeRing"] = CommutativeRing;
  exports["commutativeRingInt"] = commutativeRingInt;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.EuclideanRing"] = $PS["Data.EuclideanRing"] || {};
  var exports = $PS["Data.EuclideanRing"];
  var $foreign = $PS["Data.EuclideanRing"];
  var Data_CommutativeRing = $PS["Data.CommutativeRing"];

  var EuclideanRing = function EuclideanRing(CommutativeRing0, degree, div, mod) {
    this.CommutativeRing0 = CommutativeRing0;
    this.degree = degree;
    this.div = div;
    this.mod = mod;
  };

  var mod = function mod(dict) {
    return dict.mod;
  };

  var euclideanRingInt = new EuclideanRing(function () {
    return Data_CommutativeRing.commutativeRingInt;
  }, $foreign.intDegree, $foreign.intDiv, $foreign.intMod);

  var div = function div(dict) {
    return dict.div;
  };

  var degree = function degree(dict) {
    return dict.degree;
  };

  exports["EuclideanRing"] = EuclideanRing;
  exports["degree"] = degree;
  exports["div"] = div;
  exports["mod"] = mod;
  exports["euclideanRingInt"] = euclideanRingInt;
})(PS);

(function (exports) {
  "use strict";

  exports.singleton = function (c) {
    return c;
  };

  exports.length = function (s) {
    return s.length;
  };

  exports._indexOf = function (just) {
    return function (nothing) {
      return function (x) {
        return function (s) {
          var i = s.indexOf(x);
          return i === -1 ? nothing : just(i);
        };
      };
    };
  };

  exports.take = function (n) {
    return function (s) {
      return s.substr(0, n);
    };
  };

  exports.drop = function (n) {
    return function (s) {
      return s.substring(n);
    };
  };
})(PS["Data.String.CodeUnits"] = PS["Data.String.CodeUnits"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.String.CodeUnits"] = $PS["Data.String.CodeUnits"] || {};
  var exports = $PS["Data.String.CodeUnits"];
  var $foreign = $PS["Data.String.CodeUnits"];
  var Data_Maybe = $PS["Data.Maybe"];
  var indexOf = $foreign["_indexOf"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);

  var stripPrefix = function stripPrefix(v) {
    return function (str) {
      var v1 = indexOf(v)(str);

      if (v1 instanceof Data_Maybe.Just && v1.value0 === 0) {
        return Data_Maybe.Just.create($foreign.drop($foreign.length(v))(str));
      }

      ;
      return Data_Maybe.Nothing.value;
    };
  };

  var contains = function contains(pat) {
    return function ($16) {
      return Data_Maybe.isJust(indexOf(pat)($16));
    };
  };

  exports["stripPrefix"] = stripPrefix;
  exports["contains"] = contains;
  exports["indexOf"] = indexOf;
  exports["singleton"] = $foreign.singleton;
  exports["length"] = $foreign.length;
  exports["take"] = $foreign.take;
  exports["drop"] = $foreign.drop;
})(PS);

(function (exports) {
  "use strict";

  exports.charAt = function (i) {
    return function (s) {
      if (i >= 0 && i < s.length) return s.charAt(i);
      throw new Error("Data.String.Unsafe.charAt: Invalid index.");
    };
  };
})(PS["Data.String.Unsafe"] = PS["Data.String.Unsafe"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.String.Unsafe"] = $PS["Data.String.Unsafe"] || {};
  var exports = $PS["Data.String.Unsafe"];
  var $foreign = $PS["Data.String.Unsafe"];
  exports["charAt"] = $foreign.charAt;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Maybe.First"] = $PS["Data.Maybe.First"] || {};
  var exports = $PS["Data.Maybe.First"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var First = function First(x) {
    return x;
  };

  var semigroupFirst = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      if (v instanceof Data_Maybe.Just) {
        return v;
      }

      ;
      return v1;
    };
  });
  var newtypeFirst = new Data_Newtype.Newtype(function (n) {
    return n;
  }, First);
  var monoidFirst = new Data_Monoid.Monoid(function () {
    return semigroupFirst;
  }, Data_Maybe.Nothing.value);
  exports["First"] = First;
  exports["newtypeFirst"] = newtypeFirst;
  exports["semigroupFirst"] = semigroupFirst;
  exports["monoidFirst"] = monoidFirst;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Tuple"] = $PS["Data.Tuple"] || {};
  var exports = $PS["Data.Tuple"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_First = $PS["Data.Maybe.First"];
  var Data_Newtype = $PS["Data.Newtype"];

  var Tuple = function () {
    function Tuple(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Tuple.create = function (value0) {
      return function (value1) {
        return new Tuple(value0, value1);
      };
    };

    return Tuple;
  }();

  var uncurry = function uncurry(f) {
    return function (v) {
      return f(v.value0)(v.value1);
    };
  };

  var snd = function snd(v) {
    return v.value1;
  };

  var lookup = function lookup(dictFoldable) {
    return function (dictEq) {
      return function (a) {
        return function ($312) {
          return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(Data_Foldable.foldMap(dictFoldable)(Data_Maybe_First.monoidFirst)(function (v) {
            var $163 = Data_Eq.eq(dictEq)(a)(v.value0);

            if ($163) {
              return new Data_Maybe.Just(v.value1);
            }

            ;
            return Data_Maybe.Nothing.value;
          })($312));
        };
      };
    };
  };

  var functorTuple = new Data_Functor.Functor(function (f) {
    return function (m) {
      return new Tuple(m.value0, f(m.value1));
    };
  });

  var fst = function fst(v) {
    return v.value0;
  };

  exports["Tuple"] = Tuple;
  exports["fst"] = fst;
  exports["snd"] = snd;
  exports["uncurry"] = uncurry;
  exports["lookup"] = lookup;
  exports["functorTuple"] = functorTuple;
})(PS);

(function (exports) {
  "use strict";

  exports.unfoldrArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;

              while (true) {
                // eslint-disable-line no-constant-condition
                var maybe = f(value);
                if (isNothing(maybe)) return result;
                var tuple = fromJust(maybe);
                result.push(fst(tuple));
                value = snd(tuple);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable"] = PS["Data.Unfoldable"] || {});

(function (exports) {
  "use strict";

  exports.unfoldr1ArrayImpl = function (isNothing) {
    return function (fromJust) {
      return function (fst) {
        return function (snd) {
          return function (f) {
            return function (b) {
              var result = [];
              var value = b;

              while (true) {
                // eslint-disable-line no-constant-condition
                var tuple = f(value);
                result.push(fst(tuple));
                var maybe = snd(tuple);
                if (isNothing(maybe)) return result;
                value = fromJust(maybe);
              }
            };
          };
        };
      };
    };
  };
})(PS["Data.Unfoldable1"] = PS["Data.Unfoldable1"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Unfoldable1"] = $PS["Data.Unfoldable1"] || {};
  var exports = $PS["Data.Unfoldable1"];
  var $foreign = $PS["Data.Unfoldable1"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];

  var Unfoldable1 = function Unfoldable1(unfoldr1) {
    this.unfoldr1 = unfoldr1;
  };

  var unfoldr1 = function unfoldr1(dict) {
    return dict.unfoldr1;
  };

  var unfoldable1Array = new Unfoldable1($foreign.unfoldr1ArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable1"] = Unfoldable1;
  exports["unfoldr1"] = unfoldr1;
  exports["unfoldable1Array"] = unfoldable1Array;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Unfoldable"] = $PS["Data.Unfoldable"] || {};
  var exports = $PS["Data.Unfoldable"];
  var $foreign = $PS["Data.Unfoldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable1 = $PS["Data.Unfoldable1"];

  var Unfoldable = function Unfoldable(Unfoldable10, unfoldr) {
    this.Unfoldable10 = Unfoldable10;
    this.unfoldr = unfoldr;
  };

  var unfoldr = function unfoldr(dict) {
    return dict.unfoldr;
  };

  var unfoldableArray = new Unfoldable(function () {
    return Data_Unfoldable1.unfoldable1Array;
  }, $foreign.unfoldrArrayImpl(Data_Maybe.isNothing)(Data_Maybe.fromJust())(Data_Tuple.fst)(Data_Tuple.snd));
  exports["Unfoldable"] = Unfoldable;
  exports["unfoldr"] = unfoldr;
  exports["unfoldableArray"] = unfoldableArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.String.CodePoints"] = $PS["Data.String.CodePoints"] || {};
  var exports = $PS["Data.String.CodePoints"];
  var $foreign = $PS["Data.String.CodePoints"];
  var Data_Array = $PS["Data.Array"];
  var Data_Bounded = $PS["Data.Bounded"];
  var Data_Enum = $PS["Data.Enum"];
  var Data_EuclideanRing = $PS["Data.EuclideanRing"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Unsafe = $PS["Data.String.Unsafe"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unfoldable = $PS["Data.Unfoldable"];

  var unsurrogate = function unsurrogate(lead) {
    return function (trail) {
      return (((lead - 55296 | 0) * 1024 | 0) + (trail - 56320 | 0) | 0) + 65536 | 0;
    };
  };

  var isTrail = function isTrail(cu) {
    return 56320 <= cu && cu <= 57343;
  };

  var isLead = function isLead(cu) {
    return 55296 <= cu && cu <= 56319;
  };

  var uncons = function uncons(s) {
    var v = Data_String_CodeUnits.length(s);

    if (v === 0) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v === 1) {
      return new Data_Maybe.Just({
        head: Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s)),
        tail: ""
      });
    }

    ;
    var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
    var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
    var $21 = isLead(cu0) && isTrail(cu1);

    if ($21) {
      return new Data_Maybe.Just({
        head: unsurrogate(cu0)(cu1),
        tail: Data_String_CodeUnits.drop(2)(s)
      });
    }

    ;
    return new Data_Maybe.Just({
      head: cu0,
      tail: Data_String_CodeUnits.drop(1)(s)
    });
  };

  var unconsButWithTuple = function unconsButWithTuple(s) {
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v) {
      return new Data_Tuple.Tuple(v.head, v.tail);
    })(uncons(s));
  };

  var toCodePointArrayFallback = function toCodePointArrayFallback(s) {
    return Data_Unfoldable.unfoldr(Data_Unfoldable.unfoldableArray)(unconsButWithTuple)(s);
  };

  var unsafeCodePointAt0Fallback = function unsafeCodePointAt0Fallback(s) {
    var cu0 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(0)(s));
    var $25 = isLead(cu0) && Data_String_CodeUnits.length(s) > 1;

    if ($25) {
      var cu1 = Data_Enum.fromEnum(Data_Enum.boundedEnumChar)(Data_String_Unsafe.charAt(1)(s));
      var $26 = isTrail(cu1);

      if ($26) {
        return unsurrogate(cu0)(cu1);
      }

      ;
      return cu0;
    }

    ;
    return cu0;
  };

  var unsafeCodePointAt0 = $foreign["_unsafeCodePointAt0"](unsafeCodePointAt0Fallback);
  var toCodePointArray = $foreign["_toCodePointArray"](toCodePointArrayFallback)(unsafeCodePointAt0);

  var length = function length($52) {
    return Data_Array.length(toCodePointArray($52));
  };

  var indexOf = function indexOf(p) {
    return function (s) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(function (i) {
        return length(Data_String_CodeUnits.take(i)(s));
      })(Data_String_CodeUnits.indexOf(p)(s));
    };
  };

  var fromCharCode = function fromCharCode($53) {
    return Data_String_CodeUnits.singleton(Data_Enum.toEnumWithDefaults(Data_Enum.boundedEnumChar)(Data_Bounded.bottom(Data_Bounded.boundedChar))(Data_Bounded.top(Data_Bounded.boundedChar))($53));
  };

  var singletonFallback = function singletonFallback(v) {
    if (v <= 65535) {
      return fromCharCode(v);
    }

    ;
    var lead = Data_EuclideanRing.div(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 55296 | 0;
    var trail = Data_EuclideanRing.mod(Data_EuclideanRing.euclideanRingInt)(v - 65536 | 0)(1024) + 56320 | 0;
    return fromCharCode(lead) + fromCharCode(trail);
  };

  var singleton = $foreign["_singleton"](singletonFallback);

  var takeFallback = function takeFallback(n) {
    return function (v) {
      if (n < 1) {
        return "";
      }

      ;
      var v1 = uncons(v);

      if (v1 instanceof Data_Maybe.Just) {
        return singleton(v1.value0.head) + takeFallback(n - 1 | 0)(v1.value0.tail);
      }

      ;
      return v;
    };
  };

  var take = $foreign["_take"](takeFallback);

  var splitAt = function splitAt(i) {
    return function (s) {
      var before = take(i)(s);
      return {
        before: before,
        after: Data_String_CodeUnits.drop(Data_String_CodeUnits.length(before))(s)
      };
    };
  };

  var drop = function drop(n) {
    return function (s) {
      return Data_String_CodeUnits.drop(Data_String_CodeUnits.length(take(n)(s)))(s);
    };
  };

  exports["singleton"] = singleton;
  exports["toCodePointArray"] = toCodePointArray;
  exports["uncons"] = uncons;
  exports["length"] = length;
  exports["indexOf"] = indexOf;
  exports["take"] = take;
  exports["drop"] = drop;
  exports["splitAt"] = splitAt;
})(PS);

(function (exports) {
  "use strict";

  exports["regex'"] = function (left) {
    return function (right) {
      return function (s1) {
        return function (s2) {
          try {
            return right(new RegExp(s1, s2));
          } catch (e) {
            return left(e.message);
          }
        };
      };
    };
  };

  exports._match = function (just) {
    return function (nothing) {
      return function (r) {
        return function (s) {
          var m = s.match(r);

          if (m == null || m.length === 0) {
            return nothing;
          } else {
            for (var i = 0; i < m.length; i++) {
              m[i] = m[i] == null ? nothing : just(m[i]);
            }

            return just(m);
          }
        };
      };
    };
  };
})(PS["Data.String.Regex"] = PS["Data.String.Regex"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.String.Regex.Flags"] = $PS["Data.String.Regex.Flags"] || {};
  var exports = $PS["Data.String.Regex.Flags"];

  var RegexFlags = function () {
    function RegexFlags(value0) {
      this.value0 = value0;
    }

    ;

    RegexFlags.create = function (value0) {
      return new RegexFlags(value0);
    };

    return RegexFlags;
  }();

  exports["RegexFlags"] = RegexFlags;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.String.Regex"] = $PS["Data.String.Regex"] || {};
  var exports = $PS["Data.String.Regex"];
  var $foreign = $PS["Data.String.Regex"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Data_String_Regex_Flags = $PS["Data.String.Regex.Flags"];

  var renderFlags = function renderFlags(v) {
    return function () {
      if (v.value0.global) {
        return "g";
      }

      ;
      return "";
    }() + (function () {
      if (v.value0.ignoreCase) {
        return "i";
      }

      ;
      return "";
    }() + (function () {
      if (v.value0.multiline) {
        return "m";
      }

      ;
      return "";
    }() + (function () {
      if (v.value0.sticky) {
        return "y";
      }

      ;
      return "";
    }() + function () {
      if (v.value0.unicode) {
        return "u";
      }

      ;
      return "";
    }())));
  };

  var regex = function regex(s) {
    return function (f) {
      return $foreign["regex'"](Data_Either.Left.create)(Data_Either.Right.create)(s)(renderFlags(f));
    };
  };

  var parseFlags = function parseFlags(s) {
    return new Data_String_Regex_Flags.RegexFlags({
      global: Data_String_CodeUnits.contains("g")(s),
      ignoreCase: Data_String_CodeUnits.contains("i")(s),
      multiline: Data_String_CodeUnits.contains("m")(s),
      sticky: Data_String_CodeUnits.contains("y")(s),
      unicode: Data_String_CodeUnits.contains("u")(s)
    });
  };

  var match = $foreign["_match"](Data_Maybe.Just.create)(Data_Maybe.Nothing.value);
  exports["regex"] = regex;
  exports["renderFlags"] = renderFlags;
  exports["parseFlags"] = parseFlags;
  exports["match"] = match;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Color"] = $PS["Color"] || {};
  var exports = $PS["Color"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array_NonEmpty = $PS["Data.Array.NonEmpty"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Show = $PS["Data.Show"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_Regex = $PS["Data.String.Regex"];
  var $$Math = $PS["Math"];

  var HSLA = function () {
    function HSLA(value0, value1, value2, value3) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
    }

    ;

    HSLA.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return new HSLA(value0, value1, value2, value3);
          };
        };
      };
    };

    return HSLA;
  }();

  var modPos = function modPos(x) {
    return function (y) {
      return $$Math.remainder($$Math.remainder(x)(y) + y)(y);
    };
  };

  var rgba = function rgba(red$prime) {
    return function (green$prime) {
      return function (blue$prime) {
        return function (alpha) {
          var red = Data_Ord.clamp(Data_Ord.ordInt)(0)(255)(red$prime);
          var r = Data_Int.toNumber(red) / 255.0;
          var green = Data_Ord.clamp(Data_Ord.ordInt)(0)(255)(green$prime);
          var g = Data_Int.toNumber(green) / 255.0;
          var blue = Data_Ord.clamp(Data_Ord.ordInt)(0)(255)(blue$prime);
          var maxChroma = Data_Ord.max(Data_Ord.ordInt)(Data_Ord.max(Data_Ord.ordInt)(red)(green))(blue);
          var minChroma = Data_Ord.min(Data_Ord.ordInt)(Data_Ord.min(Data_Ord.ordInt)(red)(green))(blue);
          var chroma = maxChroma - minChroma | 0;
          var chroma$prime = Data_Int.toNumber(chroma) / 255.0;
          var lightness = Data_Int.toNumber(maxChroma + minChroma | 0) / (255.0 * 2.0);

          var saturation = function () {
            if (chroma === 0) {
              return 0.0;
            }

            ;

            if (Data_Boolean.otherwise) {
              return chroma$prime / (1.0 - $$Math.abs(2.0 * lightness - 1.0));
            }

            ;
            throw new Error("Failed pattern match at Color (line 157, column 5 - line 158, column 75): " + []);
          }();

          var b = Data_Int.toNumber(blue) / 255.0;

          var hue$prime = function hue$prime(v) {
            if (v === 0) {
              return 0.0;
            }

            ;

            if (maxChroma === red) {
              return modPos((g - b) / chroma$prime)(6.0);
            }

            ;

            if (maxChroma === green) {
              return (b - r) / chroma$prime + 2.0;
            }

            ;

            if (Data_Boolean.otherwise) {
              return (r - g) / chroma$prime + 4.0;
            }

            ;
            throw new Error("Failed pattern match at Color (line 148, column 5 - line 149, column 5): " + [v.constructor.name]);
          };

          var hue = 60.0 * hue$prime(chroma);
          return new HSLA(hue, saturation, lightness, alpha);
        };
      };
    };
  };

  var rgb = function rgb(r) {
    return function (g) {
      return function (b) {
        return rgba(r)(g)(b)(1.0);
      };
    };
  };

  var hsla = function hsla(h) {
    return function (s) {
      return function (l) {
        return function (a) {
          var s$prime = Data_Ord.clamp(Data_Ord.ordNumber)(0.0)(1.0)(s);
          var l$prime = Data_Ord.clamp(Data_Ord.ordNumber)(0.0)(1.0)(l);
          var a$prime = Data_Ord.clamp(Data_Ord.ordNumber)(0.0)(1.0)(a);
          return new HSLA(h, s$prime, l$prime, a$prime);
        };
      };
    };
  };

  var hsl = function hsl(h) {
    return function (s) {
      return function (l) {
        return hsla(h)(s)(l)(1.0);
      };
    };
  };

  var white = hsl(0.0)(0.0)(1.0);

  var fromHexString = function fromHexString(str) {
    var parseHex = function parseHex($111) {
      return Data_Maybe.fromMaybe(0)(Data_Int.fromStringAs(Data_Int.hexadecimal)($111));
    };

    var isShort = Data_String_CodePoints.length(str) === 4;
    var hush = Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(Data_Maybe.Just.create);
    var pair = "(" + ("[0-9a-f]" + ("[0-9a-f]" + ")"));
    var single = "(" + ("[0-9a-f]" + ")");

    var variant = function () {
      if (isShort) {
        return single + (single + single);
      }

      ;
      return pair + (pair + pair);
    }();

    var mPattern = Data_String_Regex.regex("^#(?:" + (variant + ")$"))(Data_String_Regex.parseFlags("i"));
    return Control_Bind.bind(Data_Maybe.bindMaybe)(hush(mPattern))(function (v) {
      return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_String_Regex.match(v)(str))(function (v1) {
        return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(parseHex)(Control_Bind.join(Data_Maybe.bindMaybe)(Data_Array_NonEmpty.index(v1)(1))))(function (v2) {
          return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(parseHex)(Control_Bind.join(Data_Maybe.bindMaybe)(Data_Array_NonEmpty.index(v1)(2))))(function (v3) {
            return Control_Bind.bind(Data_Maybe.bindMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(parseHex)(Control_Bind.join(Data_Maybe.bindMaybe)(Data_Array_NonEmpty.index(v1)(3))))(function (v4) {
              if (isShort) {
                return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(rgb((16 * v2 | 0) + v2 | 0)((16 * v3 | 0) + v3 | 0)((16 * v4 | 0) + v4 | 0));
              }

              ;
              return Control_Applicative.pure(Data_Maybe.applicativeMaybe)(rgb(v2)(v3)(v4));
            });
          });
        });
      });
    });
  };

  var cssStringHSLA = function cssStringHSLA(v) {
    var toString = function toString(n) {
      return Data_Show.show(Data_Show.showNumber)(Data_Int.toNumber(Data_Int.round(100.0 * n)) / 100.0);
    };

    var saturation = toString(v.value1 * 100.0) + "%";
    var lightness = toString(v.value2 * 100.0) + "%";
    var hue = toString(v.value0);
    var alpha = Data_Show.show(Data_Show.showNumber)(v.value3);
    var $69 = v.value3 === 1.0;

    if ($69) {
      return "hsl(" + (hue + (", " + (saturation + (", " + (lightness + ")")))));
    }

    ;
    return "hsla(" + (hue + (", " + (saturation + (", " + (lightness + (", " + (alpha + ")")))))));
  };

  exports["rgba"] = rgba;
  exports["rgb"] = rgb;
  exports["hsla"] = hsla;
  exports["hsl"] = hsl;
  exports["fromHexString"] = fromHexString;
  exports["cssStringHSLA"] = cssStringHSLA;
  exports["white"] = white;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Profunctor"] = $PS["Data.Profunctor"] || {};
  var exports = $PS["Data.Profunctor"];
  var Control_Category = $PS["Control.Category"];

  var Profunctor = function Profunctor(dimap) {
    this.dimap = dimap;
  };

  var profunctorFn = new Profunctor(function (a2b) {
    return function (c2d) {
      return function (b2c) {
        return function ($9) {
          return c2d(b2c(a2b($9)));
        };
      };
    };
  });

  var dimap = function dimap(dict) {
    return dict.dimap;
  };

  var rmap = function rmap(dictProfunctor) {
    return function (b2c) {
      return dimap(dictProfunctor)(Control_Category.identity(Control_Category.categoryFn))(b2c);
    };
  };

  exports["dimap"] = dimap;
  exports["Profunctor"] = Profunctor;
  exports["rmap"] = rmap;
  exports["profunctorFn"] = profunctorFn;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Profunctor.Strong"] = $PS["Data.Profunctor.Strong"] || {};
  var exports = $PS["Data.Profunctor.Strong"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Tuple = $PS["Data.Tuple"];

  var Strong = function Strong(Profunctor0, first, second) {
    this.Profunctor0 = Profunctor0;
    this.first = first;
    this.second = second;
  };

  var strongFn = new Strong(function () {
    return Data_Profunctor.profunctorFn;
  }, function (a2b) {
    return function (v) {
      return new Data_Tuple.Tuple(a2b(v.value0), v.value1);
    };
  }, Data_Functor.map(Data_Tuple.functorTuple));

  var second = function second(dict) {
    return dict.second;
  };

  var first = function first(dict) {
    return dict.first;
  };

  exports["first"] = first;
  exports["second"] = second;
  exports["Strong"] = Strong;
  exports["strongFn"] = strongFn;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["CSS.Property"] = $PS["CSS.Property"] || {};
  var exports = $PS["CSS.Property"];
  var CSS_String = $PS["CSS.String"];
  var Color = $PS["Color"];
  var Control_Category = $PS["Control.Category"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Profunctor_Strong = $PS["Data.Profunctor.Strong"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_Tuple = $PS["Data.Tuple"];

  var Prefixed = function () {
    function Prefixed(value0) {
      this.value0 = value0;
    }

    ;

    Prefixed.create = function (value0) {
      return new Prefixed(value0);
    };

    return Prefixed;
  }();

  var Plain = function () {
    function Plain(value0) {
      this.value0 = value0;
    }

    ;

    Plain.create = function (value0) {
      return new Plain(value0);
    };

    return Plain;
  }();

  var Value = function Value(x) {
    return x;
  };

  var Key = function Key(x) {
    return x;
  };

  var Val = function Val(value) {
    this.value = value;
  };

  var value = function value(dict) {
    return dict.value;
  };

  var valValue = new Val(Control_Category.identity(Control_Category.categoryFn));
  var semigroupPrefixed = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      if (v instanceof Plain && v1 instanceof Plain) {
        return Plain.create(v.value0 + v1.value0);
      }

      ;

      if (v instanceof Plain && v1 instanceof Prefixed) {
        return Prefixed.create(Data_Functor.map(Data_Functor.functorArray)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(function (v2) {
          return v.value0 + v2;
        }))(v1.value0));
      }

      ;

      if (v instanceof Prefixed && v1 instanceof Plain) {
        return Prefixed.create(Data_Functor.map(Data_Functor.functorArray)(Data_Profunctor_Strong.second(Data_Profunctor_Strong.strongFn)(function (v2) {
          return v1.value0 + v2;
        }))(v.value0));
      }

      ;

      if (v instanceof Prefixed && v1 instanceof Prefixed) {
        return Prefixed.create(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.value0)(v1.value0));
      }

      ;
      throw new Error("Failed pattern match at CSS.Property (line 25, column 1 - line 25, column 49): " + [v.constructor.name, v1.constructor.name]);
    };
  });
  var semigroupValue = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return Value(Data_Semigroup.append(semigroupPrefixed)(v)(v1));
    };
  });

  var plain = function plain(v) {
    if (v instanceof Prefixed) {
      return Data_Maybe.fromMaybe("")(Data_Tuple.lookup(Data_Foldable.foldableArray)(Data_Eq.eqString)("")(v.value0));
    }

    ;

    if (v instanceof Plain) {
      return v.value0;
    }

    ;
    throw new Error("Failed pattern match at CSS.Property (line 34, column 1 - line 34, column 28): " + [v.constructor.name]);
  };

  var isStringPrefixed = new CSS_String.IsString(Plain.create);
  var isStringValue = new CSS_String.IsString(function ($123) {
    return Value(CSS_String.fromString(isStringPrefixed)($123));
  });
  var valColor = new Val(function ($125) {
    return CSS_String.fromString(isStringValue)(Color.cssStringHSLA($125));
  });
  var valNumber = new Val(function ($128) {
    return CSS_String.fromString(isStringValue)(Data_Show.show(Data_Show.showNumber)($128));
  });
  var valString = new Val(CSS_String.fromString(isStringValue));

  var valTuple = function valTuple(dictVal) {
    return function (dictVal1) {
      return new Val(function (v) {
        return Data_Semigroup.append(semigroupValue)(value(dictVal)(v.value0))(Data_Semigroup.append(semigroupValue)(CSS_String.fromString(isStringValue)(" "))(value(dictVal1)(v.value1)));
      });
    };
  };

  var isStringKey = new CSS_String.IsString(function ($129) {
    return Key(CSS_String.fromString(isStringPrefixed)($129));
  });

  var cast = function cast(v) {
    return v;
  };

  exports["value"] = value;
  exports["Prefixed"] = Prefixed;
  exports["Plain"] = Plain;
  exports["plain"] = plain;
  exports["Key"] = Key;
  exports["cast"] = cast;
  exports["Value"] = Value;
  exports["Val"] = Val;
  exports["isStringPrefixed"] = isStringPrefixed;
  exports["semigroupPrefixed"] = semigroupPrefixed;
  exports["isStringKey"] = isStringKey;
  exports["isStringValue"] = isStringValue;
  exports["semigroupValue"] = semigroupValue;
  exports["valValue"] = valValue;
  exports["valString"] = valString;
  exports["valTuple"] = valTuple;
  exports["valNumber"] = valNumber;
  exports["valColor"] = valColor;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Writer.Class"] = $PS["Control.Monad.Writer.Class"] || {};
  var exports = $PS["Control.Monad.Writer.Class"];

  var MonadTell = function MonadTell(Monad0, tell) {
    this.Monad0 = Monad0;
    this.tell = tell;
  };

  var tell = function tell(dict) {
    return dict.tell;
  };

  exports["tell"] = tell;
  exports["MonadTell"] = MonadTell;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Writer.Trans"] = $PS["Control.Monad.Writer.Trans"] || {};
  var exports = $PS["Control.Monad.Writer.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Writer_Class = $PS["Control.Monad.Writer.Class"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];

  var WriterT = function WriterT(x) {
    return x;
  };

  var runWriterT = function runWriterT(v) {
    return v;
  };

  var mapWriterT = function mapWriterT(f) {
    return function (v) {
      return f(v);
    };
  };

  var functorWriterT = function functorWriterT(dictFunctor) {
    return new Data_Functor.Functor(function (f) {
      return mapWriterT(Data_Functor.map(dictFunctor)(function (v) {
        return new Data_Tuple.Tuple(f(v.value0), v.value1);
      }));
    });
  };

  var applyWriterT = function applyWriterT(dictSemigroup) {
    return function (dictApply) {
      return new Control_Apply.Apply(function () {
        return functorWriterT(dictApply.Functor0());
      }, function (v) {
        return function (v1) {
          var k = function k(v3) {
            return function (v4) {
              return new Data_Tuple.Tuple(v3.value0(v4.value0), Data_Semigroup.append(dictSemigroup)(v3.value1)(v4.value1));
            };
          };

          return Control_Apply.apply(dictApply)(Data_Functor.map(dictApply.Functor0())(k)(v))(v1);
        };
      });
    };
  };

  var bindWriterT = function bindWriterT(dictSemigroup) {
    return function (dictBind) {
      return new Control_Bind.Bind(function () {
        return applyWriterT(dictSemigroup)(dictBind.Apply0());
      }, function (v) {
        return function (k) {
          return WriterT(Control_Bind.bind(dictBind)(v)(function (v1) {
            var v2 = k(v1.value0);
            return Data_Functor.map(dictBind.Apply0().Functor0())(function (v3) {
              return new Data_Tuple.Tuple(v3.value0, Data_Semigroup.append(dictSemigroup)(v1.value1)(v3.value1));
            })(v2);
          }));
        };
      });
    };
  };

  var applicativeWriterT = function applicativeWriterT(dictMonoid) {
    return function (dictApplicative) {
      return new Control_Applicative.Applicative(function () {
        return applyWriterT(dictMonoid.Semigroup0())(dictApplicative.Apply0());
      }, function (a) {
        return WriterT(Control_Applicative.pure(dictApplicative)(new Data_Tuple.Tuple(a, Data_Monoid.mempty(dictMonoid))));
      });
    };
  };

  var monadWriterT = function monadWriterT(dictMonoid) {
    return function (dictMonad) {
      return new Control_Monad.Monad(function () {
        return applicativeWriterT(dictMonoid)(dictMonad.Applicative0());
      }, function () {
        return bindWriterT(dictMonoid.Semigroup0())(dictMonad.Bind1());
      });
    };
  };

  var monadTellWriterT = function monadTellWriterT(dictMonoid) {
    return function (dictMonad) {
      return new Control_Monad_Writer_Class.MonadTell(function () {
        return monadWriterT(dictMonoid)(dictMonad);
      }, function ($124) {
        return WriterT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Tuple.Tuple.create(Data_Unit.unit)($124)));
      });
    };
  };

  exports["WriterT"] = WriterT;
  exports["runWriterT"] = runWriterT;
  exports["mapWriterT"] = mapWriterT;
  exports["functorWriterT"] = functorWriterT;
  exports["applyWriterT"] = applyWriterT;
  exports["applicativeWriterT"] = applicativeWriterT;
  exports["bindWriterT"] = bindWriterT;
  exports["monadWriterT"] = monadWriterT;
  exports["monadTellWriterT"] = monadTellWriterT;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Identity"] = $PS["Data.Identity"] || {};
  var exports = $PS["Data.Identity"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Newtype = $PS["Data.Newtype"];

  var Identity = function Identity(x) {
    return x;
  };

  var newtypeIdentity = new Data_Newtype.Newtype(function (n) {
    return n;
  }, Identity);
  var functorIdentity = new Data_Functor.Functor(function (f) {
    return function (m) {
      return f(m);
    };
  });
  var applyIdentity = new Control_Apply.Apply(function () {
    return functorIdentity;
  }, function (v) {
    return function (v1) {
      return v(v1);
    };
  });
  var bindIdentity = new Control_Bind.Bind(function () {
    return applyIdentity;
  }, function (v) {
    return function (f) {
      return f(v);
    };
  });
  var applicativeIdentity = new Control_Applicative.Applicative(function () {
    return applyIdentity;
  }, Identity);
  var monadIdentity = new Control_Monad.Monad(function () {
    return applicativeIdentity;
  }, function () {
    return bindIdentity;
  });
  exports["Identity"] = Identity;
  exports["newtypeIdentity"] = newtypeIdentity;
  exports["functorIdentity"] = functorIdentity;
  exports["applyIdentity"] = applyIdentity;
  exports["applicativeIdentity"] = applicativeIdentity;
  exports["bindIdentity"] = bindIdentity;
  exports["monadIdentity"] = monadIdentity;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Writer"] = $PS["Control.Monad.Writer"] || {};
  var exports = $PS["Control.Monad.Writer"];
  var Control_Monad_Writer_Trans = $PS["Control.Monad.Writer.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Tuple = $PS["Data.Tuple"];

  var runWriter = function runWriter($1) {
    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Writer_Trans.runWriterT($1));
  };

  var execWriter = function execWriter(m) {
    return Data_Tuple.snd(runWriter(m));
  };

  exports["runWriter"] = runWriter;
  exports["execWriter"] = execWriter;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["CSS.Stylesheet"] = $PS["CSS.Stylesheet"] || {};
  var exports = $PS["CSS.Stylesheet"];
  var CSS_Property = $PS["CSS.Property"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Writer = $PS["Control.Monad.Writer"];
  var Control_Monad_Writer_Class = $PS["Control.Monad.Writer.Class"];
  var Control_Monad_Writer_Trans = $PS["Control.Monad.Writer.Trans"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Self = function () {
    function Self(value0) {
      this.value0 = value0;
    }

    ;

    Self.create = function (value0) {
      return new Self(value0);
    };

    return Self;
  }();

  var Root = function () {
    function Root(value0) {
      this.value0 = value0;
    }

    ;

    Root.create = function (value0) {
      return new Root(value0);
    };

    return Root;
  }();

  var Pop = function () {
    function Pop(value0) {
      this.value0 = value0;
    }

    ;

    Pop.create = function (value0) {
      return new Pop(value0);
    };

    return Pop;
  }();

  var Child = function () {
    function Child(value0) {
      this.value0 = value0;
    }

    ;

    Child.create = function (value0) {
      return new Child(value0);
    };

    return Child;
  }();

  var Sub = function () {
    function Sub(value0) {
      this.value0 = value0;
    }

    ;

    Sub.create = function (value0) {
      return new Sub(value0);
    };

    return Sub;
  }();

  var Property = function () {
    function Property(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Property.create = function (value0) {
      return function (value1) {
        return new Property(value0, value1);
      };
    };

    return Property;
  }();

  var Nested = function () {
    function Nested(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Nested.create = function (value0) {
      return function (value1) {
        return new Nested(value0, value1);
      };
    };

    return Nested;
  }();

  var Query = function () {
    function Query(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Query.create = function (value0) {
      return function (value1) {
        return new Query(value0, value1);
      };
    };

    return Query;
  }();

  var Face = function () {
    function Face(value0) {
      this.value0 = value0;
    }

    ;

    Face.create = function (value0) {
      return new Face(value0);
    };

    return Face;
  }();

  var Keyframe = function () {
    function Keyframe(value0) {
      this.value0 = value0;
    }

    ;

    Keyframe.create = function (value0) {
      return new Keyframe(value0);
    };

    return Keyframe;
  }();

  var Import = function () {
    function Import(value0) {
      this.value0 = value0;
    }

    ;

    Import.create = function (value0) {
      return new Import(value0);
    };

    return Import;
  }();

  var S = function S(x) {
    return x;
  };

  var runS = function runS(v) {
    return Control_Monad_Writer.execWriter(v);
  };

  var rule = function rule($403) {
    return S(Control_Monad_Writer_Class.tell(Control_Monad_Writer_Trans.monadTellWriterT(Data_Monoid.monoidArray)(Data_Identity.monadIdentity))(Data_Array.singleton($403)));
  };

  var select = function select(sel) {
    return function (rs) {
      return rule(new Nested(new Sub(sel), runS(rs)));
    };
  };

  var key = function key(dictVal) {
    return function (k) {
      return function (v) {
        return rule(new Property(CSS_Property.cast(k), CSS_Property.value(dictVal)(v)));
      };
    };
  };

  var functorStyleM = new Data_Functor.Functor(function (f) {
    return function (v) {
      return S(Data_Functor.map(Control_Monad_Writer_Trans.functorWriterT(Data_Identity.functorIdentity))(f)(v));
    };
  });
  var applyStyleM = new Control_Apply.Apply(function () {
    return functorStyleM;
  }, function (v) {
    return function (v1) {
      return S(Control_Apply.apply(Control_Monad_Writer_Trans.applyWriterT(Data_Semigroup.semigroupArray)(Data_Identity.applyIdentity))(v)(v1));
    };
  });
  var bindStyleM = new Control_Bind.Bind(function () {
    return applyStyleM;
  }, function (v) {
    return function (f) {
      return S(Control_Bind.bind(Control_Monad_Writer_Trans.bindWriterT(Data_Semigroup.semigroupArray)(Data_Identity.bindIdentity))(v)(function ($407) {
        return function (v1) {
          return v1;
        }(f($407));
      }));
    };
  });
  exports["Self"] = Self;
  exports["Root"] = Root;
  exports["Pop"] = Pop;
  exports["Child"] = Child;
  exports["Sub"] = Sub;
  exports["Property"] = Property;
  exports["Nested"] = Nested;
  exports["Query"] = Query;
  exports["Face"] = Face;
  exports["Keyframe"] = Keyframe;
  exports["Import"] = Import;
  exports["S"] = S;
  exports["runS"] = runS;
  exports["rule"] = rule;
  exports["key"] = key;
  exports["select"] = select;
  exports["functorStyleM"] = functorStyleM;
  exports["applyStyleM"] = applyStyleM;
  exports["bindStyleM"] = bindStyleM;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["CSS.Background"] = $PS["CSS.Background"] || {};
  var exports = $PS["CSS.Background"];
  var CSS_Property = $PS["CSS.Property"];
  var CSS_String = $PS["CSS.String"];
  var CSS_Stylesheet = $PS["CSS.Stylesheet"];
  var Data_Tuple = $PS["Data.Tuple"];

  var Side = function Side(x) {
    return x;
  };

  var BackgroundSize = function BackgroundSize(x) {
    return x;
  };

  var BackgroundRepeat = function BackgroundRepeat(x) {
    return x;
  };

  var Background = function Background(Val0, background) {
    this.Val0 = Val0;
    this.background = background;
  };

  var valSide = new CSS_Property.Val(function (v) {
    return v;
  });
  var valBackgroundSize = new CSS_Property.Val(function (v) {
    return v;
  });
  var valBackgroundRepeat = new CSS_Property.Val(function (v) {
    return v;
  });
  var valBackgroundPosition = new CSS_Property.Val(function (v) {
    return v;
  });
  var valBackgroundImage = new CSS_Property.Val(function (v) {
    return v;
  });

  var url = function url(u) {
    return CSS_Property.value(CSS_Property.valString)("url(\"" + (u + "\")"));
  };

  var sideRight = Side(CSS_String.fromString(CSS_Property.isStringValue)("right"));
  var sideCenter = Side(CSS_String.fromString(CSS_Property.isStringValue)("center"));
  var sideBottom = Side(CSS_String.fromString(CSS_Property.isStringValue)("bottom"));

  var placed = function placed(a) {
    return function (b) {
      return CSS_Property.value(CSS_Property.valTuple(valSide)(valSide))(new Data_Tuple.Tuple(a, b));
    };
  };

  var noRepeat = BackgroundRepeat(CSS_String.fromString(CSS_Property.isStringValue)("no-repeat"));
  var cover = BackgroundSize(CSS_String.fromString(CSS_Property.isStringValue)("cover"));
  var backgroundSize = CSS_Stylesheet.key(valBackgroundSize)(CSS_String.fromString(CSS_Property.isStringKey)("background-size"));
  var backgroundRepeat = CSS_Stylesheet.key(valBackgroundRepeat)(CSS_String.fromString(CSS_Property.isStringKey)("background-repeat"));
  var backgroundPosition = CSS_Stylesheet.key(valBackgroundPosition)(CSS_String.fromString(CSS_Property.isStringKey)("background-position"));
  var backgroundColor = CSS_Stylesheet.key(CSS_Property.valColor)(CSS_String.fromString(CSS_Property.isStringKey)("background-color"));
  var backgroundBackgroundImage = new Background(function () {
    return valBackgroundImage;
  }, CSS_Stylesheet.key(valBackgroundImage)(CSS_String.fromString(CSS_Property.isStringKey)("background")));

  var background = function background(dict) {
    return dict.background;
  };

  exports["Background"] = Background;
  exports["background"] = background;
  exports["backgroundColor"] = backgroundColor;
  exports["backgroundPosition"] = backgroundPosition;
  exports["placed"] = placed;
  exports["backgroundSize"] = backgroundSize;
  exports["cover"] = cover;
  exports["backgroundRepeat"] = backgroundRepeat;
  exports["noRepeat"] = noRepeat;
  exports["url"] = url;
  exports["sideRight"] = sideRight;
  exports["sideBottom"] = sideBottom;
  exports["sideCenter"] = sideCenter;
  exports["backgroundBackgroundImage"] = backgroundBackgroundImage;
  exports["valBackgroundPosition"] = valBackgroundPosition;
  exports["valBackgroundSize"] = valBackgroundSize;
  exports["valBackgroundRepeat"] = valBackgroundRepeat;
  exports["valBackgroundImage"] = valBackgroundImage;
  exports["valSide"] = valSide;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["CSS.Display"] = $PS["CSS.Display"] || {};
  var exports = $PS["CSS.Display"];
  var CSS_Property = $PS["CSS.Property"];
  var CSS_String = $PS["CSS.String"];
  var CSS_Stylesheet = $PS["CSS.Stylesheet"];

  var Position = function Position(x) {
    return x;
  };

  var Display = function Display(x) {
    return x;
  };

  var valPosition = new CSS_Property.Val(function (v) {
    return v;
  });
  var valDisplay = new CSS_Property.Val(function (v) {
    return v;
  });
  var relative = Position(CSS_String.fromString(CSS_Property.isStringValue)("relative"));
  var position = CSS_Stylesheet.key(valPosition)(CSS_String.fromString(CSS_Property.isStringKey)("position"));
  var inlineBlock = Display(CSS_String.fromString(CSS_Property.isStringValue)("inline-block"));
  var display = CSS_Stylesheet.key(valDisplay)(CSS_String.fromString(CSS_Property.isStringKey)("display"));
  exports["Position"] = Position;
  exports["position"] = position;
  exports["relative"] = relative;
  exports["Display"] = Display;
  exports["inlineBlock"] = inlineBlock;
  exports["display"] = display;
  exports["valPosition"] = valPosition;
  exports["valDisplay"] = valDisplay;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["CSS.Size"] = $PS["CSS.Size"] || {};
  var exports = $PS["CSS.Size"];
  var CSS_Property = $PS["CSS.Property"];
  var CSS_String = $PS["CSS.String"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var valSize = new CSS_Property.Val(function (v) {
    return v;
  });

  var px = function px(i) {
    return Data_Semigroup.append(CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valNumber)(i))(CSS_String.fromString(CSS_Property.isStringValue)("px"));
  };

  var pct = function pct(i) {
    return Data_Semigroup.append(CSS_Property.semigroupValue)(CSS_Property.value(CSS_Property.valNumber)(i))(CSS_String.fromString(CSS_Property.isStringValue)("%"));
  };

  exports["px"] = px;
  exports["pct"] = pct;
  exports["valSize"] = valSize;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["CSS.Flexbox"] = $PS["CSS.Flexbox"] || {};
  var exports = $PS["CSS.Flexbox"];
  var CSS_Property = $PS["CSS.Property"];
  var CSS_Size = $PS["CSS.Size"];
  var CSS_String = $PS["CSS.String"];
  var CSS_Stylesheet = $PS["CSS.Stylesheet"];
  var Data_Show = $PS["Data.Show"];

  var flexShrink = function flexShrink(i) {
    return CSS_Stylesheet.key(CSS_Property.valValue)(CSS_String.fromString(CSS_Property.isStringKey)("flex-shrink"))(CSS_String.fromString(CSS_Property.isStringValue)(Data_Show.show(Data_Show.showInt)(i)));
  };

  var flexGrow = function flexGrow(i) {
    return CSS_Stylesheet.key(CSS_Property.valValue)(CSS_String.fromString(CSS_Property.isStringKey)("flex-grow"))(CSS_String.fromString(CSS_Property.isStringValue)(Data_Show.show(Data_Show.showInt)(i)));
  };

  var flexBasis = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("flex-basis"));
  exports["flexBasis"] = flexBasis;
  exports["flexGrow"] = flexGrow;
  exports["flexShrink"] = flexShrink;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["CSS.Font"] = $PS["CSS.Font"] || {};
  var exports = $PS["CSS.Font"];
  var CSS_Property = $PS["CSS.Property"];
  var CSS_String = $PS["CSS.String"];
  var CSS_Stylesheet = $PS["CSS.Stylesheet"];
  var color = CSS_Stylesheet.key(CSS_Property.valColor)(CSS_String.fromString(CSS_Property.isStringKey)("color"));
  exports["color"] = color;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["CSS.Geometry"] = $PS["CSS.Geometry"] || {};
  var exports = $PS["CSS.Geometry"];
  var CSS_Property = $PS["CSS.Property"];
  var CSS_Size = $PS["CSS.Size"];
  var CSS_String = $PS["CSS.String"];
  var CSS_Stylesheet = $PS["CSS.Stylesheet"];
  var width = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("width"));
  var top = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("top"));
  var marginRight = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("margin-right"));
  var left = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("left"));
  var height = CSS_Stylesheet.key(CSS_Size.valSize)(CSS_String.fromString(CSS_Property.isStringKey)("height"));
  exports["width"] = width;
  exports["height"] = height;
  exports["top"] = top;
  exports["left"] = left;
  exports["marginRight"] = marginRight;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["CSS.Selector"] = $PS["CSS.Selector"] || {};
  var exports = $PS["CSS.Selector"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Id = function () {
    function Id(value0) {
      this.value0 = value0;
    }

    ;

    Id.create = function (value0) {
      return new Id(value0);
    };

    return Id;
  }();

  var Class = function () {
    function Class(value0) {
      this.value0 = value0;
    }

    ;

    Class.create = function (value0) {
      return new Class(value0);
    };

    return Class;
  }();

  var Attr = function () {
    function Attr(value0) {
      this.value0 = value0;
    }

    ;

    Attr.create = function (value0) {
      return new Attr(value0);
    };

    return Attr;
  }();

  var AttrVal = function () {
    function AttrVal(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    AttrVal.create = function (value0) {
      return function (value1) {
        return new AttrVal(value0, value1);
      };
    };

    return AttrVal;
  }();

  var AttrBegins = function () {
    function AttrBegins(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    AttrBegins.create = function (value0) {
      return function (value1) {
        return new AttrBegins(value0, value1);
      };
    };

    return AttrBegins;
  }();

  var AttrEnds = function () {
    function AttrEnds(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    AttrEnds.create = function (value0) {
      return function (value1) {
        return new AttrEnds(value0, value1);
      };
    };

    return AttrEnds;
  }();

  var AttrContains = function () {
    function AttrContains(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    AttrContains.create = function (value0) {
      return function (value1) {
        return new AttrContains(value0, value1);
      };
    };

    return AttrContains;
  }();

  var AttrSpace = function () {
    function AttrSpace(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    AttrSpace.create = function (value0) {
      return function (value1) {
        return new AttrSpace(value0, value1);
      };
    };

    return AttrSpace;
  }();

  var AttrHyph = function () {
    function AttrHyph(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    AttrHyph.create = function (value0) {
      return function (value1) {
        return new AttrHyph(value0, value1);
      };
    };

    return AttrHyph;
  }();

  var Pseudo = function () {
    function Pseudo(value0) {
      this.value0 = value0;
    }

    ;

    Pseudo.create = function (value0) {
      return new Pseudo(value0);
    };

    return Pseudo;
  }();

  var PseudoFunc = function () {
    function PseudoFunc(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    PseudoFunc.create = function (value0) {
      return function (value1) {
        return new PseudoFunc(value0, value1);
      };
    };

    return PseudoFunc;
  }();

  var Star = function () {
    function Star() {}

    ;
    Star.value = new Star();
    return Star;
  }();

  var Elem = function () {
    function Elem(value0) {
      this.value0 = value0;
    }

    ;

    Elem.create = function (value0) {
      return new Elem(value0);
    };

    return Elem;
  }();

  var PathChild = function () {
    function PathChild(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    PathChild.create = function (value0) {
      return function (value1) {
        return new PathChild(value0, value1);
      };
    };

    return PathChild;
  }();

  var Deep = function () {
    function Deep(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Deep.create = function (value0) {
      return function (value1) {
        return new Deep(value0, value1);
      };
    };

    return Deep;
  }();

  var Adjacent = function () {
    function Adjacent(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Adjacent.create = function (value0) {
      return function (value1) {
        return new Adjacent(value0, value1);
      };
    };

    return Adjacent;
  }();

  var Combined = function () {
    function Combined(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Combined.create = function (value0) {
      return function (value1) {
        return new Combined(value0, value1);
      };
    };

    return Combined;
  }();

  var Selector = function () {
    function Selector(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Selector.create = function (value0) {
      return function (value1) {
        return new Selector(value0, value1);
      };
    };

    return Selector;
  }();

  var $$with = function $$with(v) {
    return function (v1) {
      return new Selector(Data_Semigroup.append(Data_Semigroup.semigroupArray)(v.value0)(v1), v.value1);
    };
  };

  var star = new Selector([], Star.value);
  var eqPredicate = new Data_Eq.Eq(function (x) {
    return function (y) {
      if (x instanceof Id && y instanceof Id) {
        return x.value0 === y.value0;
      }

      ;

      if (x instanceof Class && y instanceof Class) {
        return x.value0 === y.value0;
      }

      ;

      if (x instanceof Attr && y instanceof Attr) {
        return x.value0 === y.value0;
      }

      ;

      if (x instanceof AttrVal && y instanceof AttrVal) {
        return x.value0 === y.value0 && x.value1 === y.value1;
      }

      ;

      if (x instanceof AttrBegins && y instanceof AttrBegins) {
        return x.value0 === y.value0 && x.value1 === y.value1;
      }

      ;

      if (x instanceof AttrEnds && y instanceof AttrEnds) {
        return x.value0 === y.value0 && x.value1 === y.value1;
      }

      ;

      if (x instanceof AttrContains && y instanceof AttrContains) {
        return x.value0 === y.value0 && x.value1 === y.value1;
      }

      ;

      if (x instanceof AttrSpace && y instanceof AttrSpace) {
        return x.value0 === y.value0 && x.value1 === y.value1;
      }

      ;

      if (x instanceof AttrHyph && y instanceof AttrHyph) {
        return x.value0 === y.value0 && x.value1 === y.value1;
      }

      ;

      if (x instanceof Pseudo && y instanceof Pseudo) {
        return x.value0 === y.value0;
      }

      ;

      if (x instanceof PseudoFunc && y instanceof PseudoFunc) {
        return x.value0 === y.value0 && Data_Eq.eq(Data_Eq.eqArray(Data_Eq.eqString))(x.value1)(y.value1);
      }

      ;
      return false;
    };
  });
  var ordPredicate = new Data_Ord.Ord(function () {
    return eqPredicate;
  }, function (x) {
    return function (y) {
      if (x instanceof Id && y instanceof Id) {
        return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
      }

      ;

      if (x instanceof Id) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Id) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Class && y instanceof Class) {
        return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
      }

      ;

      if (x instanceof Class) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Class) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Attr && y instanceof Attr) {
        return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
      }

      ;

      if (x instanceof Attr) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Attr) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof AttrVal && y instanceof AttrVal) {
        var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
      }

      ;

      if (x instanceof AttrVal) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof AttrVal) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof AttrBegins && y instanceof AttrBegins) {
        var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
      }

      ;

      if (x instanceof AttrBegins) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof AttrBegins) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof AttrEnds && y instanceof AttrEnds) {
        var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
      }

      ;

      if (x instanceof AttrEnds) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof AttrEnds) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof AttrContains && y instanceof AttrContains) {
        var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
      }

      ;

      if (x instanceof AttrContains) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof AttrContains) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof AttrSpace && y instanceof AttrSpace) {
        var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
      }

      ;

      if (x instanceof AttrSpace) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof AttrSpace) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof AttrHyph && y instanceof AttrHyph) {
        var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(Data_Ord.ordString)(x.value1)(y.value1);
      }

      ;

      if (x instanceof AttrHyph) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof AttrHyph) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Pseudo && y instanceof Pseudo) {
        return Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);
      }

      ;

      if (x instanceof Pseudo) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Pseudo) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof PseudoFunc && y instanceof PseudoFunc) {
        var v = Data_Ord.compare(Data_Ord.ordString)(x.value0)(y.value0);

        if (v instanceof Data_Ordering.LT) {
          return Data_Ordering.LT.value;
        }

        ;

        if (v instanceof Data_Ordering.GT) {
          return Data_Ordering.GT.value;
        }

        ;
        return Data_Ord.compare(Data_Ord.ordArray(Data_Ord.ordString))(x.value1)(y.value1);
      }

      ;
      throw new Error("Failed pattern match at CSS.Selector (line 24, column 8 - line 24, column 46): " + [x.constructor.name, y.constructor.name]);
    };
  });

  var element = function element(e) {
    return new Selector([], new Elem(e));
  };

  var deep = function deep(a) {
    return function (b) {
      return new Selector([], new Deep(a, b));
    };
  };

  var child = function child(a) {
    return function (b) {
      return new Selector([], new PathChild(a, b));
    };
  };

  exports["Id"] = Id;
  exports["Class"] = Class;
  exports["Attr"] = Attr;
  exports["AttrVal"] = AttrVal;
  exports["AttrBegins"] = AttrBegins;
  exports["AttrEnds"] = AttrEnds;
  exports["AttrContains"] = AttrContains;
  exports["AttrSpace"] = AttrSpace;
  exports["AttrHyph"] = AttrHyph;
  exports["Pseudo"] = Pseudo;
  exports["PseudoFunc"] = PseudoFunc;
  exports["Star"] = Star;
  exports["Elem"] = Elem;
  exports["PathChild"] = PathChild;
  exports["Deep"] = Deep;
  exports["Adjacent"] = Adjacent;
  exports["Combined"] = Combined;
  exports["Selector"] = Selector;
  exports["star"] = star;
  exports["element"] = element;
  exports["deep"] = deep;
  exports["child"] = child;
  exports["with"] = $$with;
  exports["eqPredicate"] = eqPredicate;
  exports["ordPredicate"] = ordPredicate;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.NonEmpty"] = $PS["Data.NonEmpty"] || {};
  var exports = $PS["Data.NonEmpty"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var NonEmpty = function () {
    function NonEmpty(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    NonEmpty.create = function (value0) {
      return function (value1) {
        return new NonEmpty(value0, value1);
      };
    };

    return NonEmpty;
  }();

  var singleton = function singleton(dictPlus) {
    return function (a) {
      return new NonEmpty(a, Control_Plus.empty(dictPlus));
    };
  };

  var oneOf = function oneOf(dictAlternative) {
    return function (v) {
      return Control_Alt.alt(dictAlternative.Plus1().Alt0())(Control_Applicative.pure(dictAlternative.Applicative0())(v.value0))(v.value1);
    };
  };

  var functorNonEmpty = function functorNonEmpty(dictFunctor) {
    return new Data_Functor.Functor(function (f) {
      return function (m) {
        return new NonEmpty(f(m.value0), Data_Functor.map(dictFunctor)(f)(m.value1));
      };
    });
  };

  var foldl1 = function foldl1(dictFoldable) {
    return function (f) {
      return function (v) {
        return Data_Foldable.foldl(dictFoldable)(f)(v.value0)(v.value1);
      };
    };
  };

  var foldableNonEmpty = function foldableNonEmpty(dictFoldable) {
    return new Data_Foldable.Foldable(function (dictMonoid) {
      return function (f) {
        return function (v) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(f(v.value0))(Data_Foldable.foldMap(dictFoldable)(dictMonoid)(f)(v.value1));
        };
      };
    }, function (f) {
      return function (b) {
        return function (v) {
          return Data_Foldable.foldl(dictFoldable)(f)(f(b)(v.value0))(v.value1);
        };
      };
    }, function (f) {
      return function (b) {
        return function (v) {
          return f(v.value0)(Data_Foldable.foldr(dictFoldable)(f)(b)(v.value1));
        };
      };
    });
  };

  exports["NonEmpty"] = NonEmpty;
  exports["singleton"] = singleton;
  exports["foldl1"] = foldl1;
  exports["oneOf"] = oneOf;
  exports["functorNonEmpty"] = functorNonEmpty;
  exports["foldableNonEmpty"] = foldableNonEmpty;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.These"] = $PS["Data.These"] || {};
  var exports = $PS["Data.These"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var This = function () {
    function This(value0) {
      this.value0 = value0;
    }

    ;

    This.create = function (value0) {
      return new This(value0);
    };

    return This;
  }();

  var That = function () {
    function That(value0) {
      this.value0 = value0;
    }

    ;

    That.create = function (value0) {
      return new That(value0);
    };

    return That;
  }();

  var Both = function () {
    function Both(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Both.create = function (value0) {
      return function (value1) {
        return new Both(value0, value1);
      };
    };

    return Both;
  }();

  var theseRight = function theseRight(v) {
    if (v instanceof Both) {
      return new Data_Maybe.Just(v.value1);
    }

    ;

    if (v instanceof That) {
      return new Data_Maybe.Just(v.value0);
    }

    ;
    return Data_Maybe.Nothing.value;
  };

  var theseLeft = function theseLeft(v) {
    if (v instanceof Both) {
      return new Data_Maybe.Just(v.value0);
    }

    ;

    if (v instanceof This) {
      return new Data_Maybe.Just(v.value0);
    }

    ;
    return Data_Maybe.Nothing.value;
  };

  var semigroupThese = function semigroupThese(dictSemigroup) {
    return function (dictSemigroup1) {
      return new Data_Semigroup.Semigroup(function (v) {
        return function (v1) {
          if (v instanceof This && v1 instanceof This) {
            return new This(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0));
          }

          ;

          if (v instanceof This && v1 instanceof That) {
            return new Both(v.value0, v1.value0);
          }

          ;

          if (v instanceof This && v1 instanceof Both) {
            return new Both(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v1.value1);
          }

          ;

          if (v instanceof That && v1 instanceof This) {
            return new Both(v1.value0, v.value0);
          }

          ;

          if (v instanceof That && v1 instanceof That) {
            return new That(Data_Semigroup.append(dictSemigroup1)(v.value0)(v1.value0));
          }

          ;

          if (v instanceof That && v1 instanceof Both) {
            return new Both(v1.value0, Data_Semigroup.append(dictSemigroup1)(v.value0)(v1.value1));
          }

          ;

          if (v instanceof Both && v1 instanceof This) {
            return new Both(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), v.value1);
          }

          ;

          if (v instanceof Both && v1 instanceof That) {
            return new Both(v.value0, Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value0));
          }

          ;

          if (v instanceof Both && v1 instanceof Both) {
            return new Both(Data_Semigroup.append(dictSemigroup)(v.value0)(v1.value0), Data_Semigroup.append(dictSemigroup1)(v.value1)(v1.value1));
          }

          ;
          throw new Error("Failed pattern match at Data.These (line 21, column 1 - line 21, column 79): " + [v.constructor.name, v1.constructor.name]);
        };
      });
    };
  };

  exports["This"] = This;
  exports["That"] = That;
  exports["Both"] = Both;
  exports["theseLeft"] = theseLeft;
  exports["theseRight"] = theseRight;
  exports["semigroupThese"] = semigroupThese;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["CSS.Render"] = $PS["CSS.Render"] || {};
  var exports = $PS["CSS.Render"];
  var CSS_Property = $PS["CSS.Property"];
  var CSS_Selector = $PS["CSS.Selector"];
  var CSS_String = $PS["CSS.String"];
  var CSS_Stylesheet = $PS["CSS.Stylesheet"];
  var Control_Alternative = $PS["Control.Alternative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Data_These = $PS["Data.These"];
  var Data_Tuple = $PS["Data.Tuple"];

  var Sheet = function Sheet(x) {
    return x;
  };

  var Inline = function Inline(x) {
    return x;
  };

  var sepWith = function sepWith(s) {
    return function (a) {
      return function (b) {
        return a + (s + b);
      };
    };
  };

  var semigroupInline = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return v + v1;
    };
  });
  var semigroupFile = new Data_Semigroup.Semigroup(function (v) {
    return function (v1) {
      return v + v1;
    };
  });

  var properties = function properties(xs) {
    var sheetRules = Data_Either.either(function (v) {
      return Data_Monoid.mempty(Data_Monoid.monoidString);
    })(function (v) {
      return Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)([v.value0, ": ", v.value1]);
    });
    return Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)("; ")(Data_Functor.map(Data_Functor.functorArray)(sheetRules)(xs));
  };

  var predicate = function predicate(v) {
    if (v instanceof CSS_Selector.Id) {
      return "#" + v.value0;
    }

    ;

    if (v instanceof CSS_Selector.Class) {
      return "." + v.value0;
    }

    ;

    if (v instanceof CSS_Selector.Attr) {
      return "[" + (v.value0 + "]");
    }

    ;

    if (v instanceof CSS_Selector.AttrVal) {
      return "[" + (v.value0 + ("='" + (v.value1 + "']")));
    }

    ;

    if (v instanceof CSS_Selector.AttrBegins) {
      return "[" + (v.value0 + ("^='" + (v.value1 + "']")));
    }

    ;

    if (v instanceof CSS_Selector.AttrEnds) {
      return "[" + (v.value0 + ("$='" + (v.value1 + "']")));
    }

    ;

    if (v instanceof CSS_Selector.AttrContains) {
      return "[" + (v.value0 + ("*='" + (v.value1 + "']")));
    }

    ;

    if (v instanceof CSS_Selector.AttrSpace) {
      return "[" + (v.value0 + ("~='" + (v.value1 + "']")));
    }

    ;

    if (v instanceof CSS_Selector.AttrHyph) {
      return "[" + (v.value0 + ("|='" + (v.value1 + "']")));
    }

    ;

    if (v instanceof CSS_Selector.Pseudo) {
      return ":" + v.value0;
    }

    ;

    if (v instanceof CSS_Selector.PseudoFunc) {
      return ":" + (v.value0 + ("(" + (Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(",")(v.value1) + ")")));
    }

    ;
    throw new Error("Failed pattern match at CSS.Render (line 177, column 1 - line 177, column 33): " + [v.constructor.name]);
  };

  var selector$prime$prime = function selector$prime$prime(v) {
    return function (v1) {
      if (v.length === 0 && v1 instanceof CSS_Selector.Star) {
        return ["*"];
      }

      ;

      if (v1 instanceof CSS_Selector.Star) {
        return [""];
      }

      ;

      if (v1 instanceof CSS_Selector.Elem) {
        return [v1.value0];
      }

      ;

      if (v1 instanceof CSS_Selector.PathChild) {
        return Control_Apply.apply(Control_Apply.applyArray)(Data_Functor.map(Data_Functor.functorArray)(sepWith(" > "))(selector$prime(v1.value0)))(selector$prime(v1.value1));
      }

      ;

      if (v1 instanceof CSS_Selector.Deep) {
        return Control_Apply.apply(Control_Apply.applyArray)(Data_Functor.map(Data_Functor.functorArray)(sepWith(" "))(selector$prime(v1.value0)))(selector$prime(v1.value1));
      }

      ;

      if (v1 instanceof CSS_Selector.Adjacent) {
        return Control_Apply.apply(Control_Apply.applyArray)(Data_Functor.map(Data_Functor.functorArray)(sepWith(" + "))(selector$prime(v1.value0)))(selector$prime(v1.value1));
      }

      ;

      if (v1 instanceof CSS_Selector.Combined) {
        return Data_Semigroup.append(Data_Semigroup.semigroupArray)(selector$prime(v1.value0))(selector$prime(v1.value1));
      }

      ;
      throw new Error("Failed pattern match at CSS.Render (line 143, column 1 - line 143, column 63): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var selector$prime = function selector$prime(v) {
    return Data_Functor.map(Data_Functor.functorArray)(function (v1) {
      return v1 + Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(predicate)(Data_Array.sort(CSS_Selector.ordPredicate)(v.value0));
    })(selector$prime$prime(v.value0)(v.value1));
  };

  var selector = function selector($175) {
    return Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(", ")(selector$prime($175));
  };

  var nel = function nel(v) {
    if (v.length === 0) {
      return Data_Maybe.Nothing.value;
    }

    ;
    return Data_Functor.map(Data_Maybe.functorMaybe)(function (v1) {
      return new Data_NonEmpty.NonEmpty(v1.head, v1.tail);
    })(Data_Array.uncons(v));
  };

  var merger = function merger(v) {
    if (v.value0 instanceof CSS_Stylesheet.Child) {
      return Data_Maybe.maybe(v.value0.value0)(function (xs$prime) {
        return CSS_Selector.child(merger(xs$prime))(v.value0.value0);
      })(nel(v.value1));
    }

    ;

    if (v.value0 instanceof CSS_Stylesheet.Sub) {
      return Data_Maybe.maybe(v.value0.value0)(function (xs$prime) {
        return CSS_Selector.deep(merger(xs$prime))(v.value0.value0);
      })(nel(v.value1));
    }

    ;

    if (v.value0 instanceof CSS_Stylesheet.Root) {
      return Data_Maybe.maybe(v.value0.value0)(function (xs$prime) {
        return CSS_Selector.deep(v.value0.value0)(merger(xs$prime));
      })(nel(v.value1));
    }

    ;

    if (v.value0 instanceof CSS_Stylesheet.Pop) {
      return Data_Maybe.maybe(CSS_Selector.element("TODO"))(merger)(nel(Data_Array.drop(v.value0.value0)(Data_Array.cons(v.value0)(v.value1))));
    }

    ;

    if (v.value0 instanceof CSS_Stylesheet.Self) {
      return Data_Maybe.maybe(CSS_Selector["with"](CSS_Selector.star)(v.value0.value0))(function (xs$prime) {
        return CSS_Selector["with"](merger(xs$prime))(v.value0.value0);
      })(nel(v.value1));
    }

    ;
    throw new Error("Failed pattern match at CSS.Render (line 170, column 3 - line 175, column 106): " + [v.value0.constructor.name]);
  };

  var mediaType = function mediaType(v) {
    return CSS_Property.plain(v);
  };

  var imp = function imp(t) {
    return Data_Maybe.Just.create(Data_These.That.create(Sheet(CSS_String.fromString(CSS_String.isStringString)("@import url(" + (t + ");\x0a")))));
  };

  var getSheet = function getSheet(v) {
    return v;
  };

  var renderedSheet = function renderedSheet(v) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(v)(function ($176) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(getSheet)(Data_These.theseRight($176));
    });
  };

  var getInline = function getInline(v) {
    return v;
  };

  var renderedInline = function renderedInline(v) {
    return Control_Bind.bind(Data_Maybe.bindMaybe)(v)(function ($177) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(getInline)(Data_These.theseLeft($177));
    });
  };

  var feature = function feature(v) {
    return Data_Maybe.maybe(v.value0)(function (v1) {
      return "(" + (v.value0 + (": " + (CSS_Property.plain(v1) + ")")));
    })(v.value1);
  };

  var mediaQuery = function mediaQuery(v) {
    return "@media " + (mediaType(v.value1) + Data_NonEmpty.foldl1(Data_Foldable.foldableArray)(Data_Semigroup.append(Data_Semigroup.semigroupString))(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_Functor.functorArray))(function ($178) {
      return function (v1) {
        return " and " + v1;
      }(feature($178));
    })(v.value2)));
  };

  var collect$prime = function collect$prime(v) {
    return function (v1) {
      if (v instanceof CSS_Property.Plain && v1 instanceof CSS_Property.Plain) {
        return [new Data_Either.Right(new Data_Tuple.Tuple(v.value0, v1.value0))];
      }

      ;

      if (v instanceof CSS_Property.Prefixed && v1 instanceof CSS_Property.Plain) {
        return Data_Functor.map(Data_Functor.functorArray)(function (v3) {
          return Data_Either.Right.create(new Data_Tuple.Tuple(v3.value0 + v3.value1, v1.value0));
        })(v.value0);
      }

      ;

      if (v instanceof CSS_Property.Plain && v1 instanceof CSS_Property.Prefixed) {
        return Data_Functor.map(Data_Functor.functorArray)(function (v2) {
          return Data_Either.Right.create(new Data_Tuple.Tuple(v.value0, v2.value0 + v2.value1));
        })(v1.value0);
      }

      ;

      if (v instanceof CSS_Property.Prefixed && v1 instanceof CSS_Property.Prefixed) {
        return Data_Functor.map(Data_Functor.functorArray)(function (v2) {
          return Data_Maybe.maybe(new Data_Either.Left(v2.value0 + v2.value1))(function ($179) {
            return Data_Either.Right.create(Data_Tuple.Tuple.create(v2.value0 + v2.value1)(function (v3) {
              return v2.value0 + v3;
            }($179)));
          })(Data_Tuple.lookup(Data_Foldable.foldableArray)(Data_Eq.eqString)(v2.value0)(v1.value0));
        })(v.value0);
      }

      ;
      throw new Error("Failed pattern match at CSS.Render (line 158, column 1 - line 158, column 80): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var collect = function collect(v) {
    return collect$prime(v.value0)(v.value1);
  };

  var rule$prime = function rule$prime(sel) {
    return function (props) {
      var p = Control_Bind.bind(Control_Bind.bindArray)(props)(collect);
      var q = Data_Functor.map(Data_Maybe.functorMaybe)(function ($180) {
        return Data_These.This.create(Inline(properties(Data_NonEmpty.oneOf(Control_Alternative.alternativeArray)($180))));
      })(nel(p));

      var o = function o(sel$prime) {
        return Data_Maybe.Just.create(Data_These.That.create(Sheet(Data_Foldable.intercalate(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(" ")([selector(merger(sel$prime)), "{", properties(p), "}\x0a"]))));
      };

      return Data_Maybe.maybe(q)(o)(nel(sel));
    };
  };

  var rules = function rules(sel) {
    return function (rs) {
      var queries = function queries(v) {
        if (v instanceof CSS_Stylesheet.Query) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, v.value1));
        }

        ;
        return Data_Maybe.Nothing.value;
      };

      var queryRules = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(Data_Tuple.uncurry(Data_Function.flip(query$prime)(sel)))(Data_Array.mapMaybe(queries)(rs));

      var property = function property(v) {
        if (v instanceof CSS_Stylesheet.Property) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, v.value1));
        }

        ;
        return Data_Maybe.Nothing.value;
      };

      var topRules = function () {
        var rs$prime = Data_Array.mapMaybe(property)(rs);
        var $162 = Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean))(Data_Array["null"])(rs$prime);

        if ($162) {
          return rule$prime(sel)(rs$prime);
        }

        ;
        return Data_Maybe.Nothing.value;
      }();

      var nestedRules = function nestedRules(a) {
        return rules(Data_Array.cons(a)(sel));
      };

      var nested = function nested(v) {
        if (v instanceof CSS_Stylesheet.Nested) {
          return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, v.value1));
        }

        ;
        return Data_Maybe.Nothing.value;
      };

      var nestedSheets = Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(Data_Functor.map(Data_Functor.functorArray)(Data_Tuple.uncurry(nestedRules))(Data_Array.mapMaybe(nested)(rs)));

      var kframes = function kframes(v) {
        if (v instanceof CSS_Stylesheet.Keyframe) {
          return new Data_Maybe.Just(v.value0);
        }

        ;
        return Data_Maybe.Nothing.value;
      };

      var keyframeRules = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(kframe)(Data_Array.mapMaybe(kframes)(rs));

      var imports = function imports(v) {
        if (v instanceof CSS_Stylesheet.Import) {
          return new Data_Maybe.Just(v.value0);
        }

        ;
        return Data_Maybe.Nothing.value;
      };

      var importRules = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(imp)(Data_Array.mapMaybe(imports)(rs));

      var faces = function faces(v) {
        if (v instanceof CSS_Stylesheet.Face) {
          return new Data_Maybe.Just(v.value0);
        }

        ;
        return Data_Maybe.Nothing.value;
      };

      var faceRules = Data_Foldable.foldMap(Data_Foldable.foldableArray)(Data_Maybe.monoidMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(face)(Data_Array.mapMaybe(faces)(rs));
      return Data_Semigroup.append(Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(topRules)(Data_Semigroup.append(Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(importRules)(Data_Semigroup.append(Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(keyframeRules)(Data_Semigroup.append(Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(faceRules)(Data_Semigroup.append(Data_Maybe.semigroupMaybe(Data_These.semigroupThese(semigroupInline)(semigroupFile)))(nestedSheets)(queryRules)))));
    };
  };

  var query$prime = function query$prime(q) {
    return function (sel) {
      return function (rs) {
        return Data_Maybe.Just.create(Data_These.That.create(Sheet(mediaQuery(q) + (" { " + (Data_Maybe.fromMaybe("")(renderedSheet(rules(sel)(rs))) + " }\x0a")))));
      };
    };
  };

  var kframe = function kframe(v) {
    var renderContent = " " + (v.value0 + (" { " + (Data_Foldable.intercalate(Data_NonEmpty.foldableNonEmpty(Data_Foldable.foldableArray))(Data_Monoid.monoidString)(" ")(Data_Functor.map(Data_NonEmpty.functorNonEmpty(Data_Functor.functorArray))(Data_Tuple.uncurry(frame))(v.value1)) + " }\x0a")));
    var keywords = ["@keyframes", "@-webkit-keyframes", "@-moz-keyframes", "@-o-keyframes"];
    var allKeywordsWithContent = Data_Foldable.fold(Data_Foldable.foldableArray)(Data_Monoid.monoidString)(Data_Functor.map(Data_Functor.functorArray)(function (v1) {
      return v1 + renderContent;
    })(keywords));
    return Data_Maybe.Just.create(Data_These.That.create(Sheet(allKeywordsWithContent)));
  };

  var frame = function frame(p) {
    return function (rs) {
      var x = Data_Maybe.fromMaybe("")(renderedInline(rules([])(rs)));
      return Data_Show.show(Data_Show.showNumber)(p) + ("% " + ("{ " + (x + " }")));
    };
  };

  var face = function face(rs) {
    return Data_Maybe.Just.create(Data_These.That.create(Sheet("@font-face { " + (Data_Maybe.fromMaybe("")(renderedInline(rules([])(rs))) + " }\x0a"))));
  };

  var render = function render($181) {
    return rules([])(CSS_Stylesheet.runS($181));
  };

  exports["Inline"] = Inline;
  exports["getInline"] = getInline;
  exports["Sheet"] = Sheet;
  exports["getSheet"] = getSheet;
  exports["renderedInline"] = renderedInline;
  exports["renderedSheet"] = renderedSheet;
  exports["render"] = render;
  exports["kframe"] = kframe;
  exports["frame"] = frame;
  exports["mediaQuery"] = mediaQuery;
  exports["mediaType"] = mediaType;
  exports["feature"] = feature;
  exports["face"] = face;
  exports["rules"] = rules;
  exports["imp"] = imp;
  exports["selector"] = selector;
  exports["sepWith"] = sepWith;
  exports["collect"] = collect;
  exports["properties"] = properties;
  exports["merger"] = merger;
  exports["predicate"] = predicate;
  exports["nel"] = nel;
  exports["semigroupInline"] = semigroupInline;
  exports["semigroupFile"] = semigroupFile;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.List.Types"] = $PS["Data.List.Types"] || {};
  var exports = $PS["Data.List.Types"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Plus = $PS["Control.Plus"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Nil = function () {
    function Nil() {}

    ;
    Nil.value = new Nil();
    return Nil;
  }();

  var Cons = function () {
    function Cons(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Cons.create = function (value0) {
      return function (value1) {
        return new Cons(value0, value1);
      };
    };

    return Cons;
  }();

  var NonEmptyList = function NonEmptyList(x) {
    return x;
  };

  var listMap = function listMap(f) {
    var chunkedRevMap = function chunkedRevMap($copy_chunksAcc) {
      return function ($copy_v) {
        var $tco_var_chunksAcc = $copy_chunksAcc;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(chunksAcc, v) {
          if (v instanceof Cons && v.value1 instanceof Cons && v.value1.value1 instanceof Cons) {
            $tco_var_chunksAcc = new Cons(v, chunksAcc);
            $copy_v = v.value1.value1.value1;
            return;
          }

          ;

          var unrolledMap = function unrolledMap(v1) {
            if (v1 instanceof Cons && v1.value1 instanceof Cons && v1.value1.value1 instanceof Nil) {
              return new Cons(f(v1.value0), new Cons(f(v1.value1.value0), Nil.value));
            }

            ;

            if (v1 instanceof Cons && v1.value1 instanceof Nil) {
              return new Cons(f(v1.value0), Nil.value);
            }

            ;
            return Nil.value;
          };

          var reverseUnrolledMap = function reverseUnrolledMap($copy_v1) {
            return function ($copy_acc) {
              var $tco_var_v1 = $copy_v1;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(v1, acc) {
                if (v1 instanceof Cons && v1.value0 instanceof Cons && v1.value0.value1 instanceof Cons && v1.value0.value1.value1 instanceof Cons) {
                  $tco_var_v1 = v1.value1;
                  $copy_acc = new Cons(f(v1.value0.value0), new Cons(f(v1.value0.value1.value0), new Cons(f(v1.value0.value1.value1.value0), acc)));
                  return;
                }

                ;
                $tco_done = true;
                return acc;
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v1, $copy_acc);
              }

              ;
              return $tco_result;
            };
          };

          $tco_done = true;
          return reverseUnrolledMap(chunksAcc)(unrolledMap(v));
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_chunksAcc, $copy_v);
        }

        ;
        return $tco_result;
      };
    };

    return chunkedRevMap(Nil.value);
  };

  var functorList = new Data_Functor.Functor(listMap);
  var foldableList = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
      return Data_Foldable.foldl(foldableList)(function (acc) {
        return function ($202) {
          return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f($202));
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  }, function (f) {
    var go = function go($copy_b) {
      return function ($copy_v) {
        var $tco_var_b = $copy_b;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(b, v) {
          if (v instanceof Nil) {
            $tco_done = true;
            return b;
          }

          ;

          if (v instanceof Cons) {
            $tco_var_b = f(b)(v.value0);
            $copy_v = v.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List.Types (line 109, column 12 - line 111, column 30): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_b, $copy_v);
        }

        ;
        return $tco_result;
      };
    };

    return go;
  }, function (f) {
    return function (b) {
      var rev = Data_Foldable.foldl(foldableList)(Data_Function.flip(Cons.create))(Nil.value);
      return function ($203) {
        return Data_Foldable.foldl(foldableList)(Data_Function.flip(f))(b)(rev($203));
      };
    };
  });
  var semigroupList = new Data_Semigroup.Semigroup(function (xs) {
    return function (ys) {
      return Data_Foldable.foldr(foldableList)(Cons.create)(ys)(xs);
    };
  });
  var applyList = new Control_Apply.Apply(function () {
    return functorList;
  }, function (v) {
    return function (v1) {
      if (v instanceof Nil) {
        return Nil.value;
      }

      ;

      if (v instanceof Cons) {
        return Data_Semigroup.append(semigroupList)(Data_Functor.map(functorList)(v.value0)(v1))(Control_Apply.apply(applyList)(v.value1)(v1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Types (line 155, column 1 - line 155, column 33): " + [v.constructor.name, v1.constructor.name]);
    };
  });
  var bindList = new Control_Bind.Bind(function () {
    return applyList;
  }, function (v) {
    return function (v1) {
      if (v instanceof Nil) {
        return Nil.value;
      }

      ;

      if (v instanceof Cons) {
        return Data_Semigroup.append(semigroupList)(v1(v.value0))(Control_Bind.bind(bindList)(v.value1)(v1));
      }

      ;
      throw new Error("Failed pattern match at Data.List.Types (line 162, column 1 - line 162, column 31): " + [v.constructor.name, v1.constructor.name]);
    };
  });
  var applicativeList = new Control_Applicative.Applicative(function () {
    return applyList;
  }, function (a) {
    return new Cons(a, Nil.value);
  });
  var altList = new Control_Alt.Alt(function () {
    return functorList;
  }, Data_Semigroup.append(semigroupList));
  var plusList = new Control_Plus.Plus(function () {
    return altList;
  }, Nil.value);
  exports["Nil"] = Nil;
  exports["Cons"] = Cons;
  exports["NonEmptyList"] = NonEmptyList;
  exports["semigroupList"] = semigroupList;
  exports["functorList"] = functorList;
  exports["foldableList"] = foldableList;
  exports["applyList"] = applyList;
  exports["applicativeList"] = applicativeList;
  exports["bindList"] = bindList;
  exports["altList"] = altList;
  exports["plusList"] = plusList;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.List.NonEmpty"] = $PS["Data.List.NonEmpty"] || {};
  var exports = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];

  var singleton = function singleton($165) {
    return Data_List_Types.NonEmptyList(Data_NonEmpty.singleton(Data_List_Types.plusList)($165));
  };

  var cons = function cons(y) {
    return function (v) {
      return new Data_NonEmpty.NonEmpty(y, new Data_List_Types.Cons(v.value0, v.value1));
    };
  };

  exports["singleton"] = singleton;
  exports["cons"] = cons;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Applicative.Free"] = $PS["Control.Applicative.Free"] || {};
  var exports = $PS["Control.Applicative.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_NonEmpty = $PS["Data.NonEmpty"];
  var Data_Tuple = $PS["Data.Tuple"];

  var Pure = function () {
    function Pure(value0) {
      this.value0 = value0;
    }

    ;

    Pure.create = function (value0) {
      return new Pure(value0);
    };

    return Pure;
  }();

  var Lift = function () {
    function Lift(value0) {
      this.value0 = value0;
    }

    ;

    Lift.create = function (value0) {
      return new Lift(value0);
    };

    return Lift;
  }();

  var Ap = function () {
    function Ap(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Ap.create = function (value0) {
      return function (value1) {
        return new Ap(value0, value1);
      };
    };

    return Ap;
  }();

  var mkAp = function mkAp(fba) {
    return function (fb) {
      return new Ap(fba, fb);
    };
  };

  var liftFreeAp = Lift.create;

  var goLeft = function goLeft($copy_dictApplicative) {
    return function ($copy_fStack) {
      return function ($copy_valStack) {
        return function ($copy_nat) {
          return function ($copy_func) {
            return function ($copy_count) {
              var $tco_var_dictApplicative = $copy_dictApplicative;
              var $tco_var_fStack = $copy_fStack;
              var $tco_var_valStack = $copy_valStack;
              var $tco_var_nat = $copy_nat;
              var $tco_var_func = $copy_func;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(dictApplicative, fStack, valStack, nat, func, count) {
                if (func instanceof Pure) {
                  $tco_done = true;
                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                    func: Control_Applicative.pure(dictApplicative)(func.value0),
                    count: count
                  }, fStack), valStack);
                }

                ;

                if (func instanceof Lift) {
                  $tco_done = true;
                  return new Data_Tuple.Tuple(new Data_List_Types.Cons({
                    func: nat(func.value0),
                    count: count
                  }, fStack), valStack);
                }

                ;

                if (func instanceof Ap) {
                  $tco_var_dictApplicative = dictApplicative;
                  $tco_var_fStack = fStack;
                  $tco_var_valStack = Data_List_NonEmpty.cons(func.value1)(valStack);
                  $tco_var_nat = nat;
                  $tco_var_func = func.value0;
                  $copy_count = count + 1 | 0;
                  return;
                }

                ;
                throw new Error("Failed pattern match at Control.Applicative.Free (line 102, column 41 - line 105, column 81): " + [func.constructor.name]);
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_valStack, $tco_var_nat, $tco_var_func, $copy_count);
              }

              ;
              return $tco_result;
            };
          };
        };
      };
    };
  };

  var goApply = function goApply($copy_dictApplicative) {
    return function ($copy_fStack) {
      return function ($copy_vals) {
        return function ($copy_gVal) {
          var $tco_var_dictApplicative = $copy_dictApplicative;
          var $tco_var_fStack = $copy_fStack;
          var $tco_var_vals = $copy_vals;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(dictApplicative, fStack, vals, gVal) {
            if (fStack instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return new Data_Either.Left(gVal);
            }

            ;

            if (fStack instanceof Data_List_Types.Cons) {
              var gRes = Control_Apply.apply(dictApplicative.Apply0())(fStack.value0.func)(gVal);
              var $14 = fStack.value0.count === 1;

              if ($14) {
                if (fStack.value1 instanceof Data_List_Types.Nil) {
                  $tco_done = true;
                  return new Data_Either.Left(gRes);
                }

                ;
                $tco_var_dictApplicative = dictApplicative;
                $tco_var_fStack = fStack.value1;
                $tco_var_vals = vals;
                $copy_gVal = gRes;
                return;
              }

              ;

              if (vals instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return new Data_Either.Left(gRes);
              }

              ;

              if (vals instanceof Data_List_Types.Cons) {
                $tco_done = true;
                return Data_Either.Right.create(new Data_Tuple.Tuple(new Data_List_Types.Cons({
                  func: gRes,
                  count: fStack.value0.count - 1 | 0
                }, fStack.value1), new Data_NonEmpty.NonEmpty(vals.value0, vals.value1)));
              }

              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 83, column 11 - line 88, column 50): " + [vals.constructor.name]);
            }

            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 72, column 3 - line 88, column 50): " + [fStack.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_dictApplicative, $tco_var_fStack, $tco_var_vals, $copy_gVal);
          }

          ;
          return $tco_result;
        };
      };
    };
  };

  var functorFreeAp = new Data_Functor.Functor(function (f) {
    return function (x) {
      return mkAp(new Pure(f))(x);
    };
  });

  var foldFreeAp = function foldFreeAp(dictApplicative) {
    return function (nat) {
      return function (z) {
        var go = function go($copy_v) {
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(v) {
            if (v.value1.value0 instanceof Pure) {
              var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(Control_Applicative.pure(dictApplicative)(v.value1.value0.value0));

              if (v1 instanceof Data_Either.Left) {
                $tco_done = true;
                return v1.value0;
              }

              ;

              if (v1 instanceof Data_Either.Right) {
                $copy_v = v1.value0;
                return;
              }

              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 54, column 17 - line 56, column 24): " + [v1.constructor.name]);
            }

            ;

            if (v.value1.value0 instanceof Lift) {
              var v1 = goApply(dictApplicative)(v.value0)(v.value1.value1)(nat(v.value1.value0.value0));

              if (v1 instanceof Data_Either.Left) {
                $tco_done = true;
                return v1.value0;
              }

              ;

              if (v1 instanceof Data_Either.Right) {
                $copy_v = v1.value0;
                return;
              }

              ;
              throw new Error("Failed pattern match at Control.Applicative.Free (line 57, column 17 - line 59, column 24): " + [v1.constructor.name]);
            }

            ;

            if (v.value1.value0 instanceof Ap) {
              var nextVals = new Data_NonEmpty.NonEmpty(v.value1.value0.value1, v.value1.value1);
              $copy_v = goLeft(dictApplicative)(v.value0)(nextVals)(nat)(v.value1.value0.value0)(1);
              return;
            }

            ;
            throw new Error("Failed pattern match at Control.Applicative.Free (line 53, column 5 - line 64, column 1): " + [v.value1.value0.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($copy_v);
          }

          ;
          return $tco_result;
        };

        return go(new Data_Tuple.Tuple(Data_List_Types.Nil.value, Data_List_NonEmpty.singleton(z)));
      };
    };
  };

  var retractFreeAp = function retractFreeAp(dictApplicative) {
    return foldFreeAp(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
  };

  var applyFreeAp = new Control_Apply.Apply(function () {
    return functorFreeAp;
  }, function (fba) {
    return function (fb) {
      return mkAp(fba)(fb);
    };
  });
  var applicativeFreeAp = new Control_Applicative.Applicative(function () {
    return applyFreeAp;
  }, Pure.create);

  var hoistFreeAp = function hoistFreeAp(f) {
    return foldFreeAp(applicativeFreeAp)(function ($37) {
      return liftFreeAp(f($37));
    });
  };

  exports["liftFreeAp"] = liftFreeAp;
  exports["retractFreeAp"] = retractFreeAp;
  exports["foldFreeAp"] = foldFreeAp;
  exports["hoistFreeAp"] = hoistFreeAp;
  exports["functorFreeAp"] = functorFreeAp;
  exports["applyFreeAp"] = applyFreeAp;
  exports["applicativeFreeAp"] = applicativeFreeAp;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Error.Class"] = $PS["Control.Monad.Error.Class"] || {};
  var exports = $PS["Control.Monad.Error.Class"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];

  var MonadThrow = function MonadThrow(Monad0, throwError) {
    this.Monad0 = Monad0;
    this.throwError = throwError;
  };

  var MonadError = function MonadError(MonadThrow0, catchError) {
    this.MonadThrow0 = MonadThrow0;
    this.catchError = catchError;
  };

  var throwError = function throwError(dict) {
    return dict.throwError;
  };

  var catchError = function catchError(dict) {
    return dict.catchError;
  };

  var $$try = function $$try(dictMonadError) {
    return function (a) {
      return catchError(dictMonadError)(Data_Functor.map(dictMonadError.MonadThrow0().Monad0().Bind1().Apply0().Functor0())(Data_Either.Right.create)(a))(function ($21) {
        return Control_Applicative.pure(dictMonadError.MonadThrow0().Monad0().Applicative0())(Data_Either.Left.create($21));
      });
    };
  };

  exports["catchError"] = catchError;
  exports["throwError"] = throwError;
  exports["MonadThrow"] = MonadThrow;
  exports["MonadError"] = MonadError;
  exports["try"] = $$try;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Except.Trans"] = $PS["Control.Monad.Except.Trans"] || {};
  var exports = $PS["Control.Monad.Except.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];

  var ExceptT = function ExceptT(x) {
    return x;
  };

  var runExceptT = function runExceptT(v) {
    return v;
  };

  var mapExceptT = function mapExceptT(f) {
    return function (v) {
      return f(v);
    };
  };

  var functorExceptT = function functorExceptT(dictFunctor) {
    return new Data_Functor.Functor(function (f) {
      return mapExceptT(Data_Functor.map(dictFunctor)(Data_Functor.map(Data_Either.functorEither)(f)));
    });
  };

  var monadExceptT = function monadExceptT(dictMonad) {
    return new Control_Monad.Monad(function () {
      return applicativeExceptT(dictMonad);
    }, function () {
      return bindExceptT(dictMonad);
    });
  };

  var bindExceptT = function bindExceptT(dictMonad) {
    return new Control_Bind.Bind(function () {
      return applyExceptT(dictMonad);
    }, function (v) {
      return function (k) {
        return Control_Bind.bind(dictMonad.Bind1())(v)(Data_Either.either(function ($97) {
          return Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($97));
        })(function (a) {
          var v1 = k(a);
          return v1;
        }));
      };
    });
  };

  var applyExceptT = function applyExceptT(dictMonad) {
    return new Control_Apply.Apply(function () {
      return functorExceptT(dictMonad.Bind1().Apply0().Functor0());
    }, Control_Monad.ap(monadExceptT(dictMonad)));
  };

  var applicativeExceptT = function applicativeExceptT(dictMonad) {
    return new Control_Applicative.Applicative(function () {
      return applyExceptT(dictMonad);
    }, function ($98) {
      return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Right.create($98)));
    });
  };

  var monadThrowExceptT = function monadThrowExceptT(dictMonad) {
    return new Control_Monad_Error_Class.MonadThrow(function () {
      return monadExceptT(dictMonad);
    }, function ($102) {
      return ExceptT(Control_Applicative.pure(dictMonad.Applicative0())(Data_Either.Left.create($102)));
    });
  };

  exports["ExceptT"] = ExceptT;
  exports["runExceptT"] = runExceptT;
  exports["mapExceptT"] = mapExceptT;
  exports["functorExceptT"] = functorExceptT;
  exports["applyExceptT"] = applyExceptT;
  exports["applicativeExceptT"] = applicativeExceptT;
  exports["bindExceptT"] = bindExceptT;
  exports["monadExceptT"] = monadExceptT;
  exports["monadThrowExceptT"] = monadThrowExceptT;
})(PS);

(function (exports) {
  "use strict";

  exports.pureE = function (a) {
    return function () {
      return a;
    };
  };

  exports.bindE = function (a) {
    return function (f) {
      return function () {
        return f(a())();
      };
    };
  };

  exports.foreachE = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
})(PS["Effect"] = PS["Effect"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect"] = $PS["Effect"] || {};
  var exports = $PS["Effect"];
  var $foreign = $PS["Effect"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Data_Functor = $PS["Data.Functor"];
  var monadEffect = new Control_Monad.Monad(function () {
    return applicativeEffect;
  }, function () {
    return bindEffect;
  });
  var bindEffect = new Control_Bind.Bind(function () {
    return applyEffect;
  }, $foreign.bindE);
  var applyEffect = new Control_Apply.Apply(function () {
    return functorEffect;
  }, Control_Monad.ap(monadEffect));
  var applicativeEffect = new Control_Applicative.Applicative(function () {
    return applyEffect;
  }, $foreign.pureE);
  var functorEffect = new Data_Functor.Functor(Control_Applicative.liftA1(applicativeEffect));
  exports["functorEffect"] = functorEffect;
  exports["applyEffect"] = applyEffect;
  exports["applicativeEffect"] = applicativeEffect;
  exports["bindEffect"] = bindEffect;
  exports["monadEffect"] = monadEffect;
  exports["foreachE"] = $foreign.foreachE;
})(PS);

(function (exports) {
  "use strict";

  exports.new = function (val) {
    return function () {
      return {
        value: val
      };
    };
  };

  exports.read = function (ref) {
    return function () {
      return ref.value;
    };
  };

  exports["modify'"] = function (f) {
    return function (ref) {
      return function () {
        var t = f(ref.value);
        ref.value = t.state;
        return t.value;
      };
    };
  };

  exports.write = function (val) {
    return function (ref) {
      return function () {
        ref.value = val;
        return {};
      };
    };
  };
})(PS["Effect.Ref"] = PS["Effect.Ref"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect.Ref"] = $PS["Effect.Ref"] || {};
  var exports = $PS["Effect.Ref"];
  var $foreign = $PS["Effect.Ref"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];

  var modify = function modify(f) {
    return $foreign["modify'"](function (s) {
      var s$prime = f(s);
      return {
        state: s$prime,
        value: s$prime
      };
    });
  };

  var modify_ = function modify_(f) {
    return function (s) {
      return Data_Functor["void"](Effect.functorEffect)(modify(f)(s));
    };
  };

  exports["modify"] = modify;
  exports["modify_"] = modify_;
  exports["new"] = $foreign["new"];
  exports["read"] = $foreign.read;
  exports["modify'"] = $foreign["modify'"];
  exports["write"] = $foreign.write;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Rec.Class"] = $PS["Control.Monad.Rec.Class"] || {};
  var exports = $PS["Control.Monad.Rec.Class"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];

  var Loop = function () {
    function Loop(value0) {
      this.value0 = value0;
    }

    ;

    Loop.create = function (value0) {
      return new Loop(value0);
    };

    return Loop;
  }();

  var Done = function () {
    function Done(value0) {
      this.value0 = value0;
    }

    ;

    Done.create = function (value0) {
      return new Done(value0);
    };

    return Done;
  }();

  var MonadRec = function MonadRec(Monad0, tailRecM) {
    this.Monad0 = Monad0;
    this.tailRecM = tailRecM;
  };

  var tailRecM = function tailRecM(dict) {
    return dict.tailRecM;
  };

  var monadRecEffect = new MonadRec(function () {
    return Effect.monadEffect;
  }, function (f) {
    return function (a) {
      var fromDone = function fromDone(v) {
        if (v instanceof Done) {
          return v.value0;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 111, column 30 - line 111, column 44): " + [v.constructor.name]);
      };

      return function __do() {
        var v = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(f(a))();

        (function () {
          while (!function __do() {
            var v1 = Effect_Ref.read(v)();

            if (v1 instanceof Loop) {
              var v2 = f(v1.value0)();
              var v3 = Effect_Ref.write(v2)(v)();
              return false;
            }

            ;

            if (v1 instanceof Done) {
              return true;
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Rec.Class (line 102, column 22 - line 107, column 28): " + [v1.constructor.name]);
          }()) {}

          ;
          return {};
        })();

        return Data_Functor.map(Effect.functorEffect)(fromDone)(Effect_Ref.read(v))();
      };
    };
  });
  exports["Loop"] = Loop;
  exports["Done"] = Done;
  exports["MonadRec"] = MonadRec;
  exports["tailRecM"] = tailRecM;
  exports["monadRecEffect"] = monadRecEffect;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Trans.Class"] = $PS["Control.Monad.Trans.Class"] || {};
  var exports = $PS["Control.Monad.Trans.Class"];

  var MonadTrans = function MonadTrans(lift) {
    this.lift = lift;
  };

  var lift = function lift(dict) {
    return dict.lift;
  };

  exports["lift"] = lift;
  exports["MonadTrans"] = MonadTrans;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Exists"] = $PS["Data.Exists"] || {};
  var exports = $PS["Data.Exists"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var runExists = Unsafe_Coerce.unsafeCoerce;
  var mkExists = Unsafe_Coerce.unsafeCoerce;
  exports["mkExists"] = mkExists;
  exports["runExists"] = runExists;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Free.Trans"] = $PS["Control.Monad.Free.Trans"] || {};
  var exports = $PS["Control.Monad.Free.Trans"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Exists = $PS["Data.Exists"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];

  var Bound = function () {
    function Bound(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Bound.create = function (value0) {
      return function (value1) {
        return new Bound(value0, value1);
      };
    };

    return Bound;
  }();

  var FreeT = function () {
    function FreeT(value0) {
      this.value0 = value0;
    }

    ;

    FreeT.create = function (value0) {
      return new FreeT(value0);
    };

    return FreeT;
  }();

  var Bind = function () {
    function Bind(value0) {
      this.value0 = value0;
    }

    ;

    Bind.create = function (value0) {
      return new Bind(value0);
    };

    return Bind;
  }();

  var monadTransFreeT = function monadTransFreeT(dictFunctor) {
    return new Control_Monad_Trans_Class.MonadTrans(function (dictMonad) {
      return function (ma) {
        return new FreeT(function (v) {
          return Data_Functor.map(dictMonad.Bind1().Apply0().Functor0())(Data_Either.Left.create)(ma);
        });
      };
    });
  };

  var freeT = FreeT.create;

  var bound = function bound(m) {
    return function (f) {
      return new Bind(Data_Exists.mkExists(new Bound(m, f)));
    };
  };

  var functorFreeT = function functorFreeT(dictFunctor) {
    return function (dictFunctor1) {
      return new Data_Functor.Functor(function (f) {
        return function (v) {
          if (v instanceof FreeT) {
            return new FreeT(function (v1) {
              return Data_Functor.map(dictFunctor1)(Data_Bifunctor.bimap(Data_Either.bifunctorEither)(f)(Data_Functor.map(dictFunctor)(Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f))))(v.value0(Data_Unit.unit));
            });
          }

          ;

          if (v instanceof Bind) {
            return Data_Exists.runExists(function (v1) {
              return bound(v1.value0)(function ($104) {
                return Data_Functor.map(functorFreeT(dictFunctor)(dictFunctor1))(f)(v1.value1($104));
              });
            })(v.value0);
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 57, column 1 - line 57, column 71): " + [f.constructor.name, v.constructor.name]);
        };
      });
    };
  };

  var monadFreeT = function monadFreeT(dictFunctor) {
    return function (dictMonad) {
      return new Control_Monad.Monad(function () {
        return applicativeFreeT(dictFunctor)(dictMonad);
      }, function () {
        return bindFreeT(dictFunctor)(dictMonad);
      });
    };
  };

  var bindFreeT = function bindFreeT(dictFunctor) {
    return function (dictMonad) {
      return new Control_Bind.Bind(function () {
        return applyFreeT(dictFunctor)(dictMonad);
      }, function (v) {
        return function (f) {
          if (v instanceof Bind) {
            return Data_Exists.runExists(function (v1) {
              return bound(v1.value0)(function (x) {
                return bound(function (v2) {
                  return v1.value1(x);
                })(f);
              });
            })(v.value0);
          }

          ;
          return bound(function (v1) {
            return v;
          })(f);
        };
      });
    };
  };

  var applyFreeT = function applyFreeT(dictFunctor) {
    return function (dictMonad) {
      return new Control_Apply.Apply(function () {
        return functorFreeT(dictFunctor)(dictMonad.Bind1().Apply0().Functor0());
      }, Control_Monad.ap(monadFreeT(dictFunctor)(dictMonad)));
    };
  };

  var applicativeFreeT = function applicativeFreeT(dictFunctor) {
    return function (dictMonad) {
      return new Control_Applicative.Applicative(function () {
        return applyFreeT(dictFunctor)(dictMonad);
      }, function (a) {
        return new FreeT(function (v) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Left(a));
        });
      });
    };
  };

  var liftFreeT = function liftFreeT(dictFunctor) {
    return function (dictMonad) {
      return function (fa) {
        return new FreeT(function (v) {
          return Control_Applicative.pure(dictMonad.Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor)(Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad)))(fa)));
        });
      };
    };
  };

  var resume = function resume(dictFunctor) {
    return function (dictMonadRec) {
      var go = function go(v) {
        if (v instanceof FreeT) {
          return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(v.value0(Data_Unit.unit));
        }

        ;

        if (v instanceof Bind) {
          return Data_Exists.runExists(function (v1) {
            var v2 = v1.value0(Data_Unit.unit);

            if (v2 instanceof FreeT) {
              return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(v2.value0(Data_Unit.unit))(function (v3) {
                if (v3 instanceof Data_Either.Left) {
                  return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop(v1.value1(v3.value0)));
                }

                ;

                if (v3 instanceof Data_Either.Right) {
                  return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(new Data_Either.Right(Data_Functor.map(dictFunctor)(function (h) {
                    return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(h)(v1.value1);
                  })(v3.value0))));
                }

                ;
                throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 52, column 20 - line 54, column 67): " + [v3.constructor.name]);
              });
            }

            ;

            if (v2 instanceof Bind) {
              return Data_Exists.runExists(function (v3) {
                return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Loop(Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value0(Data_Unit.unit))(function (z) {
                  return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonadRec.Monad0()))(v3.value1(z))(v1.value1);
                })));
              })(v2.value0);
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 50, column 5 - line 55, column 98): " + [v2.constructor.name]);
          })(v.value0);
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 47, column 3 - line 47, column 75): " + [v.constructor.name]);
      };

      return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
    };
  };

  var runFreeT = function runFreeT(dictFunctor) {
    return function (dictMonadRec) {
      return function (interp) {
        var go = function go(v) {
          if (v instanceof Data_Either.Left) {
            return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Control_Monad_Rec_Class.Done(v.value0));
          }

          ;

          if (v instanceof Data_Either.Right) {
            return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Loop.create)(interp(v.value0));
          }

          ;
          throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 126, column 3 - line 126, column 63): " + [v.constructor.name]);
        };

        return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(Control_Bind.composeKleisliFlipped(dictMonadRec.Monad0().Bind1())(go)(resume(dictFunctor)(dictMonadRec)));
      };
    };
  };

  var monadRecFreeT = function monadRecFreeT(dictFunctor) {
    return function (dictMonad) {
      return new Control_Monad_Rec_Class.MonadRec(function () {
        return monadFreeT(dictFunctor)(dictMonad);
      }, function (f) {
        var go = function go(s) {
          return Control_Bind.bind(bindFreeT(dictFunctor)(dictMonad))(f(s))(function (v) {
            if (v instanceof Control_Monad_Rec_Class.Loop) {
              return go(v.value0);
            }

            ;

            if (v instanceof Control_Monad_Rec_Class.Done) {
              return Control_Applicative.pure(applicativeFreeT(dictFunctor)(dictMonad))(v.value0);
            }

            ;
            throw new Error("Failed pattern match at Control.Monad.Free.Trans (line 80, column 15 - line 82, column 25): " + [v.constructor.name]);
          });
        };

        return go;
      });
    };
  };

  exports["freeT"] = freeT;
  exports["liftFreeT"] = liftFreeT;
  exports["resume"] = resume;
  exports["runFreeT"] = runFreeT;
  exports["functorFreeT"] = functorFreeT;
  exports["applyFreeT"] = applyFreeT;
  exports["applicativeFreeT"] = applicativeFreeT;
  exports["bindFreeT"] = bindFreeT;
  exports["monadFreeT"] = monadFreeT;
  exports["monadTransFreeT"] = monadTransFreeT;
  exports["monadRecFreeT"] = monadRecFreeT;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Parallel.Class"] = $PS["Control.Parallel.Class"] || {};
  var exports = $PS["Control.Parallel.Class"];

  var Parallel = function Parallel(Applicative1, Monad0, parallel, sequential) {
    this.Applicative1 = Applicative1;
    this.Monad0 = Monad0;
    this.parallel = parallel;
    this.sequential = sequential;
  };

  var sequential = function sequential(dict) {
    return dict.sequential;
  };

  var parallel = function parallel(dict) {
    return dict.parallel;
  };

  exports["parallel"] = parallel;
  exports["sequential"] = sequential;
  exports["Parallel"] = Parallel;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Coroutine"] = $PS["Control.Coroutine"] || {};
  var exports = $PS["Control.Coroutine"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Control_Monad_Free_Trans = $PS["Control.Monad.Free.Trans"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];

  var Emit = function () {
    function Emit(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Emit.create = function (value0) {
      return function (value1) {
        return new Emit(value0, value1);
      };
    };

    return Emit;
  }();

  var runProcess = function runProcess(dictMonadRec) {
    return Control_Monad_Free_Trans.runFreeT(Data_Identity.functorIdentity)(dictMonadRec)(function ($186) {
      return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(Data_Newtype.unwrap(Data_Identity.newtypeIdentity)($186));
    });
  };

  var profunctorAwait = new Data_Profunctor.Profunctor(function (f) {
    return function (g) {
      return function (v) {
        return Data_Profunctor.dimap(Data_Profunctor.profunctorFn)(f)(g)(v);
      };
    };
  });

  var loop = function loop(dictFunctor) {
    return function (dictMonad) {
      return function (me) {
        return Control_Monad_Rec_Class.tailRecM(Control_Monad_Free_Trans.monadRecFreeT(dictFunctor)(dictMonad))(function (v) {
          return Data_Functor.map(Control_Monad_Free_Trans.functorFreeT(dictFunctor)(dictMonad.Bind1().Apply0().Functor0()))(Data_Maybe.maybe(new Control_Monad_Rec_Class.Loop(Data_Unit.unit))(Control_Monad_Rec_Class.Done.create))(me);
        })(Data_Unit.unit);
      };
    };
  };

  var fuseWithL = function fuseWithL(dictFunctor) {
    return function (dictFunctor1) {
      return function (dictFunctor2) {
        return function (dictMonadRec) {
          return function (zap) {
            return function (fs) {
              return function (gs) {
                var go = function go(v) {
                  return Control_Monad_Except_Trans.runExceptT(Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0)))(function (v1) {
                    return Control_Bind.bind(Control_Monad_Except_Trans.bindExceptT(dictMonadRec.Monad0()))(Control_Monad_Except_Trans.ExceptT(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))(function (v2) {
                      return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(dictMonadRec.Monad0()))(Data_Functor.map(dictFunctor2)(function (t) {
                        return Control_Monad_Free_Trans.freeT(function (v3) {
                          return go(t);
                        });
                      })(zap(Data_Tuple.Tuple.create)(v1)(v2)));
                    });
                  }));
                };

                return Control_Monad_Free_Trans.freeT(function (v) {
                  return go(new Data_Tuple.Tuple(fs, gs));
                });
              };
            };
          };
        };
      };
    };
  };

  var fuseWith = function fuseWith(dictFunctor) {
    return function (dictFunctor1) {
      return function (dictFunctor2) {
        return function (dictMonadRec) {
          return function (dictParallel) {
            return function (zap) {
              return function (fs) {
                return function (gs) {
                  var go = function go(v) {
                    return Control_Bind.bind(dictMonadRec.Monad0().Bind1())(Control_Parallel_Class.sequential(dictParallel)(Control_Apply.apply(dictParallel.Applicative1().Apply0())(Data_Functor.map(dictParallel.Applicative1().Apply0().Functor0())(Control_Apply.lift2(Data_Either.applyEither)(zap(Data_Tuple.Tuple.create)))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor)(dictMonadRec)(v.value0))))(Control_Parallel_Class.parallel(dictParallel)(Control_Monad_Free_Trans.resume(dictFunctor1)(dictMonadRec)(v.value1)))))(function (v1) {
                      if (v1 instanceof Data_Either.Left) {
                        return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Data_Either.Left(v1.value0));
                      }

                      ;

                      if (v1 instanceof Data_Either.Right) {
                        return Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(new Data_Either.Right(Data_Functor.map(dictFunctor2)(function (t) {
                          return Control_Monad_Free_Trans.freeT(function (v2) {
                            return go(t);
                          });
                        })(v1.value0)));
                      }

                      ;
                      throw new Error("Failed pattern match at Control.Coroutine (line 79, column 5 - line 81, column 63): " + [v1.constructor.name]);
                    });
                  };

                  return Control_Monad_Free_Trans.freeT(function (v) {
                    return go(new Data_Tuple.Tuple(fs, gs));
                  });
                };
              };
            };
          };
        };
      };
    };
  };

  var functorAwait = new Data_Functor.Functor(Data_Profunctor.rmap(profunctorAwait));
  var bifunctorEmit = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
      return function (v) {
        return new Emit(f(v.value0), g(v.value1));
      };
    };
  });
  var functorEmit = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorEmit));

  var connect = function connect(dictMonadRec) {
    return function (dictParallel) {
      return fuseWith(functorEmit)(functorAwait)(Data_Identity.functorIdentity)(dictMonadRec)(dictParallel)(function (f) {
        return function (v) {
          return function (v1) {
            return f(v.value1)(v1(v.value0));
          };
        };
      });
    };
  };

  var emit = function emit(dictMonad) {
    return function (o) {
      return Control_Monad_Free_Trans.liftFreeT(functorEmit)(dictMonad)(new Emit(o, Data_Unit.unit));
    };
  };

  var producer = function producer(dictMonad) {
    return function (recv) {
      return loop(functorEmit)(dictMonad)(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(functorEmit)(dictMonad))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(functorEmit))(dictMonad)(recv))(function (v) {
        if (v instanceof Data_Either.Left) {
          return Data_Functor.voidLeft(Control_Monad_Free_Trans.functorFreeT(functorEmit)(dictMonad.Bind1().Apply0().Functor0()))(emit(dictMonad)(v.value0))(Data_Maybe.Nothing.value);
        }

        ;

        if (v instanceof Data_Either.Right) {
          return Control_Applicative.pure(Control_Monad_Free_Trans.applicativeFreeT(functorEmit)(dictMonad))(new Data_Maybe.Just(v.value0));
        }

        ;
        throw new Error("Failed pattern match at Control.Coroutine (line 125, column 3 - line 127, column 29): " + [v.constructor.name]);
      }));
    };
  };

  var pullFrom = function pullFrom(dictMonadRec) {
    return fuseWithL(functorAwait)(functorEmit)(Data_Identity.functorIdentity)(dictMonadRec)(function (f) {
      return function (v) {
        return function (v1) {
          return Control_Applicative.pure(Data_Identity.applicativeIdentity)(f(v(v1.value0))(v1.value1));
        };
      };
    });
  };

  var $$await = function $$await(dictMonad) {
    return Control_Monad_Free_Trans.liftFreeT(functorAwait)(dictMonad)(Control_Category.identity(Control_Category.categoryFn));
  };

  exports["loop"] = loop;
  exports["runProcess"] = runProcess;
  exports["fuseWith"] = fuseWith;
  exports["fuseWithL"] = fuseWithL;
  exports["Emit"] = Emit;
  exports["emit"] = emit;
  exports["producer"] = producer;
  exports["await"] = $$await;
  exports["connect"] = connect;
  exports["pullFrom"] = pullFrom;
  exports["bifunctorEmit"] = bifunctorEmit;
  exports["functorEmit"] = functorEmit;
  exports["profunctorAwait"] = profunctorAwait;
  exports["functorAwait"] = functorAwait;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Except"] = $PS["Control.Monad.Except"] || {};
  var exports = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Newtype = $PS["Data.Newtype"];

  var runExcept = function runExcept($0) {
    return Data_Newtype.unwrap(Data_Identity.newtypeIdentity)(Control_Monad_Except_Trans.runExceptT($0));
  };

  exports["runExcept"] = runExcept;
})(PS);

(function (exports) {
  /* globals setImmediate, clearImmediate, setTimeout, clearTimeout */

  /* jshint -W083, -W098, -W003 */
  "use strict";

  var Aff = function () {
    // A unique value for empty.
    var EMPTY = {};
    /*
    An awkward approximation. We elide evidence we would otherwise need in PS for
    efficiency sake.
    data Aff eff a
    = Pure a
    | Throw Error
    | Catch (Aff eff a) (Error -> Aff eff a)
    | Sync (Eff eff a)
    | Async ((Either Error a -> Eff eff Unit) -> Eff eff (Canceler eff))
    | forall b. Bind (Aff eff b) (b -> Aff eff a)
    | forall b. Bracket (Aff eff b) (BracketConditions eff b) (b -> Aff eff a)
    | forall b. Fork Boolean (Aff eff b) ?(Fiber eff b -> a)
    | Sequential (ParAff aff a)
    */

    var PURE = "Pure";
    var THROW = "Throw";
    var CATCH = "Catch";
    var SYNC = "Sync";
    var ASYNC = "Async";
    var BIND = "Bind";
    var BRACKET = "Bracket";
    var FORK = "Fork";
    var SEQ = "Sequential";
    /*
    data ParAff eff a
    = forall b. Map (b -> a) (ParAff eff b)
    | forall b. Apply (ParAff eff (b -> a)) (ParAff eff b)
    | Alt (ParAff eff a) (ParAff eff a)
    | ?Par (Aff eff a)
    */

    var MAP = "Map";
    var APPLY = "Apply";
    var ALT = "Alt"; // Various constructors used in interpretation

    var CONS = "Cons"; // Cons-list, for stacks

    var RESUME = "Resume"; // Continue indiscriminately

    var RELEASE = "Release"; // Continue with bracket finalizers

    var FINALIZER = "Finalizer"; // A non-interruptible effect

    var FINALIZED = "Finalized"; // Marker for finalization

    var FORKED = "Forked"; // Reference to a forked fiber, with resumption stack

    var FIBER = "Fiber"; // Actual fiber reference

    var THUNK = "Thunk"; // Primed effect, ready to invoke

    function Aff(tag, _1, _2, _3) {
      this.tag = tag;
      this._1 = _1;
      this._2 = _2;
      this._3 = _3;
    }

    function AffCtr(tag) {
      var fn = function fn(_1, _2, _3) {
        return new Aff(tag, _1, _2, _3);
      };

      fn.tag = tag;
      return fn;
    }

    function nonCanceler(error) {
      return new Aff(PURE, void 0);
    }

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function runSync(left, right, eff) {
      try {
        return right(eff());
      } catch (error) {
        return left(error);
      }
    }

    function runAsync(left, eff, k) {
      try {
        return eff(k)();
      } catch (error) {
        k(left(error))();
        return nonCanceler;
      }
    }

    var Scheduler = function () {
      var limit = 1024;
      var size = 0;
      var ix = 0;
      var queue = new Array(limit);
      var draining = false;

      function drain() {
        var thunk;
        draining = true;

        while (size !== 0) {
          size--;
          thunk = queue[ix];
          queue[ix] = void 0;
          ix = (ix + 1) % limit;
          thunk();
        }

        draining = false;
      }

      return {
        isDraining: function isDraining() {
          return draining;
        },
        enqueue: function enqueue(cb) {
          var i, tmp;

          if (size === limit) {
            tmp = draining;
            drain();
            draining = tmp;
          }

          queue[(ix + size) % limit] = cb;
          size++;

          if (!draining) {
            drain();
          }
        }
      };
    }();

    function Supervisor(util) {
      var fibers = {};
      var fiberId = 0;
      var count = 0;
      return {
        register: function register(fiber) {
          var fid = fiberId++;
          fiber.onComplete({
            rethrow: true,
            handler: function handler(result) {
              return function () {
                count--;
                delete fibers[fid];
              };
            }
          });
          fibers[fid] = fiber;
          count++;
        },
        isEmpty: function isEmpty() {
          return count === 0;
        },
        killAll: function killAll(killError, cb) {
          return function () {
            if (count === 0) {
              return cb();
            }

            var killCount = 0;
            var kills = {};

            function kill(fid) {
              kills[fid] = fibers[fid].kill(killError, function (result) {
                return function () {
                  delete kills[fid];
                  killCount--;

                  if (util.isLeft(result) && util.fromLeft(result)) {
                    setTimeout(function () {
                      throw util.fromLeft(result);
                    }, 0);
                  }

                  if (killCount === 0) {
                    cb();
                  }
                };
              })();
            }

            for (var k in fibers) {
              if (fibers.hasOwnProperty(k)) {
                killCount++;
                kill(k);
              }
            }

            fibers = {};
            fiberId = 0;
            count = 0;
            return function (error) {
              return new Aff(SYNC, function () {
                for (var k in kills) {
                  if (kills.hasOwnProperty(k)) {
                    kills[k]();
                  }
                }
              });
            };
          };
        }
      };
    } // Fiber state machine


    var SUSPENDED = 0; // Suspended, pending a join.

    var CONTINUE = 1; // Interpret the next instruction.

    var STEP_BIND = 2; // Apply the next bind.

    var STEP_RESULT = 3; // Handle potential failure from a result.

    var PENDING = 4; // An async effect is running.

    var RETURN = 5; // The current stack has returned.

    var COMPLETED = 6; // The entire fiber has completed.

    function Fiber(util, supervisor, aff) {
      // Monotonically increasing tick, increased on each asynchronous turn.
      var runTick = 0; // The current branch of the state machine.

      var status = SUSPENDED; // The current point of interest for the state machine branch.

      var step = aff; // Successful step

      var fail = null; // Failure step

      var interrupt = null; // Asynchronous interrupt
      // Stack of continuations for the current fiber.

      var bhead = null;
      var btail = null; // Stack of attempts and finalizers for error recovery. Every `Cons` is also
      // tagged with current `interrupt` state. We use this to track which items
      // should be ignored or evaluated as a result of a kill.

      var attempts = null; // A special state is needed for Bracket, because it cannot be killed. When
      // we enter a bracket acquisition or finalizer, we increment the counter,
      // and then decrement once complete.

      var bracketCount = 0; // Each join gets a new id so they can be revoked.

      var joinId = 0;
      var joins = null;
      var rethrow = true; // Each invocation of `run` requires a tick. When an asynchronous effect is
      // resolved, we must check that the local tick coincides with the fiber
      // tick before resuming. This prevents multiple async continuations from
      // accidentally resuming the same fiber. A common example may be invoking
      // the provided callback in `makeAff` more than once, but it may also be an
      // async effect resuming after the fiber was already cancelled.

      function _run(localRunTick) {
        var tmp, result, attempt;

        while (true) {
          tmp = null;
          result = null;
          attempt = null;

          switch (status) {
            case STEP_BIND:
              status = CONTINUE;
              step = bhead(step);

              if (btail === null) {
                bhead = null;
              } else {
                bhead = btail._1;
                btail = btail._2;
              }

              break;

            case STEP_RESULT:
              if (util.isLeft(step)) {
                status = RETURN;
                fail = step;
                step = null;
              } else if (bhead === null) {
                status = RETURN;
              } else {
                status = STEP_BIND;
                step = util.fromRight(step);
              }

              break;

            case CONTINUE:
              switch (step.tag) {
                case BIND:
                  if (bhead) {
                    btail = new Aff(CONS, bhead, btail);
                  }

                  bhead = step._2;
                  status = CONTINUE;
                  step = step._1;
                  break;

                case PURE:
                  if (bhead === null) {
                    status = RETURN;
                    step = util.right(step._1);
                  } else {
                    status = STEP_BIND;
                    step = step._1;
                  }

                  break;

                case SYNC:
                  status = STEP_RESULT;
                  step = runSync(util.left, util.right, step._1);
                  break;

                case ASYNC:
                  status = PENDING;
                  step = runAsync(util.left, step._1, function (result) {
                    return function () {
                      if (runTick !== localRunTick) {
                        return;
                      }

                      runTick++;
                      Scheduler.enqueue(function () {
                        // It's possible to interrupt the fiber between enqueuing and
                        // resuming, so we need to check that the runTick is still
                        // valid.
                        if (runTick !== localRunTick + 1) {
                          return;
                        }

                        status = STEP_RESULT;
                        step = result;

                        _run(runTick);
                      });
                    };
                  });
                  return;

                case THROW:
                  status = RETURN;
                  fail = util.left(step._1);
                  step = null;
                  break;
                // Enqueue the Catch so that we can call the error handler later on
                // in case of an exception.

                case CATCH:
                  if (bhead === null) {
                    attempts = new Aff(CONS, step, attempts, interrupt);
                  } else {
                    attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }

                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step = step._1;
                  break;
                // Enqueue the Bracket so that we can call the appropriate handlers
                // after resource acquisition.

                case BRACKET:
                  bracketCount++;

                  if (bhead === null) {
                    attempts = new Aff(CONS, step, attempts, interrupt);
                  } else {
                    attempts = new Aff(CONS, step, new Aff(CONS, new Aff(RESUME, bhead, btail), attempts, interrupt), interrupt);
                  }

                  bhead = null;
                  btail = null;
                  status = CONTINUE;
                  step = step._1;
                  break;

                case FORK:
                  status = STEP_RESULT;
                  tmp = Fiber(util, supervisor, step._2);

                  if (supervisor) {
                    supervisor.register(tmp);
                  }

                  if (step._1) {
                    tmp.run();
                  }

                  step = util.right(tmp);
                  break;

                case SEQ:
                  status = CONTINUE;
                  step = sequential(util, supervisor, step._1);
                  break;
              }

              break;

            case RETURN:
              bhead = null;
              btail = null; // If the current stack has returned, and we have no other stacks to
              // resume or finalizers to run, the fiber has halted and we can
              // invoke all join callbacks. Otherwise we need to resume.

              if (attempts === null) {
                status = COMPLETED;
                step = interrupt || fail || step;
              } else {
                // The interrupt status for the enqueued item.
                tmp = attempts._3;
                attempt = attempts._1;
                attempts = attempts._2;

                switch (attempt.tag) {
                  // We cannot recover from an unmasked interrupt. Otherwise we should
                  // continue stepping, or run the exception handler if an exception
                  // was raised.
                  case CATCH:
                    // We should compare the interrupt status as well because we
                    // only want it to apply if there has been an interrupt since
                    // enqueuing the catch.
                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      status = RETURN;
                    } else if (fail) {
                      status = CONTINUE;
                      step = attempt._2(util.fromLeft(fail));
                      fail = null;
                    }

                    break;
                  // We cannot resume from an unmasked interrupt or exception.

                  case RESUME:
                    // As with Catch, we only want to ignore in the case of an
                    // interrupt since enqueing the item.
                    if (interrupt && interrupt !== tmp && bracketCount === 0 || fail) {
                      status = RETURN;
                    } else {
                      bhead = attempt._1;
                      btail = attempt._2;
                      status = STEP_BIND;
                      step = util.fromRight(step);
                    }

                    break;
                  // If we have a bracket, we should enqueue the handlers,
                  // and continue with the success branch only if the fiber has
                  // not been interrupted. If the bracket acquisition failed, we
                  // should not run either.

                  case BRACKET:
                    bracketCount--;

                    if (fail === null) {
                      result = util.fromRight(step); // We need to enqueue the Release with the same interrupt
                      // status as the Bracket that is initiating it.

                      attempts = new Aff(CONS, new Aff(RELEASE, attempt._2, result), attempts, tmp); // We should only coninue as long as the interrupt status has not changed or
                      // we are currently within a non-interruptable finalizer.

                      if (interrupt === tmp || bracketCount > 0) {
                        status = CONTINUE;
                        step = attempt._3(result);
                      }
                    }

                    break;
                  // Enqueue the appropriate handler. We increase the bracket count
                  // because it should not be cancelled.

                  case RELEASE:
                    attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                    status = CONTINUE; // It has only been killed if the interrupt status has changed
                    // since we enqueued the item, and the bracket count is 0. If the
                    // bracket count is non-zero then we are in a masked state so it's
                    // impossible to be killed.

                    if (interrupt && interrupt !== tmp && bracketCount === 0) {
                      step = attempt._1.killed(util.fromLeft(interrupt))(attempt._2);
                    } else if (fail) {
                      step = attempt._1.failed(util.fromLeft(fail))(attempt._2);
                    } else {
                      step = attempt._1.completed(util.fromRight(step))(attempt._2);
                    }

                    fail = null;
                    bracketCount++;
                    break;

                  case FINALIZER:
                    bracketCount++;
                    attempts = new Aff(CONS, new Aff(FINALIZED, step, fail), attempts, interrupt);
                    status = CONTINUE;
                    step = attempt._1;
                    break;

                  case FINALIZED:
                    bracketCount--;
                    status = RETURN;
                    step = attempt._1;
                    fail = attempt._2;
                    break;
                }
              }

              break;

            case COMPLETED:
              for (var k in joins) {
                if (joins.hasOwnProperty(k)) {
                  rethrow = rethrow && joins[k].rethrow;
                  runEff(joins[k].handler(step));
                }
              }

              joins = null; // If we have an interrupt and a fail, then the thread threw while
              // running finalizers. This should always rethrow in a fresh stack.

              if (interrupt && fail) {
                setTimeout(function () {
                  throw util.fromLeft(fail);
                }, 0); // If we have an unhandled exception, and no other fiber has joined
                // then we need to throw the exception in a fresh stack.
              } else if (util.isLeft(step) && rethrow) {
                setTimeout(function () {
                  // Guard on reathrow because a completely synchronous fiber can
                  // still have an observer which was added after-the-fact.
                  if (rethrow) {
                    throw util.fromLeft(step);
                  }
                }, 0);
              }

              return;

            case SUSPENDED:
              status = CONTINUE;
              break;

            case PENDING:
              return;
          }
        }
      }

      function onComplete(join) {
        return function () {
          if (status === COMPLETED) {
            rethrow = rethrow && join.rethrow;
            join.handler(step)();
            return function () {};
          }

          var jid = joinId++;
          joins = joins || {};
          joins[jid] = join;
          return function () {
            if (joins !== null) {
              delete joins[jid];
            }
          };
        };
      }

      function kill(error, cb) {
        return function () {
          if (status === COMPLETED) {
            cb(util.right(void 0))();
            return function () {};
          }

          var canceler = onComplete({
            rethrow: false,
            handler: function handler()
            /* unused */
            {
              return cb(util.right(void 0));
            }
          })();

          switch (status) {
            case SUSPENDED:
              interrupt = util.left(error);
              status = COMPLETED;
              step = interrupt;

              _run(runTick);

              break;

            case PENDING:
              if (interrupt === null) {
                interrupt = util.left(error);
              }

              if (bracketCount === 0) {
                if (status === PENDING) {
                  attempts = new Aff(CONS, new Aff(FINALIZER, step(error)), attempts, interrupt);
                }

                status = RETURN;
                step = null;
                fail = null;

                _run(++runTick);
              }

              break;

            default:
              if (interrupt === null) {
                interrupt = util.left(error);
              }

              if (bracketCount === 0) {
                status = RETURN;
                step = null;
                fail = null;
              }

          }

          return canceler;
        };
      }

      function join(cb) {
        return function () {
          var canceler = onComplete({
            rethrow: false,
            handler: cb
          })();

          if (status === SUSPENDED) {
            _run(runTick);
          }

          return canceler;
        };
      }

      return {
        kill: kill,
        join: join,
        onComplete: onComplete,
        isSuspended: function isSuspended() {
          return status === SUSPENDED;
        },
        run: function run() {
          if (status === SUSPENDED) {
            if (!Scheduler.isDraining()) {
              Scheduler.enqueue(function () {
                _run(runTick);
              });
            } else {
              _run(runTick);
            }
          }
        }
      };
    }

    function runPar(util, supervisor, par, cb) {
      // Table of all forked fibers.
      var fiberId = 0;
      var fibers = {}; // Table of currently running cancelers, as a product of `Alt` behavior.

      var killId = 0;
      var kills = {}; // Error used for early cancelation on Alt branches.

      var early = new Error("[ParAff] Early exit"); // Error used to kill the entire tree.

      var interrupt = null; // The root pointer of the tree.

      var root = EMPTY; // Walks a tree, invoking all the cancelers. Returns the table of pending
      // cancellation fibers.

      function kill(error, par, cb) {
        var step = par;
        var head = null;
        var tail = null;
        var count = 0;
        var kills = {};
        var tmp, kid;

        loop: while (true) {
          tmp = null;

          switch (step.tag) {
            case FORKED:
              if (step._3 === EMPTY) {
                tmp = fibers[step._1];
                kills[count++] = tmp.kill(error, function (result) {
                  return function () {
                    count--;

                    if (count === 0) {
                      cb(result)();
                    }
                  };
                });
              } // Terminal case.


              if (head === null) {
                break loop;
              } // Go down the right side of the tree.


              step = head._2;

              if (tail === null) {
                head = null;
              } else {
                head = tail._1;
                tail = tail._2;
              }

              break;

            case MAP:
              step = step._2;
              break;

            case APPLY:
            case ALT:
              if (head) {
                tail = new Aff(CONS, head, tail);
              }

              head = step;
              step = step._1;
              break;
          }
        }

        if (count === 0) {
          cb(util.right(void 0))();
        } else {
          // Run the cancelation effects. We alias `count` because it's mutable.
          kid = 0;
          tmp = count;

          for (; kid < tmp; kid++) {
            kills[kid] = kills[kid]();
          }
        }

        return kills;
      } // When a fiber resolves, we need to bubble back up the tree with the
      // result, computing the applicative nodes.


      function join(result, head, tail) {
        var fail, step, lhs, rhs, tmp, kid;

        if (util.isLeft(result)) {
          fail = result;
          step = null;
        } else {
          step = result;
          fail = null;
        }

        loop: while (true) {
          lhs = null;
          rhs = null;
          tmp = null;
          kid = null; // We should never continue if the entire tree has been interrupted.

          if (interrupt !== null) {
            return;
          } // We've made it all the way to the root of the tree, which means
          // the tree has fully evaluated.


          if (head === null) {
            cb(fail || step)();
            return;
          } // The tree has already been computed, so we shouldn't try to do it
          // again. This should never happen.
          // TODO: Remove this?


          if (head._3 !== EMPTY) {
            return;
          }

          switch (head.tag) {
            case MAP:
              if (fail === null) {
                head._3 = util.right(head._1(util.fromRight(step)));
                step = head._3;
              } else {
                head._3 = fail;
              }

              break;

            case APPLY:
              lhs = head._1._3;
              rhs = head._2._3; // If we have a failure we should kill the other side because we
              // can't possible yield a result anymore.

              if (fail) {
                head._3 = fail;
                tmp = true;
                kid = killId++;
                kills[kid] = kill(early, fail === lhs ? head._2 : head._1, function ()
                /* unused */
                {
                  return function () {
                    delete kills[kid];

                    if (tmp) {
                      tmp = false;
                    } else if (tail === null) {
                      join(fail, null, null);
                    } else {
                      join(fail, tail._1, tail._2);
                    }
                  };
                });

                if (tmp) {
                  tmp = false;
                  return;
                }
              } else if (lhs === EMPTY || rhs === EMPTY) {
                // We can only proceed if both sides have resolved.
                return;
              } else {
                step = util.right(util.fromRight(lhs)(util.fromRight(rhs)));
                head._3 = step;
              }

              break;

            case ALT:
              lhs = head._1._3;
              rhs = head._2._3; // We can only proceed if both have resolved or we have a success

              if (lhs === EMPTY && util.isLeft(rhs) || rhs === EMPTY && util.isLeft(lhs)) {
                return;
              } // If both sides resolve with an error, we should continue with the
              // first error


              if (lhs !== EMPTY && util.isLeft(lhs) && rhs !== EMPTY && util.isLeft(rhs)) {
                fail = step === lhs ? rhs : lhs;
                step = null;
                head._3 = fail;
              } else {
                head._3 = step;
                tmp = true;
                kid = killId++; // Once a side has resolved, we need to cancel the side that is still
                // pending before we can continue.

                kills[kid] = kill(early, step === lhs ? head._2 : head._1, function ()
                /* unused */
                {
                  return function () {
                    delete kills[kid];

                    if (tmp) {
                      tmp = false;
                    } else if (tail === null) {
                      join(step, null, null);
                    } else {
                      join(step, tail._1, tail._2);
                    }
                  };
                });

                if (tmp) {
                  tmp = false;
                  return;
                }
              }

              break;
          }

          if (tail === null) {
            head = null;
          } else {
            head = tail._1;
            tail = tail._2;
          }
        }
      }

      function resolve(fiber) {
        return function (result) {
          return function () {
            delete fibers[fiber._1];
            fiber._3 = result;
            join(result, fiber._2._1, fiber._2._2);
          };
        };
      } // Walks the applicative tree, substituting non-applicative nodes with
      // `FORKED` nodes. In this tree, all applicative nodes use the `_3` slot
      // as a mutable slot for memoization. In an unresolved state, the `_3`
      // slot is `EMPTY`. In the cases of `ALT` and `APPLY`, we always walk
      // the left side first, because both operations are left-associative. As
      // we `RETURN` from those branches, we then walk the right side.


      function run() {
        var status = CONTINUE;
        var step = par;
        var head = null;
        var tail = null;
        var tmp, fid;

        loop: while (true) {
          tmp = null;
          fid = null;

          switch (status) {
            case CONTINUE:
              switch (step.tag) {
                case MAP:
                  if (head) {
                    tail = new Aff(CONS, head, tail);
                  }

                  head = new Aff(MAP, step._1, EMPTY, EMPTY);
                  step = step._2;
                  break;

                case APPLY:
                  if (head) {
                    tail = new Aff(CONS, head, tail);
                  }

                  head = new Aff(APPLY, EMPTY, step._2, EMPTY);
                  step = step._1;
                  break;

                case ALT:
                  if (head) {
                    tail = new Aff(CONS, head, tail);
                  }

                  head = new Aff(ALT, EMPTY, step._2, EMPTY);
                  step = step._1;
                  break;

                default:
                  // When we hit a leaf value, we suspend the stack in the `FORKED`.
                  // When the fiber resolves, it can bubble back up the tree.
                  fid = fiberId++;
                  status = RETURN;
                  tmp = step;
                  step = new Aff(FORKED, fid, new Aff(CONS, head, tail), EMPTY);
                  tmp = Fiber(util, supervisor, tmp);
                  tmp.onComplete({
                    rethrow: false,
                    handler: resolve(step)
                  })();
                  fibers[fid] = tmp;

                  if (supervisor) {
                    supervisor.register(tmp);
                  }

              }

              break;

            case RETURN:
              // Terminal case, we are back at the root.
              if (head === null) {
                break loop;
              } // If we are done with the right side, we need to continue down the
              // left. Otherwise we should continue up the stack.


              if (head._1 === EMPTY) {
                head._1 = step;
                status = CONTINUE;
                step = head._2;
                head._2 = EMPTY;
              } else {
                head._2 = step;
                step = head;

                if (tail === null) {
                  head = null;
                } else {
                  head = tail._1;
                  tail = tail._2;
                }
              }

          }
        } // Keep a reference to the tree root so it can be cancelled.


        root = step;

        for (fid = 0; fid < fiberId; fid++) {
          fibers[fid].run();
        }
      } // Cancels the entire tree. If there are already subtrees being canceled,
      // we need to first cancel those joins. We will then add fresh joins for
      // all pending branches including those that were in the process of being
      // canceled.


      function cancel(error, cb) {
        interrupt = util.left(error);
        var innerKills;

        for (var kid in kills) {
          if (kills.hasOwnProperty(kid)) {
            innerKills = kills[kid];

            for (kid in innerKills) {
              if (innerKills.hasOwnProperty(kid)) {
                innerKills[kid]();
              }
            }
          }
        }

        kills = null;
        var newKills = kill(error, root, cb);
        return function (killError) {
          return new Aff(ASYNC, function (killCb) {
            return function () {
              for (var kid in newKills) {
                if (newKills.hasOwnProperty(kid)) {
                  newKills[kid]();
                }
              }

              return nonCanceler;
            };
          });
        };
      }

      run();
      return function (killError) {
        return new Aff(ASYNC, function (killCb) {
          return function () {
            return cancel(killError, killCb);
          };
        });
      };
    }

    function sequential(util, supervisor, par) {
      return new Aff(ASYNC, function (cb) {
        return function () {
          return runPar(util, supervisor, par, cb);
        };
      });
    }

    Aff.EMPTY = EMPTY;
    Aff.Pure = AffCtr(PURE);
    Aff.Throw = AffCtr(THROW);
    Aff.Catch = AffCtr(CATCH);
    Aff.Sync = AffCtr(SYNC);
    Aff.Async = AffCtr(ASYNC);
    Aff.Bind = AffCtr(BIND);
    Aff.Bracket = AffCtr(BRACKET);
    Aff.Fork = AffCtr(FORK);
    Aff.Seq = AffCtr(SEQ);
    Aff.ParMap = AffCtr(MAP);
    Aff.ParApply = AffCtr(APPLY);
    Aff.ParAlt = AffCtr(ALT);
    Aff.Fiber = Fiber;
    Aff.Supervisor = Supervisor;
    Aff.Scheduler = Scheduler;
    Aff.nonCanceler = nonCanceler;
    return Aff;
  }();

  exports._pure = Aff.Pure;
  exports._throwError = Aff.Throw;

  exports._catchError = function (aff) {
    return function (k) {
      return Aff.Catch(aff, k);
    };
  };

  exports._map = function (f) {
    return function (aff) {
      if (aff.tag === Aff.Pure.tag) {
        return Aff.Pure(f(aff._1));
      } else {
        return Aff.Bind(aff, function (value) {
          return Aff.Pure(f(value));
        });
      }
    };
  };

  exports._bind = function (aff) {
    return function (k) {
      return Aff.Bind(aff, k);
    };
  };

  exports._fork = function (immediate) {
    return function (aff) {
      return Aff.Fork(immediate, aff);
    };
  };

  exports._liftEffect = Aff.Sync;

  exports._parAffMap = function (f) {
    return function (aff) {
      return Aff.ParMap(f, aff);
    };
  };

  exports._parAffApply = function (aff1) {
    return function (aff2) {
      return Aff.ParApply(aff1, aff2);
    };
  };

  exports.makeAff = Aff.Async;

  exports._makeFiber = function (util, aff) {
    return function () {
      return Aff.Fiber(util, null, aff);
    };
  };

  exports._delay = function () {
    function setDelay(n, k) {
      if (n === 0 && typeof setImmediate !== "undefined") {
        return setImmediate(k);
      } else {
        return setTimeout(k, n);
      }
    }

    function clearDelay(n, t) {
      if (n === 0 && typeof clearImmediate !== "undefined") {
        return clearImmediate(t);
      } else {
        return clearTimeout(t);
      }
    }

    return function (right, ms) {
      return Aff.Async(function (cb) {
        return function () {
          var timer = setDelay(ms, cb(right()));
          return function () {
            return Aff.Sync(function () {
              return right(clearDelay(ms, timer));
            });
          };
        };
      });
    };
  }();

  exports._sequential = Aff.Seq;
})(PS["Effect.Aff"] = PS["Effect.Aff"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect.Class"] = $PS["Effect.Class"] || {};
  var exports = $PS["Effect.Class"];

  var MonadEffect = function MonadEffect(Monad0, liftEffect) {
    this.Monad0 = Monad0;
    this.liftEffect = liftEffect;
  };

  var liftEffect = function liftEffect(dict) {
    return dict.liftEffect;
  };

  exports["liftEffect"] = liftEffect;
  exports["MonadEffect"] = MonadEffect;
})(PS);

(function (exports) {
  "use strict";

  exports.unsafePerformEffect = function (f) {
    return f();
  };
})(PS["Effect.Unsafe"] = PS["Effect.Unsafe"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect.Unsafe"] = $PS["Effect.Unsafe"] || {};
  var exports = $PS["Effect.Unsafe"];
  var $foreign = $PS["Effect.Unsafe"];
  exports["unsafePerformEffect"] = $foreign.unsafePerformEffect;
})(PS);

(function (exports) {
  "use strict"; // module Partial.Unsafe

  exports.unsafePartial = function (f) {
    return f();
  };
})(PS["Partial.Unsafe"] = PS["Partial.Unsafe"] || {});

(function (exports) {
  "use strict"; // module Partial

  exports.crashWith = function () {
    return function (msg) {
      throw new Error(msg);
    };
  };
})(PS["Partial"] = PS["Partial"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Partial"] = $PS["Partial"] || {};
  var exports = $PS["Partial"];
  var $foreign = $PS["Partial"];
  exports["crashWith"] = $foreign.crashWith;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Partial.Unsafe"] = $PS["Partial.Unsafe"] || {};
  var exports = $PS["Partial.Unsafe"];
  var $foreign = $PS["Partial.Unsafe"];
  var Partial = $PS["Partial"];

  var unsafeCrashWith = function unsafeCrashWith(msg) {
    return $foreign.unsafePartial(function (dictPartial) {
      return Partial.crashWith(dictPartial)(msg);
    });
  };

  exports["unsafeCrashWith"] = unsafeCrashWith;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect.Aff"] = $PS["Effect.Aff"] || {};
  var exports = $PS["Effect.Aff"];
  var $foreign = $PS["Effect.Aff"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Unsafe = $PS["Effect.Unsafe"];
  var Partial_Unsafe = $PS["Partial.Unsafe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];

  var Canceler = function Canceler(x) {
    return x;
  };

  var suspendAff = $foreign["_fork"](false);
  var functorParAff = new Data_Functor.Functor($foreign["_parAffMap"]);
  var functorAff = new Data_Functor.Functor($foreign["_map"]);
  var forkAff = $foreign["_fork"](true);

  var ffiUtil = function () {
    var unsafeFromRight = function unsafeFromRight(v) {
      if (v instanceof Data_Either.Right) {
        return v.value0;
      }

      ;

      if (v instanceof Data_Either.Left) {
        return Partial_Unsafe.unsafeCrashWith("unsafeFromRight: Left");
      }

      ;
      throw new Error("Failed pattern match at Effect.Aff (line 400, column 21 - line 402, column 31): " + [v.constructor.name]);
    };

    var unsafeFromLeft = function unsafeFromLeft(v) {
      if (v instanceof Data_Either.Left) {
        return v.value0;
      }

      ;

      if (v instanceof Data_Either.Right) {
        return Partial_Unsafe.unsafeCrashWith("unsafeFromLeft: Right");
      }

      ;
      throw new Error("Failed pattern match at Effect.Aff (line 395, column 20 - line 399, column 3): " + [v.constructor.name]);
    };

    var isLeft = function isLeft(v) {
      if (v instanceof Data_Either.Left) {
        return true;
      }

      ;

      if (v instanceof Data_Either.Right) {
        return false;
      }

      ;
      throw new Error("Failed pattern match at Effect.Aff (line 390, column 12 - line 392, column 20): " + [v.constructor.name]);
    };

    return {
      isLeft: isLeft,
      fromLeft: unsafeFromLeft,
      fromRight: unsafeFromRight,
      left: Data_Either.Left.create,
      right: Data_Either.Right.create
    };
  }();

  var makeFiber = function makeFiber(aff) {
    return $foreign["_makeFiber"](ffiUtil, aff);
  };

  var launchAff = function launchAff(aff) {
    return function __do() {
      var v = makeFiber(aff)();
      v.run();
      return v;
    };
  };

  var launchAff_ = function launchAff_($49) {
    return Data_Functor["void"](Effect.functorEffect)(launchAff($49));
  };

  var delay = function delay(v) {
    return $foreign["_delay"](Data_Either.Right.create, v);
  };

  var applyParAff = new Control_Apply.Apply(function () {
    return functorParAff;
  }, $foreign["_parAffApply"]);
  var monadAff = new Control_Monad.Monad(function () {
    return applicativeAff;
  }, function () {
    return bindAff;
  });
  var bindAff = new Control_Bind.Bind(function () {
    return applyAff;
  }, $foreign["_bind"]);
  var applyAff = new Control_Apply.Apply(function () {
    return functorAff;
  }, Control_Monad.ap(monadAff));
  var applicativeAff = new Control_Applicative.Applicative(function () {
    return applyAff;
  }, $foreign["_pure"]);
  var monadEffectAff = new Effect_Class.MonadEffect(function () {
    return monadAff;
  }, $foreign["_liftEffect"]);

  var effectCanceler = function effectCanceler($50) {
    return Canceler(Data_Function["const"](Effect_Class.liftEffect(monadEffectAff)($50)));
  };

  var joinFiber = function joinFiber(v) {
    return $foreign.makeAff(function (k) {
      return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.join(k));
    });
  };

  var functorFiber = new Data_Functor.Functor(function (f) {
    return function (t) {
      return Effect_Unsafe.unsafePerformEffect(makeFiber(Data_Functor.map(functorAff)(f)(joinFiber(t))));
    };
  });

  var killFiber = function killFiber(e) {
    return function (v) {
      return Control_Bind.bind(bindAff)(Effect_Class.liftEffect(monadEffectAff)(v.isSuspended))(function (v1) {
        if (v1) {
          return Effect_Class.liftEffect(monadEffectAff)(Data_Functor["void"](Effect.functorEffect)(v.kill(e, Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit)))));
        }

        ;
        return $foreign.makeAff(function (k) {
          return Data_Functor.map(Effect.functorEffect)(effectCanceler)(v.kill(e, k));
        });
      });
    };
  };

  var monadThrowAff = new Control_Monad_Error_Class.MonadThrow(function () {
    return monadAff;
  }, $foreign["_throwError"]);
  var monadErrorAff = new Control_Monad_Error_Class.MonadError(function () {
    return monadThrowAff;
  }, $foreign["_catchError"]);

  var runAff = function runAff(k) {
    return function (aff) {
      return launchAff(Control_Bind.bindFlipped(bindAff)(function ($52) {
        return Effect_Class.liftEffect(monadEffectAff)(k($52));
      })(Control_Monad_Error_Class["try"](monadErrorAff)(aff)));
    };
  };

  var runAff_ = function runAff_(k) {
    return function (aff) {
      return Data_Functor["void"](Effect.functorEffect)(runAff(k)(aff));
    };
  };

  var parallelAff = new Control_Parallel_Class.Parallel(function () {
    return applicativeParAff;
  }, function () {
    return monadAff;
  }, Unsafe_Coerce.unsafeCoerce, $foreign["_sequential"]);
  var applicativeParAff = new Control_Applicative.Applicative(function () {
    return applyParAff;
  }, function ($54) {
    return Control_Parallel_Class.parallel(parallelAff)(Control_Applicative.pure(applicativeAff)($54));
  });
  var monadRecAff = new Control_Monad_Rec_Class.MonadRec(function () {
    return monadAff;
  }, function (k) {
    var go = function go(a) {
      return Control_Bind.bind(bindAff)(k(a))(function (v) {
        if (v instanceof Control_Monad_Rec_Class.Done) {
          return Control_Applicative.pure(applicativeAff)(v.value0);
        }

        ;

        if (v instanceof Control_Monad_Rec_Class.Loop) {
          return go(v.value0);
        }

        ;
        throw new Error("Failed pattern match at Effect.Aff (line 100, column 7 - line 102, column 22): " + [v.constructor.name]);
      });
    };

    return go;
  });
  var nonCanceler = Data_Function["const"](Control_Applicative.pure(applicativeAff)(Data_Unit.unit));
  exports["Canceler"] = Canceler;
  exports["launchAff"] = launchAff;
  exports["launchAff_"] = launchAff_;
  exports["runAff"] = runAff;
  exports["runAff_"] = runAff_;
  exports["forkAff"] = forkAff;
  exports["suspendAff"] = suspendAff;
  exports["delay"] = delay;
  exports["killFiber"] = killFiber;
  exports["joinFiber"] = joinFiber;
  exports["nonCanceler"] = nonCanceler;
  exports["effectCanceler"] = effectCanceler;
  exports["functorAff"] = functorAff;
  exports["applyAff"] = applyAff;
  exports["applicativeAff"] = applicativeAff;
  exports["bindAff"] = bindAff;
  exports["monadAff"] = monadAff;
  exports["monadRecAff"] = monadRecAff;
  exports["monadThrowAff"] = monadThrowAff;
  exports["monadErrorAff"] = monadErrorAff;
  exports["monadEffectAff"] = monadEffectAff;
  exports["functorParAff"] = functorParAff;
  exports["applyParAff"] = applyParAff;
  exports["applicativeParAff"] = applicativeParAff;
  exports["parallelAff"] = parallelAff;
  exports["functorFiber"] = functorFiber;
  exports["makeAff"] = $foreign.makeAff;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Fork.Class"] = $PS["Control.Monad.Fork.Class"] || {};
  var exports = $PS["Control.Monad.Fork.Class"];
  var Effect_Aff = $PS["Effect.Aff"];

  var MonadFork = function MonadFork(Functor1, Monad0, fork, join, suspend) {
    this.Functor1 = Functor1;
    this.Monad0 = Monad0;
    this.fork = fork;
    this.join = join;
    this.suspend = suspend;
  };

  var suspend = function suspend(dict) {
    return dict.suspend;
  };

  var monadForkAff = new MonadFork(function () {
    return Effect_Aff.functorFiber;
  }, function () {
    return Effect_Aff.monadAff;
  }, Effect_Aff.forkAff, Effect_Aff.joinFiber, Effect_Aff.suspendAff);

  var join = function join(dict) {
    return dict.join;
  };

  var fork = function fork(dict) {
    return dict.fork;
  };

  exports["fork"] = fork;
  exports["join"] = join;
  exports["suspend"] = suspend;
  exports["MonadFork"] = MonadFork;
  exports["monadForkAff"] = monadForkAff;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.List"] = $PS["Data.List"] || {};
  var exports = $PS["Data.List"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];

  var singleton = function singleton(a) {
    return new Data_List_Types.Cons(a, Data_List_Types.Nil.value);
  };

  var reverse = function () {
    var go = function go($copy_acc) {
      return function ($copy_v) {
        var $tco_var_acc = $copy_acc;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(acc, v) {
          if (v instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return acc;
          }

          ;

          if (v instanceof Data_List_Types.Cons) {
            $tco_var_acc = new Data_List_Types.Cons(v.value0, acc);
            $copy_v = v.value1;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 368, column 3 - line 368, column 19): " + [acc.constructor.name, v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_acc, $copy_v);
        }

        ;
        return $tco_result;
      };
    };

    return go(Data_List_Types.Nil.value);
  }();

  var unsnoc = function unsnoc(lst) {
    var go = function go($copy_v) {
      return function ($copy_acc) {
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(v, acc) {
          if (v instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return Data_Maybe.Nothing.value;
          }

          ;

          if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return new Data_Maybe.Just({
              revInit: acc,
              last: v.value0
            });
          }

          ;

          if (v instanceof Data_List_Types.Cons) {
            $tco_var_v = v.value1;
            $copy_acc = new Data_List_Types.Cons(v.value0, acc);
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.List (line 270, column 3 - line 270, column 23): " + [v.constructor.name, acc.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_v, $copy_acc);
        }

        ;
        return $tco_result;
      };
    };

    return Data_Functor.map(Data_Maybe.functorMaybe)(function (h) {
      return {
        init: reverse(h.revInit),
        last: h.last
      };
    })(go(lst)(Data_List_Types.Nil.value));
  };

  var $$null = function $$null(v) {
    if (v instanceof Data_List_Types.Nil) {
      return true;
    }

    ;
    return false;
  };

  var last = function last($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v instanceof Data_List_Types.Cons && v.value1 instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return new Data_Maybe.Just(v.value0);
      }

      ;

      if (v instanceof Data_List_Types.Cons) {
        $copy_v = v.value1;
        return;
      }

      ;
      $tco_done = true;
      return Data_Maybe.Nothing.value;
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  var fromFoldable = function fromFoldable(dictFoldable) {
    return Data_Foldable.foldr(dictFoldable)(Data_List_Types.Cons.create)(Data_List_Types.Nil.value);
  };

  exports["fromFoldable"] = fromFoldable;
  exports["singleton"] = singleton;
  exports["null"] = $$null;
  exports["last"] = last;
  exports["unsnoc"] = unsnoc;
  exports["reverse"] = reverse;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.CatQueue"] = $PS["Data.CatQueue"] || {};
  var exports = $PS["Data.CatQueue"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Tuple = $PS["Data.Tuple"];

  var CatQueue = function () {
    function CatQueue(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    CatQueue.create = function (value0) {
      return function (value1) {
        return new CatQueue(value0, value1);
      };
    };

    return CatQueue;
  }();

  var uncons = function uncons($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
        $tco_done = true;
        return Data_Maybe.Nothing.value;
      }

      ;

      if (v.value0 instanceof Data_List_Types.Nil) {
        $copy_v = new CatQueue(Data_List.reverse(v.value1), Data_List_Types.Nil.value);
        return;
      }

      ;

      if (v.value0 instanceof Data_List_Types.Cons) {
        $tco_done = true;
        return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0.value0, new CatQueue(v.value0.value1, v.value1)));
      }

      ;
      throw new Error("Failed pattern match at Data.CatQueue (line 83, column 1 - line 83, column 63): " + [v.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  var snoc = function snoc(v) {
    return function (a) {
      return new CatQueue(v.value0, new Data_List_Types.Cons(a, v.value1));
    };
  };

  var $$null = function $$null(v) {
    if (v.value0 instanceof Data_List_Types.Nil && v.value1 instanceof Data_List_Types.Nil) {
      return true;
    }

    ;
    return false;
  };

  var empty = new CatQueue(Data_List_Types.Nil.value, Data_List_Types.Nil.value);
  exports["CatQueue"] = CatQueue;
  exports["empty"] = empty;
  exports["null"] = $$null;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.CatList"] = $PS["Data.CatList"] || {};
  var exports = $PS["Data.CatList"];
  var Data_CatQueue = $PS["Data.CatQueue"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];

  var CatNil = function () {
    function CatNil() {}

    ;
    CatNil.value = new CatNil();
    return CatNil;
  }();

  var CatCons = function () {
    function CatCons(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    CatCons.create = function (value0) {
      return function (value1) {
        return new CatCons(value0, value1);
      };
    };

    return CatCons;
  }();

  var link = function link(v) {
    return function (v1) {
      if (v instanceof CatNil) {
        return v1;
      }

      ;

      if (v1 instanceof CatNil) {
        return v;
      }

      ;

      if (v instanceof CatCons) {
        return new CatCons(v.value0, Data_CatQueue.snoc(v.value1)(v1));
      }

      ;
      throw new Error("Failed pattern match at Data.CatList (line 109, column 1 - line 109, column 54): " + [v.constructor.name, v1.constructor.name]);
    };
  };

  var foldr = function foldr(k) {
    return function (b) {
      return function (q) {
        var foldl = function foldl($copy_v) {
          return function ($copy_c) {
            return function ($copy_v1) {
              var $tco_var_v = $copy_v;
              var $tco_var_c = $copy_c;
              var $tco_done = false;
              var $tco_result;

              function $tco_loop(v, c, v1) {
                if (v1 instanceof Data_List_Types.Nil) {
                  $tco_done = true;
                  return c;
                }

                ;

                if (v1 instanceof Data_List_Types.Cons) {
                  $tco_var_v = v;
                  $tco_var_c = v(c)(v1.value0);
                  $copy_v1 = v1.value1;
                  return;
                }

                ;
                throw new Error("Failed pattern match at Data.CatList (line 125, column 3 - line 125, column 59): " + [v.constructor.name, c.constructor.name, v1.constructor.name]);
              }

              ;

              while (!$tco_done) {
                $tco_result = $tco_loop($tco_var_v, $tco_var_c, $copy_v1);
              }

              ;
              return $tco_result;
            };
          };
        };

        var go = function go($copy_xs) {
          return function ($copy_ys) {
            var $tco_var_xs = $copy_xs;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(xs, ys) {
              var v = Data_CatQueue.uncons(xs);

              if (v instanceof Data_Maybe.Nothing) {
                $tco_done = true;
                return foldl(function (x) {
                  return function (i) {
                    return i(x);
                  };
                })(b)(ys);
              }

              ;

              if (v instanceof Data_Maybe.Just) {
                $tco_var_xs = v.value0.value1;
                $copy_ys = new Data_List_Types.Cons(k(v.value0.value0), ys);
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.CatList (line 121, column 14 - line 123, column 67): " + [v.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_xs, $copy_ys);
            }

            ;
            return $tco_result;
          };
        };

        return go(q)(Data_List_Types.Nil.value);
      };
    };
  };

  var uncons = function uncons(v) {
    if (v instanceof CatNil) {
      return Data_Maybe.Nothing.value;
    }

    ;

    if (v instanceof CatCons) {
      return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, function () {
        var $44 = Data_CatQueue["null"](v.value1);

        if ($44) {
          return CatNil.value;
        }

        ;
        return foldr(link)(CatNil.value)(v.value1);
      }()));
    }

    ;
    throw new Error("Failed pattern match at Data.CatList (line 100, column 1 - line 100, column 61): " + [v.constructor.name]);
  };

  var empty = CatNil.value;
  var append = link;
  var semigroupCatList = new Data_Semigroup.Semigroup(append);

  var snoc = function snoc(cat) {
    return function (a) {
      return append(cat)(new CatCons(a, Data_CatQueue.empty));
    };
  };

  exports["CatNil"] = CatNil;
  exports["CatCons"] = CatCons;
  exports["empty"] = empty;
  exports["append"] = append;
  exports["snoc"] = snoc;
  exports["uncons"] = uncons;
  exports["semigroupCatList"] = semigroupCatList;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.Free"] = $PS["Control.Monad.Free"] || {};
  var exports = $PS["Control.Monad.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Data_CatList = $PS["Data.CatList"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];

  var Free = function () {
    function Free(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Free.create = function (value0) {
      return function (value1) {
        return new Free(value0, value1);
      };
    };

    return Free;
  }();

  var Return = function () {
    function Return(value0) {
      this.value0 = value0;
    }

    ;

    Return.create = function (value0) {
      return new Return(value0);
    };

    return Return;
  }();

  var Bind = function () {
    function Bind(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Bind.create = function (value0) {
      return function (value1) {
        return new Bind(value0, value1);
      };
    };

    return Bind;
  }();

  var toView = function toView($copy_v) {
    var $tco_done = false;
    var $tco_result;

    function $tco_loop(v) {
      var runExpF = function runExpF(v2) {
        return v2;
      };

      var concatF = function concatF(v2) {
        return function (r) {
          return new Free(v2.value0, Data_Semigroup.append(Data_CatList.semigroupCatList)(v2.value1)(r));
        };
      };

      if (v.value0 instanceof Return) {
        var v2 = Data_CatList.uncons(v.value1);

        if (v2 instanceof Data_Maybe.Nothing) {
          $tco_done = true;
          return new Return(v.value0.value0);
        }

        ;

        if (v2 instanceof Data_Maybe.Just) {
          $copy_v = concatF(runExpF(v2.value0.value0)(v.value0.value0))(v2.value0.value1);
          return;
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 227, column 7 - line 231, column 64): " + [v2.constructor.name]);
      }

      ;

      if (v.value0 instanceof Bind) {
        $tco_done = true;
        return new Bind(v.value0.value0, function (a) {
          return concatF(v.value0.value1(a))(v.value1);
        });
      }

      ;
      throw new Error("Failed pattern match at Control.Monad.Free (line 225, column 3 - line 233, column 56): " + [v.value0.constructor.name]);
    }

    ;

    while (!$tco_done) {
      $tco_result = $tco_loop($copy_v);
    }

    ;
    return $tco_result;
  };

  var fromView = function fromView(f) {
    return new Free(f, Data_CatList.empty);
  };

  var freeMonad = new Control_Monad.Monad(function () {
    return freeApplicative;
  }, function () {
    return freeBind;
  });
  var freeFunctor = new Data_Functor.Functor(function (k) {
    return function (f) {
      return Control_Bind.bindFlipped(freeBind)(function ($120) {
        return Control_Applicative.pure(freeApplicative)(k($120));
      })(f);
    };
  });
  var freeBind = new Control_Bind.Bind(function () {
    return freeApply;
  }, function (v) {
    return function (k) {
      return new Free(v.value0, Data_CatList.snoc(v.value1)(k));
    };
  });
  var freeApply = new Control_Apply.Apply(function () {
    return freeFunctor;
  }, Control_Monad.ap(freeMonad));
  var freeApplicative = new Control_Applicative.Applicative(function () {
    return freeApply;
  }, function ($121) {
    return fromView(Return.create($121));
  });

  var liftF = function liftF(f) {
    return fromView(new Bind(f, function ($122) {
      return Control_Applicative.pure(freeApplicative)($122);
    }));
  };

  var foldFree = function foldFree(dictMonadRec) {
    return function (k) {
      var go = function go(f) {
        var v = toView(f);

        if (v instanceof Return) {
          return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(Control_Monad_Rec_Class.Done.create)(Control_Applicative.pure(dictMonadRec.Monad0().Applicative0())(v.value0));
        }

        ;

        if (v instanceof Bind) {
          return Data_Functor.map(dictMonadRec.Monad0().Bind1().Apply0().Functor0())(function ($129) {
            return Control_Monad_Rec_Class.Loop.create(v.value1($129));
          })(k(v.value0));
        }

        ;
        throw new Error("Failed pattern match at Control.Monad.Free (line 158, column 10 - line 160, column 37): " + [v.constructor.name]);
      };

      return Control_Monad_Rec_Class.tailRecM(dictMonadRec)(go);
    };
  };

  exports["liftF"] = liftF;
  exports["foldFree"] = foldFree;
  exports["freeFunctor"] = freeFunctor;
  exports["freeBind"] = freeBind;
  exports["freeApplicative"] = freeApplicative;
  exports["freeApply"] = freeApply;
  exports["freeMonad"] = freeMonad;
})(PS);

(function (exports) {
  "use strict";

  exports.map_ = function (f) {
    return function (a) {
      return function () {
        return f(a());
      };
    };
  };

  exports.foreach = function (as) {
    return function (f) {
      return function () {
        for (var i = 0, l = as.length; i < l; i++) {
          f(as[i])();
        }
      };
    };
  };
})(PS["Control.Monad.ST.Internal"] = PS["Control.Monad.ST.Internal"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.ST.Internal"] = $PS["Control.Monad.ST.Internal"] || {};
  var exports = $PS["Control.Monad.ST.Internal"];
  var $foreign = $PS["Control.Monad.ST.Internal"];
  var Data_Functor = $PS["Data.Functor"];
  var functorST = new Data_Functor.Functor($foreign.map_);
  exports["functorST"] = functorST;
  exports["foreach"] = $foreign.foreach;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Monad.State.Class"] = $PS["Control.Monad.State.Class"] || {};
  var exports = $PS["Control.Monad.State.Class"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];

  var MonadState = function MonadState(Monad0, state) {
    this.Monad0 = Monad0;
    this.state = state;
  };

  var state = function state(dict) {
    return dict.state;
  };

  var put = function put(dictMonadState) {
    return function (s) {
      return state(dictMonadState)(function (v) {
        return new Data_Tuple.Tuple(Data_Unit.unit, s);
      });
    };
  };

  var modify_ = function modify_(dictMonadState) {
    return function (f) {
      return state(dictMonadState)(function (s) {
        return new Data_Tuple.Tuple(Data_Unit.unit, f(s));
      });
    };
  };

  var get = function get(dictMonadState) {
    return state(dictMonadState)(function (s) {
      return new Data_Tuple.Tuple(s, s);
    });
  };

  exports["state"] = state;
  exports["MonadState"] = MonadState;
  exports["get"] = get;
  exports["put"] = put;
  exports["modify_"] = modify_;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Control.Parallel"] = $PS["Control.Parallel"] || {};
  var exports = $PS["Control.Parallel"];
  var Control_Category = $PS["Control.Category"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Foldable = $PS["Data.Foldable"];

  var parTraverse_ = function parTraverse_(dictParallel) {
    return function (dictFoldable) {
      return function (f) {
        return function ($17) {
          return Control_Parallel_Class.sequential(dictParallel)(Data_Foldable.traverse_(dictParallel.Applicative1())(dictFoldable)(function ($18) {
            return Control_Parallel_Class.parallel(dictParallel)(f($18));
          })($17));
        };
      };
    };
  };

  var parSequence_ = function parSequence_(dictParallel) {
    return function (dictFoldable) {
      return parTraverse_(dictParallel)(dictFoldable)(Control_Category.identity(Control_Category.categoryFn));
    };
  };

  exports["parTraverse_"] = parTraverse_;
  exports["parSequence_"] = parSequence_;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["DOM.HTML.Indexed.ButtonType"] = $PS["DOM.HTML.Indexed.ButtonType"] || {};
  var exports = $PS["DOM.HTML.Indexed.ButtonType"];

  var ButtonButton = function () {
    function ButtonButton() {}

    ;
    ButtonButton.value = new ButtonButton();
    return ButtonButton;
  }();

  var ButtonSubmit = function () {
    function ButtonSubmit() {}

    ;
    ButtonSubmit.value = new ButtonSubmit();
    return ButtonSubmit;
  }();

  var ButtonReset = function () {
    function ButtonReset() {}

    ;
    ButtonReset.value = new ButtonReset();
    return ButtonReset;
  }();

  var renderButtonType = function renderButtonType(v) {
    if (v instanceof ButtonButton) {
      return "button";
    }

    ;

    if (v instanceof ButtonSubmit) {
      return "submit";
    }

    ;

    if (v instanceof ButtonReset) {
      return "reset";
    }

    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.ButtonType (line 9, column 20 - line 12, column 18): " + [v.constructor.name]);
  };

  exports["ButtonButton"] = ButtonButton;
  exports["ButtonSubmit"] = ButtonSubmit;
  exports["ButtonReset"] = ButtonReset;
  exports["renderButtonType"] = renderButtonType;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["DOM.HTML.Indexed.InputType"] = $PS["DOM.HTML.Indexed.InputType"] || {};
  var exports = $PS["DOM.HTML.Indexed.InputType"];

  var InputButton = function () {
    function InputButton() {}

    ;
    InputButton.value = new InputButton();
    return InputButton;
  }();

  var InputCheckbox = function () {
    function InputCheckbox() {}

    ;
    InputCheckbox.value = new InputCheckbox();
    return InputCheckbox;
  }();

  var InputColor = function () {
    function InputColor() {}

    ;
    InputColor.value = new InputColor();
    return InputColor;
  }();

  var InputDate = function () {
    function InputDate() {}

    ;
    InputDate.value = new InputDate();
    return InputDate;
  }();

  var InputDatetimeLocal = function () {
    function InputDatetimeLocal() {}

    ;
    InputDatetimeLocal.value = new InputDatetimeLocal();
    return InputDatetimeLocal;
  }();

  var InputEmail = function () {
    function InputEmail() {}

    ;
    InputEmail.value = new InputEmail();
    return InputEmail;
  }();

  var InputFile = function () {
    function InputFile() {}

    ;
    InputFile.value = new InputFile();
    return InputFile;
  }();

  var InputHidden = function () {
    function InputHidden() {}

    ;
    InputHidden.value = new InputHidden();
    return InputHidden;
  }();

  var InputImage = function () {
    function InputImage() {}

    ;
    InputImage.value = new InputImage();
    return InputImage;
  }();

  var InputMonth = function () {
    function InputMonth() {}

    ;
    InputMonth.value = new InputMonth();
    return InputMonth;
  }();

  var InputNumber = function () {
    function InputNumber() {}

    ;
    InputNumber.value = new InputNumber();
    return InputNumber;
  }();

  var InputPassword = function () {
    function InputPassword() {}

    ;
    InputPassword.value = new InputPassword();
    return InputPassword;
  }();

  var InputRadio = function () {
    function InputRadio() {}

    ;
    InputRadio.value = new InputRadio();
    return InputRadio;
  }();

  var InputRange = function () {
    function InputRange() {}

    ;
    InputRange.value = new InputRange();
    return InputRange;
  }();

  var InputReset = function () {
    function InputReset() {}

    ;
    InputReset.value = new InputReset();
    return InputReset;
  }();

  var InputSearch = function () {
    function InputSearch() {}

    ;
    InputSearch.value = new InputSearch();
    return InputSearch;
  }();

  var InputSubmit = function () {
    function InputSubmit() {}

    ;
    InputSubmit.value = new InputSubmit();
    return InputSubmit;
  }();

  var InputTel = function () {
    function InputTel() {}

    ;
    InputTel.value = new InputTel();
    return InputTel;
  }();

  var InputText = function () {
    function InputText() {}

    ;
    InputText.value = new InputText();
    return InputText;
  }();

  var InputTime = function () {
    function InputTime() {}

    ;
    InputTime.value = new InputTime();
    return InputTime;
  }();

  var InputUrl = function () {
    function InputUrl() {}

    ;
    InputUrl.value = new InputUrl();
    return InputUrl;
  }();

  var InputWeek = function () {
    function InputWeek() {}

    ;
    InputWeek.value = new InputWeek();
    return InputWeek;
  }();

  var renderInputType = function renderInputType(v) {
    if (v instanceof InputButton) {
      return "button";
    }

    ;

    if (v instanceof InputCheckbox) {
      return "checkbox";
    }

    ;

    if (v instanceof InputColor) {
      return "color";
    }

    ;

    if (v instanceof InputDate) {
      return "date";
    }

    ;

    if (v instanceof InputDatetimeLocal) {
      return "datetime-local";
    }

    ;

    if (v instanceof InputEmail) {
      return "email";
    }

    ;

    if (v instanceof InputFile) {
      return "file";
    }

    ;

    if (v instanceof InputHidden) {
      return "hidden";
    }

    ;

    if (v instanceof InputImage) {
      return "image";
    }

    ;

    if (v instanceof InputMonth) {
      return "month";
    }

    ;

    if (v instanceof InputNumber) {
      return "number";
    }

    ;

    if (v instanceof InputPassword) {
      return "password";
    }

    ;

    if (v instanceof InputRadio) {
      return "radio";
    }

    ;

    if (v instanceof InputRange) {
      return "range";
    }

    ;

    if (v instanceof InputReset) {
      return "reset";
    }

    ;

    if (v instanceof InputSearch) {
      return "search";
    }

    ;

    if (v instanceof InputSubmit) {
      return "submit";
    }

    ;

    if (v instanceof InputTel) {
      return "tel";
    }

    ;

    if (v instanceof InputText) {
      return "text";
    }

    ;

    if (v instanceof InputTime) {
      return "time";
    }

    ;

    if (v instanceof InputUrl) {
      return "url";
    }

    ;

    if (v instanceof InputWeek) {
      return "week";
    }

    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.InputType (line 28, column 19 - line 50, column 16): " + [v.constructor.name]);
  };

  exports["InputButton"] = InputButton;
  exports["InputCheckbox"] = InputCheckbox;
  exports["InputColor"] = InputColor;
  exports["InputDate"] = InputDate;
  exports["InputDatetimeLocal"] = InputDatetimeLocal;
  exports["InputEmail"] = InputEmail;
  exports["InputFile"] = InputFile;
  exports["InputHidden"] = InputHidden;
  exports["InputImage"] = InputImage;
  exports["InputMonth"] = InputMonth;
  exports["InputNumber"] = InputNumber;
  exports["InputPassword"] = InputPassword;
  exports["InputRadio"] = InputRadio;
  exports["InputRange"] = InputRange;
  exports["InputReset"] = InputReset;
  exports["InputSearch"] = InputSearch;
  exports["InputSubmit"] = InputSubmit;
  exports["InputTel"] = InputTel;
  exports["InputText"] = InputText;
  exports["InputTime"] = InputTime;
  exports["InputUrl"] = InputUrl;
  exports["InputWeek"] = InputWeek;
  exports["renderInputType"] = renderInputType;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["DOM.HTML.Indexed.StepValue"] = $PS["DOM.HTML.Indexed.StepValue"] || {};
  var exports = $PS["DOM.HTML.Indexed.StepValue"];
  var Data_Show = $PS["Data.Show"];

  var Any = function () {
    function Any() {}

    ;
    Any.value = new Any();
    return Any;
  }();

  var Step = function () {
    function Step(value0) {
      this.value0 = value0;
    }

    ;

    Step.create = function (value0) {
      return new Step(value0);
    };

    return Step;
  }();

  var renderStepValue = function renderStepValue(v) {
    if (v instanceof Any) {
      return "any";
    }

    ;

    if (v instanceof Step) {
      return Data_Show.show(Data_Show.showNumber)(v.value0);
    }

    ;
    throw new Error("Failed pattern match at DOM.HTML.Indexed.StepValue (line 10, column 19 - line 12, column 18): " + [v.constructor.name]);
  };

  exports["Any"] = Any;
  exports["Step"] = Step;
  exports["renderStepValue"] = renderStepValue;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Coyoneda"] = $PS["Data.Coyoneda"] || {};
  var exports = $PS["Data.Coyoneda"];
  var Data_Exists = $PS["Data.Exists"];

  var CoyonedaF = function () {
    function CoyonedaF(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    CoyonedaF.create = function (value0) {
      return function (value1) {
        return new CoyonedaF(value0, value1);
      };
    };

    return CoyonedaF;
  }();

  var Coyoneda = function Coyoneda(x) {
    return x;
  };

  var unCoyoneda = function unCoyoneda(f) {
    return function (v) {
      return Data_Exists.runExists(function (v1) {
        return f(v1.value0)(v1.value1);
      })(v);
    };
  };

  var coyoneda = function coyoneda(k) {
    return function (fi) {
      return Coyoneda(Data_Exists.mkExists(new CoyonedaF(k, fi)));
    };
  };

  exports["Coyoneda"] = Coyoneda;
  exports["coyoneda"] = coyoneda;
  exports["unCoyoneda"] = unCoyoneda;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Either.Nested"] = $PS["Data.Either.Nested"] || {};
  var exports = $PS["Data.Either.Nested"];
  var Data_Either = $PS["Data.Either"];

  var in9 = function in9(v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))))))));
  };

  var in8 = function in8(v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))))));
  };

  var in7 = function in7(v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))))));
  };

  var in6 = function in6(v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))));
  };

  var in5 = function in5(v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)))));
  };

  var in4 = function in4(v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))));
  };

  var in3 = function in3(v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v)));
  };

  var in2 = function in2(v) {
    return new Data_Either.Right(new Data_Either.Left(v));
  };

  var in10 = function in10(v) {
    return new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Right(new Data_Either.Left(v))))))))));
  };

  var in1 = Data_Either.Left.create;

  var at9 = function at9(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at8 = function at8(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0.value0.value0.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at7 = function at7(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0.value0.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at6 = function at6(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at5 = function at5(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at4 = function at4(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at3 = function at3(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at2 = function at2(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at10 = function at10(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at1 = function at1(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Left) {
          return f(y.value0);
        }

        ;
        return b;
      };
    };
  };

  exports["in1"] = in1;
  exports["in2"] = in2;
  exports["in3"] = in3;
  exports["in4"] = in4;
  exports["in5"] = in5;
  exports["in6"] = in6;
  exports["in7"] = in7;
  exports["in8"] = in8;
  exports["in9"] = in9;
  exports["in10"] = in10;
  exports["at1"] = at1;
  exports["at2"] = at2;
  exports["at3"] = at3;
  exports["at4"] = at4;
  exports["at5"] = at5;
  exports["at6"] = at6;
  exports["at7"] = at7;
  exports["at8"] = at8;
  exports["at9"] = at9;
  exports["at10"] = at10;
})(PS);

(function (exports) {
  "use strict";

  exports.runFn4 = function (fn) {
    return function (a) {
      return function (b) {
        return function (c) {
          return function (d) {
            return fn(a, b, c, d);
          };
        };
      };
    };
  };
})(PS["Data.Function.Uncurried"] = PS["Data.Function.Uncurried"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Function.Uncurried"] = $PS["Data.Function.Uncurried"] || {};
  var exports = $PS["Data.Function.Uncurried"];
  var $foreign = $PS["Data.Function.Uncurried"];
  exports["runFn4"] = $foreign.runFn4;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Functor.Coproduct"] = $PS["Data.Functor.Coproduct"] || {};
  var exports = $PS["Data.Functor.Coproduct"];
  var Data_Either = $PS["Data.Either"];
  var Data_Newtype = $PS["Data.Newtype"];

  var Coproduct = function Coproduct(x) {
    return x;
  };

  var right = function right(ga) {
    return new Data_Either.Right(ga);
  };

  var newtypeCoproduct = new Data_Newtype.Newtype(function (n) {
    return n;
  }, Coproduct);

  var left = function left(fa) {
    return new Data_Either.Left(fa);
  };

  exports["Coproduct"] = Coproduct;
  exports["left"] = left;
  exports["right"] = right;
  exports["newtypeCoproduct"] = newtypeCoproduct;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Functor.Coproduct.Nested"] = $PS["Data.Functor.Coproduct.Nested"] || {};
  var exports = $PS["Data.Functor.Coproduct.Nested"];
  var Data_Either = $PS["Data.Either"];
  var Data_Functor_Coproduct = $PS["Data.Functor.Coproduct"];

  var in9 = function in9(v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))))))));
  };

  var in8 = function in8(v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))))));
  };

  var in7 = function in7(v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))))));
  };

  var in6 = function in6(v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))));
  };

  var in5 = function in5(v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)))));
  };

  var in4 = function in4(v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))));
  };

  var in3 = function in3(v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v)));
  };

  var in2 = function in2(v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v));
  };

  var in10 = function in10(v) {
    return Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.right(Data_Functor_Coproduct.left(v))))))))));
  };

  var in1 = Data_Functor_Coproduct.left;

  var at9 = function at9(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at8 = function at8(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0.value0.value0.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at7 = function at7(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0.value0.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at6 = function at6(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at5 = function at5(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at4 = function at4(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at3 = function at3(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at2 = function at2(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at10 = function at10(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Right && y.value0 instanceof Data_Either.Right && y.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Right && y.value0.value0.value0.value0.value0.value0.value0.value0.value0 instanceof Data_Either.Left) {
          return f(y.value0.value0.value0.value0.value0.value0.value0.value0.value0.value0);
        }

        ;
        return b;
      };
    };
  };

  var at1 = function at1(b) {
    return function (f) {
      return function (y) {
        if (y instanceof Data_Either.Left) {
          return f(y.value0);
        }

        ;
        return b;
      };
    };
  };

  exports["in1"] = in1;
  exports["in2"] = in2;
  exports["in3"] = in3;
  exports["in4"] = in4;
  exports["in5"] = in5;
  exports["in6"] = in6;
  exports["in7"] = in7;
  exports["in8"] = in8;
  exports["in9"] = in9;
  exports["in10"] = in10;
  exports["at1"] = at1;
  exports["at2"] = at2;
  exports["at3"] = at3;
  exports["at4"] = at4;
  exports["at5"] = at5;
  exports["at6"] = at6;
  exports["at7"] = at7;
  exports["at8"] = at8;
  exports["at9"] = at9;
  exports["at10"] = at10;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Profunctor.Choice"] = $PS["Data.Profunctor.Choice"] || {};
  var exports = $PS["Data.Profunctor.Choice"];

  var Choice = function Choice(Profunctor0, left, right) {
    this.Profunctor0 = Profunctor0;
    this.left = left;
    this.right = right;
  };

  var right = function right(dict) {
    return dict.right;
  };

  var left = function left(dict) {
    return dict.left;
  };

  exports["left"] = left;
  exports["right"] = right;
  exports["Choice"] = Choice;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Lens.Internal.Forget"] = $PS["Data.Lens.Internal.Forget"] || {};
  var exports = $PS["Data.Lens.Internal.Forget"];
  var Data_Either = $PS["Data.Either"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];

  var Forget = function Forget(x) {
    return x;
  };

  var profunctorForget = new Data_Profunctor.Profunctor(function (f) {
    return function (v) {
      return function (v1) {
        return function ($27) {
          return v1(f($27));
        };
      };
    };
  });
  var newtypeForget = new Data_Newtype.Newtype(function (n) {
    return n;
  }, Forget);

  var choiceForget = function choiceForget(dictMonoid) {
    return new Data_Profunctor_Choice.Choice(function () {
      return profunctorForget;
    }, function (v) {
      return Data_Either.either(v)(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)));
    }, function (v) {
      return Data_Either.either(Data_Monoid.mempty(Data_Monoid.monoidFn(dictMonoid)))(v);
    });
  };

  exports["Forget"] = Forget;
  exports["newtypeForget"] = newtypeForget;
  exports["profunctorForget"] = profunctorForget;
  exports["choiceForget"] = choiceForget;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Lens.Fold"] = $PS["Data.Lens.Fold"] || {};
  var exports = $PS["Data.Lens.Fold"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Maybe_First = $PS["Data.Maybe.First"];
  var Data_Newtype = $PS["Data.Newtype"];
  var foldMapOf = Data_Newtype.under(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.newtypeForget)(Data_Lens_Internal_Forget.Forget);

  var preview = function preview(p) {
    return function ($64) {
      return Data_Newtype.unwrap(Data_Maybe_First.newtypeFirst)(foldMapOf(p)(function ($65) {
        return Data_Maybe_First.First(Data_Maybe.Just.create($65));
      })($64));
    };
  };

  exports["preview"] = preview;
  exports["foldMapOf"] = foldMapOf;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Lens.Internal.Tagged"] = $PS["Data.Lens.Internal.Tagged"] || {};
  var exports = $PS["Data.Lens.Internal.Tagged"];
  var Data_Either = $PS["Data.Either"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];

  var Tagged = function Tagged(x) {
    return x;
  };

  var taggedProfunctor = new Data_Profunctor.Profunctor(function (v) {
    return function (g) {
      return function (v1) {
        return g(v1);
      };
    };
  });
  var taggedChoice = new Data_Profunctor_Choice.Choice(function () {
    return taggedProfunctor;
  }, function (v) {
    return new Data_Either.Left(v);
  }, function (v) {
    return new Data_Either.Right(v);
  });
  var newtypeTagged = new Data_Newtype.Newtype(function (n) {
    return n;
  }, Tagged);
  exports["Tagged"] = Tagged;
  exports["newtypeTagged"] = newtypeTagged;
  exports["taggedProfunctor"] = taggedProfunctor;
  exports["taggedChoice"] = taggedChoice;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Lens.Iso"] = $PS["Data.Lens.Iso"] || {};
  var exports = $PS["Data.Lens.Iso"];
  var Data_Profunctor = $PS["Data.Profunctor"];

  var iso = function iso(f) {
    return function (g) {
      return function (dictProfunctor) {
        return function (pab) {
          return Data_Profunctor.dimap(dictProfunctor)(f)(g)(pab);
        };
      };
    };
  };

  exports["iso"] = iso;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Lens.Iso.Newtype"] = $PS["Data.Lens.Iso.Newtype"] || {};
  var exports = $PS["Data.Lens.Iso.Newtype"];
  var Data_Lens_Iso = $PS["Data.Lens.Iso"];
  var Data_Newtype = $PS["Data.Newtype"];

  var _Newtype = function _Newtype(dictNewtype) {
    return function (dictNewtype1) {
      return function (dictProfunctor) {
        return Data_Lens_Iso.iso(Data_Newtype.unwrap(dictNewtype))(Data_Newtype.wrap(dictNewtype1))(dictProfunctor);
      };
    };
  };

  exports["_Newtype"] = _Newtype;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Lens.Prism"] = $PS["Data.Lens.Prism"] || {};
  var exports = $PS["Data.Lens.Prism"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Lens_Internal_Tagged = $PS["Data.Lens.Internal.Tagged"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Profunctor = $PS["Data.Profunctor"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];
  var review = Data_Newtype.under(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.newtypeTagged)(Data_Lens_Internal_Tagged.Tagged);

  var prism = function prism(to) {
    return function (fro) {
      return function (dictChoice) {
        return function (pab) {
          return Data_Profunctor.dimap(dictChoice.Profunctor0())(fro)(Data_Either.either(Control_Category.identity(Control_Category.categoryFn))(Control_Category.identity(Control_Category.categoryFn)))(Data_Profunctor_Choice.right(dictChoice)(Data_Profunctor.rmap(dictChoice.Profunctor0())(to)(pab)));
        };
      };
    };
  };

  var prism$prime = function prism$prime(to) {
    return function (fro) {
      return function (dictChoice) {
        return prism(to)(function (s) {
          return Data_Maybe.maybe(new Data_Either.Left(s))(Data_Either.Right.create)(fro(s));
        })(dictChoice);
      };
    };
  };

  exports["prism'"] = prism$prime;
  exports["prism"] = prism;
  exports["review"] = review;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Lens.Prism.Either"] = $PS["Data.Lens.Prism.Either"] || {};
  var exports = $PS["Data.Lens.Prism.Either"];
  var Data_Profunctor_Choice = $PS["Data.Profunctor.Choice"];

  var _Right = function _Right(dictChoice) {
    return Data_Profunctor_Choice.right(dictChoice);
  };

  var _Left = function _Left(dictChoice) {
    return Data_Profunctor_Choice.left(dictChoice);
  };

  exports["_Left"] = _Left;
  exports["_Right"] = _Right;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Lens.Prism.Coproduct"] = $PS["Data.Lens.Prism.Coproduct"] || {};
  var exports = $PS["Data.Lens.Prism.Coproduct"];
  var Data_Functor_Coproduct = $PS["Data.Functor.Coproduct"];
  var Data_Lens_Iso_Newtype = $PS["Data.Lens.Iso.Newtype"];
  var Data_Lens_Prism_Either = $PS["Data.Lens.Prism.Either"];

  var _Right = function _Right(dictChoice) {
    return function ($2) {
      return Data_Lens_Iso_Newtype["_Newtype"](Data_Functor_Coproduct.newtypeCoproduct)(Data_Functor_Coproduct.newtypeCoproduct)(dictChoice.Profunctor0())(Data_Lens_Prism_Either["_Right"](dictChoice)($2));
    };
  };

  var _Left = function _Left(dictChoice) {
    return function ($3) {
      return Data_Lens_Iso_Newtype["_Newtype"](Data_Functor_Coproduct.newtypeCoproduct)(Data_Functor_Coproduct.newtypeCoproduct)(dictChoice.Profunctor0())(Data_Lens_Prism_Either["_Left"](dictChoice)($3));
    };
  };

  exports["_Left"] = _Left;
  exports["_Right"] = _Right;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Map.Internal"] = $PS["Data.Map.Internal"] || {};
  var exports = $PS["Data.Map.Internal"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Tuple = $PS["Data.Tuple"];

  var Leaf = function () {
    function Leaf() {}

    ;
    Leaf.value = new Leaf();
    return Leaf;
  }();

  var Two = function () {
    function Two(value0, value1, value2, value3) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
    }

    ;

    Two.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return new Two(value0, value1, value2, value3);
          };
        };
      };
    };

    return Two;
  }();

  var Three = function () {
    function Three(value0, value1, value2, value3, value4, value5, value6) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
      this.value4 = value4;
      this.value5 = value5;
      this.value6 = value6;
    }

    ;

    Three.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return function (value4) {
              return function (value5) {
                return function (value6) {
                  return new Three(value0, value1, value2, value3, value4, value5, value6);
                };
              };
            };
          };
        };
      };
    };

    return Three;
  }();

  var TwoLeft = function () {
    function TwoLeft(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    TwoLeft.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new TwoLeft(value0, value1, value2);
        };
      };
    };

    return TwoLeft;
  }();

  var TwoRight = function () {
    function TwoRight(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    TwoRight.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new TwoRight(value0, value1, value2);
        };
      };
    };

    return TwoRight;
  }();

  var ThreeLeft = function () {
    function ThreeLeft(value0, value1, value2, value3, value4, value5) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
      this.value4 = value4;
      this.value5 = value5;
    }

    ;

    ThreeLeft.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return function (value4) {
              return function (value5) {
                return new ThreeLeft(value0, value1, value2, value3, value4, value5);
              };
            };
          };
        };
      };
    };

    return ThreeLeft;
  }();

  var ThreeMiddle = function () {
    function ThreeMiddle(value0, value1, value2, value3, value4, value5) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
      this.value4 = value4;
      this.value5 = value5;
    }

    ;

    ThreeMiddle.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return function (value4) {
              return function (value5) {
                return new ThreeMiddle(value0, value1, value2, value3, value4, value5);
              };
            };
          };
        };
      };
    };

    return ThreeMiddle;
  }();

  var ThreeRight = function () {
    function ThreeRight(value0, value1, value2, value3, value4, value5) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
      this.value4 = value4;
      this.value5 = value5;
    }

    ;

    ThreeRight.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return function (value4) {
              return function (value5) {
                return new ThreeRight(value0, value1, value2, value3, value4, value5);
              };
            };
          };
        };
      };
    };

    return ThreeRight;
  }();

  var KickUp = function () {
    function KickUp(value0, value1, value2, value3) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
    }

    ;

    KickUp.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return new KickUp(value0, value1, value2, value3);
          };
        };
      };
    };

    return KickUp;
  }();

  var values = function values(v) {
    if (v instanceof Leaf) {
      return Data_List_Types.Nil.value;
    }

    ;

    if (v instanceof Two) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(values(v.value3)));
    }

    ;

    if (v instanceof Three) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value2))(Data_Semigroup.append(Data_List_Types.semigroupList)(values(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value5))(values(v.value6)))));
    }

    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 612, column 1 - line 612, column 40): " + [v.constructor.name]);
  };

  var lookup = function lookup(dictOrd) {
    return function (k) {
      var comp = Data_Ord.compare(dictOrd);

      var go = function go($copy_v) {
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(v) {
          if (v instanceof Leaf) {
            $tco_done = true;
            return Data_Maybe.Nothing.value;
          }

          ;

          if (v instanceof Two) {
            var v2 = comp(k)(v.value1);

            if (v2 instanceof Data_Ordering.EQ) {
              $tco_done = true;
              return new Data_Maybe.Just(v.value2);
            }

            ;

            if (v2 instanceof Data_Ordering.LT) {
              $copy_v = v.value0;
              return;
            }

            ;
            $copy_v = v.value3;
            return;
          }

          ;

          if (v instanceof Three) {
            var v3 = comp(k)(v.value1);

            if (v3 instanceof Data_Ordering.EQ) {
              $tco_done = true;
              return new Data_Maybe.Just(v.value2);
            }

            ;
            var v4 = comp(k)(v.value4);

            if (v4 instanceof Data_Ordering.EQ) {
              $tco_done = true;
              return new Data_Maybe.Just(v.value5);
            }

            ;

            if (v3 instanceof Data_Ordering.LT) {
              $copy_v = v.value0;
              return;
            }

            ;

            if (v4 instanceof Data_Ordering.GT) {
              $copy_v = v.value6;
              return;
            }

            ;
            $copy_v = v.value3;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 200, column 5 - line 200, column 22): " + [v.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($copy_v);
        }

        ;
        return $tco_result;
      };

      return go;
    };
  };

  var member = function member(dictOrd) {
    return function (k) {
      return function (m) {
        return Data_Maybe.isJust(lookup(dictOrd)(k)(m));
      };
    };
  };

  var keys = function keys(v) {
    if (v instanceof Leaf) {
      return Data_List_Types.Nil.value;
    }

    ;

    if (v instanceof Two) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(keys(v.value3)));
    }

    ;

    if (v instanceof Three) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value0))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value1))(Data_Semigroup.append(Data_List_Types.semigroupList)(keys(v.value3))(Data_Semigroup.append(Data_List_Types.semigroupList)(Control_Applicative.pure(Data_List_Types.applicativeList)(v.value4))(keys(v.value6)))));
    }

    ;
    throw new Error("Failed pattern match at Data.Map.Internal (line 606, column 1 - line 606, column 38): " + [v.constructor.name]);
  };

  var functorMap = new Data_Functor.Functor(function (v) {
    return function (v1) {
      if (v1 instanceof Leaf) {
        return Leaf.value;
      }

      ;

      if (v1 instanceof Two) {
        return new Two(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3));
      }

      ;

      if (v1 instanceof Three) {
        return new Three(Data_Functor.map(functorMap)(v)(v1.value0), v1.value1, v(v1.value2), Data_Functor.map(functorMap)(v)(v1.value3), v1.value4, v(v1.value5), Data_Functor.map(functorMap)(v)(v1.value6));
      }

      ;
      throw new Error("Failed pattern match at Data.Map.Internal (line 96, column 1 - line 96, column 39): " + [v.constructor.name, v1.constructor.name]);
    };
  });

  var fromZipper = function fromZipper($copy_dictOrd) {
    return function ($copy_v) {
      return function ($copy_tree) {
        var $tco_var_dictOrd = $copy_dictOrd;
        var $tco_var_v = $copy_v;
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(dictOrd, v, tree) {
          if (v instanceof Data_List_Types.Nil) {
            $tco_done = true;
            return tree;
          }

          ;

          if (v instanceof Data_List_Types.Cons) {
            if (v.value0 instanceof TwoLeft) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_tree = new Two(tree, v.value0.value0, v.value0.value1, v.value0.value2);
              return;
            }

            ;

            if (v.value0 instanceof TwoRight) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_tree = new Two(v.value0.value0, v.value0.value1, v.value0.value2, tree);
              return;
            }

            ;

            if (v.value0 instanceof ThreeLeft) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_tree = new Three(tree, v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5);
              return;
            }

            ;

            if (v.value0 instanceof ThreeMiddle) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, tree, v.value0.value3, v.value0.value4, v.value0.value5);
              return;
            }

            ;

            if (v.value0 instanceof ThreeRight) {
              $tco_var_dictOrd = dictOrd;
              $tco_var_v = v.value1;
              $copy_tree = new Three(v.value0.value0, v.value0.value1, v.value0.value2, v.value0.value3, v.value0.value4, v.value0.value5, tree);
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 418, column 3 - line 423, column 88): " + [v.value0.constructor.name]);
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 415, column 1 - line 415, column 80): " + [v.constructor.name, tree.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($tco_var_dictOrd, $tco_var_v, $copy_tree);
        }

        ;
        return $tco_result;
      };
    };
  };

  var insert = function insert(dictOrd) {
    return function (k) {
      return function (v) {
        var up = function up($copy_v1) {
          return function ($copy_v2) {
            var $tco_var_v1 = $copy_v1;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(v1, v2) {
              if (v1 instanceof Data_List_Types.Nil) {
                $tco_done = true;
                return new Two(v2.value0, v2.value1, v2.value2, v2.value3);
              }

              ;

              if (v1 instanceof Data_List_Types.Cons) {
                if (v1.value0 instanceof TwoLeft) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(v1.value1)(new Three(v2.value0, v2.value1, v2.value2, v2.value3, v1.value0.value0, v1.value0.value1, v1.value0.value2));
                }

                ;

                if (v1.value0 instanceof TwoRight) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(v1.value1)(new Three(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0, v2.value1, v2.value2, v2.value3));
                }

                ;

                if (v1.value0 instanceof ThreeLeft) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v2.value0, v2.value1, v2.value2, v2.value3), v1.value0.value0, v1.value0.value1, new Two(v1.value0.value2, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                  return;
                }

                ;

                if (v1.value0 instanceof ThreeMiddle) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v2.value0), v2.value1, v2.value2, new Two(v2.value3, v1.value0.value3, v1.value0.value4, v1.value0.value5));
                  return;
                }

                ;

                if (v1.value0 instanceof ThreeRight) {
                  $tco_var_v1 = v1.value1;
                  $copy_v2 = new KickUp(new Two(v1.value0.value0, v1.value0.value1, v1.value0.value2, v1.value0.value3), v1.value0.value4, v1.value0.value5, new Two(v2.value0, v2.value1, v2.value2, v2.value3));
                  return;
                }

                ;
                throw new Error("Failed pattern match at Data.Map.Internal (line 454, column 5 - line 459, column 108): " + [v1.value0.constructor.name, v2.constructor.name]);
              }

              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 451, column 3 - line 451, column 56): " + [v1.constructor.name, v2.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_v1, $copy_v2);
            }

            ;
            return $tco_result;
          };
        };

        var comp = Data_Ord.compare(dictOrd);

        var down = function down($copy_ctx) {
          return function ($copy_v1) {
            var $tco_var_ctx = $copy_ctx;
            var $tco_done = false;
            var $tco_result;

            function $tco_loop(ctx, v1) {
              if (v1 instanceof Leaf) {
                $tco_done = true;
                return up(ctx)(new KickUp(Leaf.value, k, v, Leaf.value));
              }

              ;

              if (v1 instanceof Two) {
                var v2 = comp(k)(v1.value1);

                if (v2 instanceof Data_Ordering.EQ) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctx)(new Two(v1.value0, k, v, v1.value3));
                }

                ;

                if (v2 instanceof Data_Ordering.LT) {
                  $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(v1.value1, v1.value2, v1.value3), ctx);
                  $copy_v1 = v1.value0;
                  return;
                }

                ;
                $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(v1.value0, v1.value1, v1.value2), ctx);
                $copy_v1 = v1.value3;
                return;
              }

              ;

              if (v1 instanceof Three) {
                var v3 = comp(k)(v1.value1);

                if (v3 instanceof Data_Ordering.EQ) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, k, v, v1.value3, v1.value4, v1.value5, v1.value6));
                }

                ;
                var v4 = comp(k)(v1.value4);

                if (v4 instanceof Data_Ordering.EQ) {
                  $tco_done = true;
                  return fromZipper(dictOrd)(ctx)(new Three(v1.value0, v1.value1, v1.value2, v1.value3, k, v, v1.value6));
                }

                ;

                if (v3 instanceof Data_Ordering.LT) {
                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(v1.value1, v1.value2, v1.value3, v1.value4, v1.value5, v1.value6), ctx);
                  $copy_v1 = v1.value0;
                  return;
                }

                ;

                if (v3 instanceof Data_Ordering.GT && v4 instanceof Data_Ordering.LT) {
                  $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(v1.value0, v1.value1, v1.value2, v1.value4, v1.value5, v1.value6), ctx);
                  $copy_v1 = v1.value3;
                  return;
                }

                ;
                $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(v1.value0, v1.value1, v1.value2, v1.value3, v1.value4, v1.value5), ctx);
                $copy_v1 = v1.value6;
                return;
              }

              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 434, column 3 - line 434, column 55): " + [ctx.constructor.name, v1.constructor.name]);
            }

            ;

            while (!$tco_done) {
              $tco_result = $tco_loop($tco_var_ctx, $copy_v1);
            }

            ;
            return $tco_result;
          };
        };

        return down(Data_List_Types.Nil.value);
      };
    };
  };

  var pop = function pop(dictOrd) {
    return function (k) {
      var up = function up($copy_ctxs) {
        return function ($copy_tree) {
          var $tco_var_ctxs = $copy_ctxs;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(ctxs, tree) {
            if (ctxs instanceof Data_List_Types.Nil) {
              $tco_done = true;
              return tree;
            }

            ;

            if (ctxs instanceof Data_List_Types.Cons) {
              if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Leaf && tree instanceof Leaf) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value));
              }

              ;

              if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Leaf && tree instanceof Leaf) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value));
              }

              ;

              if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Two) {
                $tco_var_ctxs = ctxs.value1;
                $copy_tree = new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3);
                return;
              }

              ;

              if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Two) {
                $tco_var_ctxs = ctxs.value1;
                $copy_tree = new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree);
                return;
              }

              ;

              if (ctxs.value0 instanceof TwoLeft && ctxs.value0.value2 instanceof Three) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6)));
              }

              ;

              if (ctxs.value0 instanceof TwoRight && ctxs.value0.value0 instanceof Three) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree)));
              }

              ;

              if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Leaf && ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value0, ctxs.value0.value1, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
              }

              ;

              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Leaf && ctxs.value0.value5 instanceof Leaf && tree instanceof Leaf) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value3, ctxs.value0.value4, Leaf.value));
              }

              ;

              if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value0 instanceof Leaf && ctxs.value0.value3 instanceof Leaf && tree instanceof Leaf) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Three(Leaf.value, ctxs.value0.value1, ctxs.value0.value2, Leaf.value, ctxs.value0.value4, ctxs.value0.value5, Leaf.value));
              }

              ;

              if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Two) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0, ctxs.value0.value2.value1, ctxs.value0.value2.value2, ctxs.value0.value2.value3), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }

              ;

              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Two) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(new Three(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }

              ;

              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Two) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0, ctxs.value0.value5.value1, ctxs.value0.value5.value2, ctxs.value0.value5.value3)));
              }

              ;

              if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Two) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Two(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Three(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3, ctxs.value0.value4, ctxs.value0.value5, tree)));
              }

              ;

              if (ctxs.value0 instanceof ThreeLeft && ctxs.value0.value2 instanceof Three) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(tree, ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2.value0), ctxs.value0.value2.value1, ctxs.value0.value2.value2, new Two(ctxs.value0.value2.value3, ctxs.value0.value2.value4, ctxs.value0.value2.value5, ctxs.value0.value2.value6), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }

              ;

              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value0 instanceof Three) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Three(new Two(ctxs.value0.value0.value0, ctxs.value0.value0.value1, ctxs.value0.value0.value2, ctxs.value0.value0.value3), ctxs.value0.value0.value4, ctxs.value0.value0.value5, new Two(ctxs.value0.value0.value6, ctxs.value0.value1, ctxs.value0.value2, tree), ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5));
              }

              ;

              if (ctxs.value0 instanceof ThreeMiddle && ctxs.value0.value5 instanceof Three) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(tree, ctxs.value0.value3, ctxs.value0.value4, ctxs.value0.value5.value0), ctxs.value0.value5.value1, ctxs.value0.value5.value2, new Two(ctxs.value0.value5.value3, ctxs.value0.value5.value4, ctxs.value0.value5.value5, ctxs.value0.value5.value6)));
              }

              ;

              if (ctxs.value0 instanceof ThreeRight && ctxs.value0.value3 instanceof Three) {
                $tco_done = true;
                return fromZipper(dictOrd)(ctxs.value1)(new Three(ctxs.value0.value0, ctxs.value0.value1, ctxs.value0.value2, new Two(ctxs.value0.value3.value0, ctxs.value0.value3.value1, ctxs.value0.value3.value2, ctxs.value0.value3.value3), ctxs.value0.value3.value4, ctxs.value0.value3.value5, new Two(ctxs.value0.value3.value6, ctxs.value0.value4, ctxs.value0.value5, tree)));
              }

              ;
              throw new Error("Failed pattern match at Data.Map.Internal (line 511, column 9 - line 528, column 136): " + [ctxs.value0.constructor.name, tree.constructor.name]);
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 508, column 5 - line 528, column 136): " + [ctxs.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_ctxs, $copy_tree);
          }

          ;
          return $tco_result;
        };
      };

      var removeMaxNode = function removeMaxNode($copy_ctx) {
        return function ($copy_m) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(ctx, m) {
            if (m instanceof Two && m.value0 instanceof Leaf && m.value3 instanceof Leaf) {
              $tco_done = true;
              return up(ctx)(Leaf.value);
            }

            ;

            if (m instanceof Two) {
              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
              $copy_m = m.value3;
              return;
            }

            ;

            if (m instanceof Three && m.value0 instanceof Leaf && m.value3 instanceof Leaf && m.value6 instanceof Leaf) {
              $tco_done = true;
              return up(new Data_List_Types.Cons(new TwoRight(Leaf.value, m.value1, m.value2), ctx))(Leaf.value);
            }

            ;

            if (m instanceof Three) {
              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
              $copy_m = m.value6;
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 540, column 5 - line 544, column 107): " + [m.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_m);
          }

          ;
          return $tco_result;
        };
      };

      var maxNode = function maxNode($copy_m) {
        var $tco_done = false;
        var $tco_result;

        function $tco_loop(m) {
          if (m instanceof Two && m.value3 instanceof Leaf) {
            $tco_done = true;
            return {
              key: m.value1,
              value: m.value2
            };
          }

          ;

          if (m instanceof Two) {
            $copy_m = m.value3;
            return;
          }

          ;

          if (m instanceof Three && m.value6 instanceof Leaf) {
            $tco_done = true;
            return {
              key: m.value4,
              value: m.value5
            };
          }

          ;

          if (m instanceof Three) {
            $copy_m = m.value6;
            return;
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 531, column 33 - line 535, column 45): " + [m.constructor.name]);
        }

        ;

        while (!$tco_done) {
          $tco_result = $tco_loop($copy_m);
        }

        ;
        return $tco_result;
      };

      var comp = Data_Ord.compare(dictOrd);

      var down = function down($copy_ctx) {
        return function ($copy_m) {
          var $tco_var_ctx = $copy_ctx;
          var $tco_done = false;
          var $tco_result;

          function $tco_loop(ctx, m) {
            if (m instanceof Leaf) {
              $tco_done = true;
              return Data_Maybe.Nothing.value;
            }

            ;

            if (m instanceof Two) {
              var v = comp(k)(m.value1);

              if (m.value3 instanceof Leaf && v instanceof Data_Ordering.EQ) {
                $tco_done = true;
                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, up(ctx)(Leaf.value)));
              }

              ;

              if (v instanceof Data_Ordering.EQ) {
                var max = maxNode(m.value0);
                $tco_done = true;
                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new TwoLeft(max.key, max.value, m.value3), ctx))(m.value0)));
              }

              ;

              if (v instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new TwoLeft(m.value1, m.value2, m.value3), ctx);
                $copy_m = m.value0;
                return;
              }

              ;
              $tco_var_ctx = new Data_List_Types.Cons(new TwoRight(m.value0, m.value1, m.value2), ctx);
              $copy_m = m.value3;
              return;
            }

            ;

            if (m instanceof Three) {
              var leaves = function () {
                if (m.value0 instanceof Leaf && m.value3 instanceof Leaf && m.value6 instanceof Leaf) {
                  return true;
                }

                ;
                return false;
              }();

              var v = comp(k)(m.value4);
              var v3 = comp(k)(m.value1);

              if (leaves && v3 instanceof Data_Ordering.EQ) {
                $tco_done = true;
                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value4, m.value5, Leaf.value))));
              }

              ;

              if (leaves && v instanceof Data_Ordering.EQ) {
                $tco_done = true;
                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, fromZipper(dictOrd)(ctx)(new Two(Leaf.value, m.value1, m.value2, Leaf.value))));
              }

              ;

              if (v3 instanceof Data_Ordering.EQ) {
                var max = maxNode(m.value0);
                $tco_done = true;
                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value2, removeMaxNode(new Data_List_Types.Cons(new ThreeLeft(max.key, max.value, m.value3, m.value4, m.value5, m.value6), ctx))(m.value0)));
              }

              ;

              if (v instanceof Data_Ordering.EQ) {
                var max = maxNode(m.value3);
                $tco_done = true;
                return new Data_Maybe.Just(new Data_Tuple.Tuple(m.value5, removeMaxNode(new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, max.key, max.value, m.value6), ctx))(m.value3)));
              }

              ;

              if (v3 instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new ThreeLeft(m.value1, m.value2, m.value3, m.value4, m.value5, m.value6), ctx);
                $copy_m = m.value0;
                return;
              }

              ;

              if (v3 instanceof Data_Ordering.GT && v instanceof Data_Ordering.LT) {
                $tco_var_ctx = new Data_List_Types.Cons(new ThreeMiddle(m.value0, m.value1, m.value2, m.value4, m.value5, m.value6), ctx);
                $copy_m = m.value3;
                return;
              }

              ;
              $tco_var_ctx = new Data_List_Types.Cons(new ThreeRight(m.value0, m.value1, m.value2, m.value3, m.value4, m.value5), ctx);
              $copy_m = m.value6;
              return;
            }

            ;
            throw new Error("Failed pattern match at Data.Map.Internal (line 481, column 34 - line 504, column 80): " + [m.constructor.name]);
          }

          ;

          while (!$tco_done) {
            $tco_result = $tco_loop($tco_var_ctx, $copy_m);
          }

          ;
          return $tco_result;
        };
      };

      return down(Data_List_Types.Nil.value);
    };
  };

  var foldableMap = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
      return function (m) {
        return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(values(m));
      };
    };
  }, function (f) {
    return function (z) {
      return function (m) {
        return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(z)(values(m));
      };
    };
  }, function (f) {
    return function (z) {
      return function (m) {
        return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(z)(values(m));
      };
    };
  });
  var empty = Leaf.value;

  var fromFoldable = function fromFoldable(dictOrd) {
    return function (dictFoldable) {
      return Data_Foldable.foldl(dictFoldable)(function (m) {
        return function (v) {
          return insert(dictOrd)(v.value0)(v.value1)(m);
        };
      })(empty);
    };
  };

  var $$delete = function $$delete(dictOrd) {
    return function (k) {
      return function (m) {
        return Data_Maybe.maybe(m)(Data_Tuple.snd)(pop(dictOrd)(k)(m));
      };
    };
  };

  var alter = function alter(dictOrd) {
    return function (f) {
      return function (k) {
        return function (m) {
          var v = f(lookup(dictOrd)(k)(m));

          if (v instanceof Data_Maybe.Nothing) {
            return $$delete(dictOrd)(k)(m);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return insert(dictOrd)(k)(v.value0)(m);
          }

          ;
          throw new Error("Failed pattern match at Data.Map.Internal (line 549, column 15 - line 551, column 25): " + [v.constructor.name]);
        };
      };
    };
  };

  exports["empty"] = empty;
  exports["insert"] = insert;
  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
  exports["delete"] = $$delete;
  exports["pop"] = pop;
  exports["member"] = member;
  exports["alter"] = alter;
  exports["keys"] = keys;
  exports["values"] = values;
  exports["functorMap"] = functorMap;
  exports["foldableMap"] = foldableMap;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Map"] = $PS["Data.Map"] || {};
  var exports = $PS["Data.Map"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];

  var keys = function keys($0) {
    return Data_Functor["void"](Data_Map_Internal.functorMap)($0);
  };

  exports["keys"] = keys;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.MediaType"] = $PS["Data.MediaType"] || {};
  var exports = $PS["Data.MediaType"];
  var Data_Newtype = $PS["Data.Newtype"];

  var MediaType = function MediaType(x) {
    return x;
  };

  var newtypeMediaType = new Data_Newtype.Newtype(function (n) {
    return n;
  }, MediaType);
  exports["MediaType"] = MediaType;
  exports["newtypeMediaType"] = newtypeMediaType;
})(PS);

(function (exports) {
  "use strict";

  exports["null"] = null;

  exports.nullable = function (a, r, f) {
    return a == null ? r : f(a);
  };

  exports.notNull = function (x) {
    return x;
  };
})(PS["Data.Nullable"] = PS["Data.Nullable"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Nullable"] = $PS["Data.Nullable"] || {};
  var exports = $PS["Data.Nullable"];
  var $foreign = $PS["Data.Nullable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var toNullable = Data_Maybe.maybe($foreign["null"])($foreign.notNull);

  var toMaybe = function toMaybe(n) {
    return $foreign.nullable(n, Data_Maybe.Nothing.value, Data_Maybe.Just.create);
  };

  exports["toMaybe"] = toMaybe;
  exports["toNullable"] = toNullable;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Number"] = $PS["Data.Number"] || {};
  var exports = $PS["Data.Number"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Global = $PS["Global"];
  var $$isFinite = Global["isFinite"];

  var fromString = function () {
    var check = function check(num) {
      if ($$isFinite(num)) {
        return new Data_Maybe.Just(num);
      }

      ;

      if (Data_Boolean.otherwise) {
        return Data_Maybe.Nothing.value;
      }

      ;
      throw new Error("Failed pattern match at Data.Number (line 45, column 5 - line 46, column 39): " + [num.constructor.name]);
    };

    return function ($1) {
      return check(Global.readFloat($1));
    };
  }();

  exports["fromString"] = fromString;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Semiring.Free"] = $PS["Data.Semiring.Free"] || {};
  var exports = $PS["Data.Semiring.Free"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Semiring = $PS["Data.Semiring"];

  var Free = function Free(x) {
    return x;
  };

  var semiringFree = new Data_Semiring.Semiring(function (v) {
    return function (v1) {
      return Data_Semigroup.append(Data_List_Types.semigroupList)(v)(v1);
    };
  }, function (v) {
    return function (v1) {
      return Control_Bind.bind(Data_List_Types.bindList)(v)(function (v2) {
        return Control_Bind.bind(Data_List_Types.bindList)(v1)(function (v3) {
          return Control_Applicative.pure(Data_List_Types.applicativeList)(Data_Semigroup.append(Data_List_Types.semigroupList)(v2)(v3));
        });
      });
    };
  }, Data_List.singleton(Data_List_Types.Nil.value), Data_List_Types.Nil.value);
  var newtypeFree = new Data_Newtype.Newtype(function (n) {
    return n;
  }, Free);

  var free = function free(a) {
    return Data_List.singleton(Data_List.singleton(a));
  };

  exports["Free"] = Free;
  exports["free"] = free;
  exports["newtypeFree"] = newtypeFree;
  exports["semiringFree"] = semiringFree;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Set"] = $PS["Data.Set"] || {};
  var exports = $PS["Data.Set"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];

  var toList = function toList(v) {
    return Data_Map_Internal.keys(v);
  };

  var foldableSet = new Data_Foldable.Foldable(function (dictMonoid) {
    return function (f) {
      return function ($65) {
        return Data_Foldable.foldMap(Data_List_Types.foldableList)(dictMonoid)(f)(toList($65));
      };
    };
  }, function (f) {
    return function (x) {
      return function ($66) {
        return Data_Foldable.foldl(Data_List_Types.foldableList)(f)(x)(toList($66));
      };
    };
  }, function (f) {
    return function (x) {
      return function ($67) {
        return Data_Foldable.foldr(Data_List_Types.foldableList)(f)(x)(toList($67));
      };
    };
  });
  exports["foldableSet"] = foldableSet;
})(PS);

(function (exports) {
  "use strict";

  exports.split = function (sep) {
    return function (s) {
      return s.split(sep);
    };
  };

  exports.joinWith = function (s) {
    return function (xs) {
      return xs.join(s);
    };
  };
})(PS["Data.String.Common"] = PS["Data.String.Common"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.String.Common"] = $PS["Data.String.Common"] || {};
  var exports = $PS["Data.String.Common"];
  var $foreign = $PS["Data.String.Common"];
  exports["split"] = $foreign.split;
  exports["joinWith"] = $foreign.joinWith;
})(PS);

(function (exports) {
  "use strict"; // jshint maxparams: 3

  exports.traverseArrayImpl = function () {
    function array1(a) {
      return [a];
    }

    function array2(a) {
      return function (b) {
        return [a, b];
      };
    }

    function array3(a) {
      return function (b) {
        return function (c) {
          return [a, b, c];
        };
      };
    }

    function concat2(xs) {
      return function (ys) {
        return xs.concat(ys);
      };
    }

    return function (apply) {
      return function (map) {
        return function (pure) {
          return function (f) {
            return function (array) {
              function go(bot, top) {
                switch (top - bot) {
                  case 0:
                    return pure([]);

                  case 1:
                    return map(array1)(f(array[bot]));

                  case 2:
                    return apply(map(array2)(f(array[bot])))(f(array[bot + 1]));

                  case 3:
                    return apply(apply(map(array3)(f(array[bot])))(f(array[bot + 1])))(f(array[bot + 2]));

                  default:
                    // This slightly tricky pivot selection aims to produce two
                    // even-length partitions where possible.
                    var pivot = bot + Math.floor((top - bot) / 4) * 2;
                    return apply(map(concat2)(go(bot, pivot)))(go(pivot, top));
                }
              }

              return go(0, array.length);
            };
          };
        };
      };
    };
  }();
})(PS["Data.Traversable"] = PS["Data.Traversable"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Traversable"] = $PS["Data.Traversable"] || {};
  var exports = $PS["Data.Traversable"];
  var $foreign = $PS["Data.Traversable"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];

  var Traversable = function Traversable(Foldable1, Functor0, sequence, traverse) {
    this.Foldable1 = Foldable1;
    this.Functor0 = Functor0;
    this.sequence = sequence;
    this.traverse = traverse;
  };

  var traverse = function traverse(dict) {
    return dict.traverse;
  };

  var sequenceDefault = function sequenceDefault(dictTraversable) {
    return function (dictApplicative) {
      return traverse(dictTraversable)(dictApplicative)(Control_Category.identity(Control_Category.categoryFn));
    };
  };

  var traversableArray = new Traversable(function () {
    return Data_Foldable.foldableArray;
  }, function () {
    return Data_Functor.functorArray;
  }, function (dictApplicative) {
    return sequenceDefault(traversableArray)(dictApplicative);
  }, function (dictApplicative) {
    return $foreign.traverseArrayImpl(Control_Apply.apply(dictApplicative.Apply0()))(Data_Functor.map(dictApplicative.Apply0().Functor0()))(Control_Applicative.pure(dictApplicative));
  });

  var sequence = function sequence(dict) {
    return dict.sequence;
  };

  exports["Traversable"] = Traversable;
  exports["traverse"] = traverse;
  exports["sequence"] = sequence;
  exports["sequenceDefault"] = sequenceDefault;
  exports["traversableArray"] = traversableArray;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Data.Validation.Semiring"] = $PS["Data.Validation.Semiring"] || {};
  var exports = $PS["Data.Validation.Semiring"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Data_Either = $PS["Data.Either"];
  var Data_Semiring = $PS["Data.Semiring"];

  var V = function V(x) {
    return x;
  };

  var unV = function unV(v) {
    return function (v1) {
      return function (v2) {
        if (v2 instanceof Data_Either.Left) {
          return v(v2.value0);
        }

        ;

        if (v2 instanceof Data_Either.Right) {
          return v1(v2.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Validation.Semiring (line 48, column 1 - line 48, column 77): " + [v.constructor.name, v1.constructor.name, v2.constructor.name]);
      };
    };
  };

  var invalid = function invalid($71) {
    return V(Data_Either.Left.create($71));
  };

  var functorV = Data_Either.functorEither;

  var applyV = function applyV(dictSemiring) {
    return new Control_Apply.Apply(function () {
      return functorV;
    }, function (v) {
      return function (v1) {
        if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
          return new Data_Either.Left(Data_Semiring.mul(dictSemiring)(v.value0)(v1.value0));
        }

        ;

        if (v instanceof Data_Either.Left) {
          return new Data_Either.Left(v.value0);
        }

        ;

        if (v1 instanceof Data_Either.Left) {
          return new Data_Either.Left(v1.value0);
        }

        ;

        if (v instanceof Data_Either.Right && v1 instanceof Data_Either.Right) {
          return new Data_Either.Right(v.value0(v1.value0));
        }

        ;
        throw new Error("Failed pattern match at Data.Validation.Semiring (line 89, column 1 - line 89, column 49): " + [v.constructor.name, v1.constructor.name]);
      };
    });
  };

  var applicativeV = function applicativeV(dictSemiring) {
    return new Control_Applicative.Applicative(function () {
      return applyV(dictSemiring);
    }, function ($77) {
      return V(Data_Either.Right.create($77));
    });
  };

  var altV = function altV(dictSemiring) {
    return new Control_Alt.Alt(function () {
      return functorV;
    }, function (v) {
      return function (v1) {
        if (v instanceof Data_Either.Left && v1 instanceof Data_Either.Left) {
          return new Data_Either.Left(Data_Semiring.add(dictSemiring)(v.value0)(v1.value0));
        }

        ;

        if (v instanceof Data_Either.Left) {
          return v1;
        }

        ;

        if (v instanceof Data_Either.Right) {
          return new Data_Either.Right(v.value0);
        }

        ;
        throw new Error("Failed pattern match at Data.Validation.Semiring (line 104, column 1 - line 104, column 45): " + [v.constructor.name, v1.constructor.name]);
      };
    });
  };

  exports["V"] = V;
  exports["unV"] = unV;
  exports["invalid"] = invalid;
  exports["functorV"] = functorV;
  exports["applyV"] = applyV;
  exports["applicativeV"] = applicativeV;
  exports["altV"] = altV;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.Data.OrdBox"] = $PS["Halogen.Data.OrdBox"] || {};
  var exports = $PS["Halogen.Data.OrdBox"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Ord = $PS["Data.Ord"];

  var OrdBox = function () {
    function OrdBox(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    OrdBox.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new OrdBox(value0, value1, value2);
        };
      };
    };

    return OrdBox;
  }();

  var unOrdBox = function unOrdBox(v) {
    return v.value2;
  };

  var mkOrdBox = function mkOrdBox(dictOrd) {
    return OrdBox.create(Data_Eq.eq(dictOrd.Eq0()))(Data_Ord.compare(dictOrd));
  };

  var eqOrdBox = new Data_Eq.Eq(function (v) {
    return function (v1) {
      return v.value0(v.value2)(v1.value2);
    };
  });
  var ordOrdBox = new Data_Ord.Ord(function () {
    return eqOrdBox;
  }, function (v) {
    return function (v1) {
      return v.value1(v.value2)(v1.value2);
    };
  });
  exports["mkOrdBox"] = mkOrdBox;
  exports["unOrdBox"] = unOrdBox;
  exports["eqOrdBox"] = eqOrdBox;
  exports["ordOrdBox"] = ordOrdBox;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.Component"] = $PS["Halogen.Component"] || {};
  var exports = $PS["Halogen.Component"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Halogen_Data_OrdBox = $PS["Halogen.Data.OrdBox"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];

  var ComponentSlot = function () {
    function ComponentSlot(value0, value1, value2, value3, value4, value5) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
      this.value3 = value3;
      this.value4 = value4;
      this.value5 = value5;
    }

    ;

    ComponentSlot.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return function (value3) {
            return function (value4) {
              return function (value5) {
                return new ComponentSlot(value0, value1, value2, value3, value4, value5);
              };
            };
          };
        };
      };
    };

    return ComponentSlot;
  }();

  var unComponentSlot = function unComponentSlot(f) {
    return function (cs) {
      return f(cs.value0)(cs.value1)(cs.value2)(cs.value3)(cs.value4)(cs.value5);
    };
  };

  var unComponent = Unsafe_Coerce.unsafeCoerce;
  var mkComponentSlot = ComponentSlot.create;
  var mkComponent = Unsafe_Coerce.unsafeCoerce;

  var parentComponent = function parentComponent(dictOrd) {
    return function (spec) {
      return mkComponent({
        initialState: spec.initialState,
        render: spec.render,
        "eval": spec["eval"],
        receiver: spec.receiver,
        initializer: Data_Maybe.Nothing.value,
        finalizer: Data_Maybe.Nothing.value,
        mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(dictOrd)
      });
    };
  };

  var lifecycleParentComponent = function lifecycleParentComponent(dictOrd) {
    return function (spec) {
      return mkComponent({
        initialState: spec.initialState,
        render: spec.render,
        "eval": spec["eval"],
        receiver: spec.receiver,
        initializer: spec.initializer,
        finalizer: spec.finalizer,
        mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(dictOrd)
      });
    };
  };

  var lifecycleComponent = function lifecycleComponent(dictBifunctor) {
    return function (spec) {
      return mkComponent({
        initialState: spec.initialState,
        render: spec.render,
        "eval": spec["eval"],
        receiver: spec.receiver,
        initializer: spec.initializer,
        finalizer: spec.finalizer,
        mkOrdBox: Halogen_Data_OrdBox.mkOrdBox(Data_Ord.ordVoid)
      });
    };
  };

  var component = function component(dictBifunctor) {
    return function (spec) {
      return lifecycleComponent(dictBifunctor)({
        initialState: spec.initialState,
        render: spec.render,
        "eval": spec["eval"],
        receiver: spec.receiver,
        initializer: Data_Maybe.Nothing.value,
        finalizer: Data_Maybe.Nothing.value
      });
    };
  };

  exports["mkComponent"] = mkComponent;
  exports["unComponent"] = unComponent;
  exports["component"] = component;
  exports["lifecycleComponent"] = lifecycleComponent;
  exports["parentComponent"] = parentComponent;
  exports["lifecycleParentComponent"] = lifecycleParentComponent;
  exports["mkComponentSlot"] = mkComponentSlot;
  exports["unComponentSlot"] = unComponentSlot;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.Query.InputF"] = $PS["Halogen.Query.InputF"] || {};
  var exports = $PS["Halogen.Query.InputF"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];

  var RefUpdate = function () {
    function RefUpdate(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    RefUpdate.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new RefUpdate(value0, value1, value2);
        };
      };
    };

    return RefUpdate;
  }();

  var Query = function () {
    function Query(value0) {
      this.value0 = value0;
    }

    ;

    Query.create = function (value0) {
      return new Query(value0);
    };

    return Query;
  }();

  var bifunctorInputF = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
      return function (v) {
        if (v instanceof RefUpdate) {
          return new RefUpdate(v.value0, v.value1, f(v.value2));
        }

        ;

        if (v instanceof Query) {
          return new Query(g(v.value0));
        }

        ;
        throw new Error("Failed pattern match at Halogen.Query.InputF (line 21, column 15 - line 23, column 27): " + [v.constructor.name]);
      };
    };
  });
  var functorInputF = new Data_Functor.Functor(Data_Bifunctor.rmap(bifunctorInputF));
  exports["RefUpdate"] = RefUpdate;
  exports["Query"] = Query;
  exports["bifunctorInputF"] = bifunctorInputF;
  exports["functorInputF"] = functorInputF;
})(PS);

(function (exports) {
  "use strict";

  exports.unsafeToForeign = function (value) {
    return value;
  };

  exports.unsafeFromForeign = function (value) {
    return value;
  };

  exports.typeOf = function (value) {
    return _typeof(value);
  };

  exports.tagOf = function (value) {
    return Object.prototype.toString.call(value).slice(8, -1);
  };
})(PS["Foreign"] = PS["Foreign"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign"] = $PS["Foreign"] || {};
  var exports = $PS["Foreign"];
  var $foreign = $PS["Foreign"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_List_NonEmpty = $PS["Data.List.NonEmpty"];

  var TypeMismatch = function () {
    function TypeMismatch(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    TypeMismatch.create = function (value0) {
      return function (value1) {
        return new TypeMismatch(value0, value1);
      };
    };

    return TypeMismatch;
  }();

  var fail = function fail($107) {
    return Control_Monad_Error_Class.throwError(Control_Monad_Except_Trans.monadThrowExceptT(Data_Identity.monadIdentity))(Data_List_NonEmpty.singleton($107));
  };

  var unsafeReadTagged = function unsafeReadTagged(tag) {
    return function (value) {
      if ($foreign.tagOf(value) === tag) {
        return Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity))($foreign.unsafeFromForeign(value));
      }

      ;

      if (Data_Boolean.otherwise) {
        return fail(new TypeMismatch(tag, $foreign.tagOf(value)));
      }

      ;
      throw new Error("Failed pattern match at Foreign (line 106, column 1 - line 106, column 55): " + [tag.constructor.name, value.constructor.name]);
    };
  };

  var readString = unsafeReadTagged("String");
  exports["TypeMismatch"] = TypeMismatch;
  exports["unsafeReadTagged"] = unsafeReadTagged;
  exports["readString"] = readString;
  exports["fail"] = fail;
  exports["unsafeToForeign"] = $foreign.unsafeToForeign;
  exports["typeOf"] = $foreign.typeOf;
})(PS);

(function (exports) {
  "use strict";

  exports.runST = function (f) {
    return f();
  };

  exports._foldM = function (bind) {
    return function (f) {
      return function (mz) {
        return function (m) {
          var acc = mz;

          function g(k) {
            return function (z) {
              return f(z)(k)(m[k]);
            };
          }

          for (var k in m) {
            if (hasOwnProperty.call(m, k)) {
              acc = bind(acc)(g(k));
            }
          }

          return acc;
        };
      };
    };
  };

  exports._lookup = function (no, yes, k, m) {
    return k in m ? yes(m[k]) : no;
  };

  function toArrayWithKey(f) {
    return function (m) {
      var r = [];

      for (var k in m) {
        if (hasOwnProperty.call(m, k)) {
          r.push(f(k)(m[k]));
        }
      }

      return r;
    };
  }
})(PS["Foreign.Object"] = PS["Foreign.Object"] || {});

(function (exports) {
  "use strict";

  exports["new"] = function () {
    return {};
  };

  exports.poke = function (k) {
    return function (v) {
      return function (m) {
        return function () {
          m[k] = v;
          return m;
        };
      };
    };
  };
})(PS["Foreign.Object.ST"] = PS["Foreign.Object.ST"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Object.ST"] = $PS["Foreign.Object.ST"] || {};
  var exports = $PS["Foreign.Object.ST"];
  var $foreign = $PS["Foreign.Object.ST"];
  exports["new"] = $foreign["new"];
  exports["poke"] = $foreign.poke;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Object"] = $PS["Foreign.Object"] || {};
  var exports = $PS["Foreign.Object"];
  var $foreign = $PS["Foreign.Object"];
  var Control_Monad_ST_Internal = $PS["Control.Monad.ST.Internal"];
  var Data_Array = $PS["Data.Array"];
  var Data_Function = $PS["Data.Function"];
  var Data_Function_Uncurried = $PS["Data.Function.Uncurried"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];
  var lookup = Data_Function_Uncurried.runFn4($foreign["_lookup"])(Data_Maybe.Nothing.value)(Data_Maybe.Just.create);

  var fromFoldable = function fromFoldable(dictFoldable) {
    return function (l) {
      return $foreign.runST(function __do() {
        var v = Foreign_Object_ST["new"]();
        Control_Monad_ST_Internal.foreach(Data_Array.fromFoldable(dictFoldable)(l))(function (v1) {
          return Data_Functor["void"](Control_Monad_ST_Internal.functorST)(Foreign_Object_ST.poke(v1.value0)(v1.value1)(v));
        })();
        return v;
      });
    };
  };

  var fold = $foreign["_foldM"](Data_Function.applyFlipped);

  var foldMap = function foldMap(dictMonoid) {
    return function (f) {
      return fold(function (acc) {
        return function (k) {
          return function (v) {
            return Data_Semigroup.append(dictMonoid.Semigroup0())(acc)(f(k)(v));
          };
        };
      })(Data_Monoid.mempty(dictMonoid));
    };
  };

  exports["lookup"] = lookup;
  exports["fromFoldable"] = fromFoldable;
  exports["fold"] = fold;
  exports["foldMap"] = foldMap;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.VDom.Machine"] = $PS["Halogen.VDom.Machine"] || {};
  var exports = $PS["Halogen.VDom.Machine"];

  var Step = function () {
    function Step(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    Step.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new Step(value0, value1, value2);
        };
      };
    };

    return Step;
  }();

  var step = function step(v) {
    return v.value1;
  };

  var halt = function halt(v) {
    return v.value2;
  };

  var extract = function extract(v) {
    return v.value0;
  };

  exports["Step"] = Step;
  exports["extract"] = extract;
  exports["step"] = step;
  exports["halt"] = halt;
})(PS);

(function (exports) {
  "use strict";

  exports.unsafeGetAny = function (key, obj) {
    return obj[key];
  };

  exports.unsafeHasAny = function (key, obj) {
    return obj.hasOwnProperty(key);
  };

  exports.unsafeSetAny = function (key, val, obj) {
    obj[key] = val;
  };

  exports.forE = function (a, f) {
    var b = [];

    for (var i = 0; i < a.length; i++) {
      b.push(f(i, a[i]));
    }

    return b;
  };

  exports.forInE = function (o, f) {
    var ks = Object.keys(o);

    for (var i = 0; i < ks.length; i++) {
      var k = ks[i];
      f(k, o[k]);
    }
  };

  exports.diffWithIxE = function (a1, a2, f1, f2, f3) {
    var a3 = [];
    var l1 = a1.length;
    var l2 = a2.length;
    var i = 0;

    while (1) {
      if (i < l1) {
        if (i < l2) {
          a3.push(f1(i, a1[i], a2[i]));
        } else {
          f2(i, a1[i]);
        }
      } else if (i < l2) {
        a3.push(f3(i, a2[i]));
      } else {
        break;
      }

      i++;
    }

    return a3;
  };

  exports.strMapWithIxE = function (as, fk, f) {
    var o = {};

    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);
      o[k] = f(k, i, a);
    }

    return o;
  };

  exports.diffWithKeyAndIxE = function (o1, as, fk, f1, f2, f3) {
    var o2 = {};

    for (var i = 0; i < as.length; i++) {
      var a = as[i];
      var k = fk(a);

      if (o1.hasOwnProperty(k)) {
        o2[k] = f1(k, i, o1[k], a);
      } else {
        o2[k] = f3(k, i, a);
      }
    }

    for (var k in o1) {
      if (k in o2) {
        continue;
      }

      f2(k, o1[k]);
    }

    return o2;
  };

  exports.refEq = function (a, b) {
    return a === b;
  };

  exports.createTextNode = function (s, doc) {
    return doc.createTextNode(s);
  };

  exports.setTextContent = function (s, n) {
    n.textContent = s;
  };

  exports.createElement = function (ns, name, doc) {
    if (ns != null) {
      return doc.createElementNS(ns, name);
    } else {
      return doc.createElement(name);
    }
  };

  exports.insertChildIx = function (i, a, b) {
    var n = b.childNodes.item(i) || null;

    if (n !== a) {
      b.insertBefore(a, n);
    }
  };

  exports.removeChild = function (a, b) {
    if (b && a.parentNode === b) {
      b.removeChild(a);
    }
  };

  exports.parentNode = function (a) {
    return a.parentNode;
  };

  exports.setAttribute = function (ns, attr, val, el) {
    if (ns != null) {
      el.setAttributeNS(ns, attr, val);
    } else {
      el.setAttribute(attr, val);
    }
  };

  exports.removeAttribute = function (ns, attr, el) {
    if (ns != null) {
      el.removeAttributeNS(ns, attr);
    } else {
      el.removeAttribute(attr);
    }
  };

  exports.addEventListener = function (ev, listener, el) {
    el.addEventListener(ev, listener, false);
  };

  exports.removeEventListener = function (ev, listener, el) {
    el.removeEventListener(ev, listener, false);
  };

  exports.jsUndefined = void 0;
})(PS["Halogen.VDom.Util"] = PS["Halogen.VDom.Util"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.VDom.Util"] = $PS["Halogen.VDom.Util"] || {};
  var exports = $PS["Halogen.VDom.Util"];
  var $foreign = $PS["Halogen.VDom.Util"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Foreign_Object_ST = $PS["Foreign.Object.ST"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var unsafeLookup = $foreign.unsafeGetAny;
  var unsafeFreeze = Unsafe_Coerce.unsafeCoerce;
  var pokeMutMap = $foreign.unsafeSetAny;
  var newMutMap = Foreign_Object_ST["new"];
  var effectUnit = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
  exports["effectUnit"] = effectUnit;
  exports["newMutMap"] = newMutMap;
  exports["pokeMutMap"] = pokeMutMap;
  exports["unsafeFreeze"] = unsafeFreeze;
  exports["unsafeLookup"] = unsafeLookup;
  exports["unsafeGetAny"] = $foreign.unsafeGetAny;
  exports["unsafeHasAny"] = $foreign.unsafeHasAny;
  exports["unsafeSetAny"] = $foreign.unsafeSetAny;
  exports["forE"] = $foreign.forE;
  exports["forInE"] = $foreign.forInE;
  exports["diffWithIxE"] = $foreign.diffWithIxE;
  exports["diffWithKeyAndIxE"] = $foreign.diffWithKeyAndIxE;
  exports["strMapWithIxE"] = $foreign.strMapWithIxE;
  exports["refEq"] = $foreign.refEq;
  exports["createTextNode"] = $foreign.createTextNode;
  exports["setTextContent"] = $foreign.setTextContent;
  exports["createElement"] = $foreign.createElement;
  exports["insertChildIx"] = $foreign.insertChildIx;
  exports["removeChild"] = $foreign.removeChild;
  exports["parentNode"] = $foreign.parentNode;
  exports["setAttribute"] = $foreign.setAttribute;
  exports["removeAttribute"] = $foreign.removeAttribute;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
  exports["jsUndefined"] = $foreign.jsUndefined;
})(PS);

(function (exports) {
  "use strict";

  exports.eventListener = function (fn) {
    return function () {
      return function (event) {
        return fn(event)();
      };
    };
  };

  exports.addEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.addEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };

  exports.removeEventListener = function (type) {
    return function (listener) {
      return function (useCapture) {
        return function (target) {
          return function () {
            return target.removeEventListener(type, listener, useCapture);
          };
        };
      };
    };
  };
})(PS["Web.Event.EventTarget"] = PS["Web.Event.EventTarget"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Web.Event.EventTarget"] = $PS["Web.Event.EventTarget"] || {};
  var exports = $PS["Web.Event.EventTarget"];
  var $foreign = $PS["Web.Event.EventTarget"];
  exports["eventListener"] = $foreign.eventListener;
  exports["addEventListener"] = $foreign.addEventListener;
  exports["removeEventListener"] = $foreign.removeEventListener;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.VDom.DOM.Prop"] = $PS["Halogen.VDom.DOM.Prop"] || {};
  var exports = $PS["Halogen.VDom.DOM.Prop"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Foreign = $PS["Foreign"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];

  var Created = function () {
    function Created(value0) {
      this.value0 = value0;
    }

    ;

    Created.create = function (value0) {
      return new Created(value0);
    };

    return Created;
  }();

  var Removed = function () {
    function Removed(value0) {
      this.value0 = value0;
    }

    ;

    Removed.create = function (value0) {
      return new Removed(value0);
    };

    return Removed;
  }();

  var Attribute = function () {
    function Attribute(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    Attribute.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new Attribute(value0, value1, value2);
        };
      };
    };

    return Attribute;
  }();

  var Property = function () {
    function Property(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Property.create = function (value0) {
      return function (value1) {
        return new Property(value0, value1);
      };
    };

    return Property;
  }();

  var Handler = function () {
    function Handler(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Handler.create = function (value0) {
      return function (value1) {
        return new Handler(value0, value1);
      };
    };

    return Handler;
  }();

  var Ref = function () {
    function Ref(value0) {
      this.value0 = value0;
    }

    ;

    Ref.create = function (value0) {
      return new Ref(value0);
    };

    return Ref;
  }();

  var unsafeGetProperty = Halogen_VDom_Util.unsafeGetAny;
  var setProperty = Halogen_VDom_Util.unsafeSetAny;

  var removeProperty = function removeProperty(key, el) {
    var v = Foreign.typeOf(Halogen_VDom_Util.unsafeGetAny(key, el));

    if (v === "string") {
      return Halogen_VDom_Util.unsafeSetAny(key, "", el);
    }

    ;

    if (key === "rowSpan") {
      return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
    }

    ;

    if (key === "colSpan") {
      return Halogen_VDom_Util.unsafeSetAny(key, 1, el);
    }

    ;
    return Halogen_VDom_Util.unsafeSetAny(key, Halogen_VDom_Util.jsUndefined, el);
  };

  var propToStrKey = function propToStrKey(v) {
    if (v instanceof Attribute && v.value0 instanceof Data_Maybe.Just) {
      return "attr/" + (v.value0.value0 + (":" + v.value1));
    }

    ;

    if (v instanceof Attribute) {
      return "attr/:" + v.value1;
    }

    ;

    if (v instanceof Property) {
      return "prop/" + v.value0;
    }

    ;

    if (v instanceof Handler) {
      return "handler/" + v.value0;
    }

    ;

    if (v instanceof Ref) {
      return "ref";
    }

    ;
    throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 178, column 16 - line 185, column 1): " + [v.constructor.name]);
  };

  var propFromString = Unsafe_Coerce.unsafeCoerce;
  var propFromNumber = Unsafe_Coerce.unsafeCoerce;
  var propFromInt = Unsafe_Coerce.unsafeCoerce;
  var propFromBoolean = Unsafe_Coerce.unsafeCoerce;
  var functorProp = new Data_Functor.Functor(function (f) {
    return function (v) {
      if (v instanceof Handler) {
        return new Handler(v.value0, Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value1));
      }

      ;

      if (v instanceof Ref) {
        return new Ref(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(f))(v.value0));
      }

      ;
      return v;
    };
  });

  var buildProp = function buildProp(emit) {
    return function (el) {
      var removeProp = function removeProp(prevEvents) {
        return function (v, v1) {
          if (v1 instanceof Attribute) {
            return Halogen_VDom_Util.removeAttribute(Data_Nullable.toNullable(v1.value0), v1.value1, el);
          }

          ;

          if (v1 instanceof Property) {
            return removeProperty(v1.value0, el);
          }

          ;

          if (v1 instanceof Handler) {
            var handler = Halogen_VDom_Util.unsafeLookup(v1.value0, prevEvents);
            return Halogen_VDom_Util.removeEventListener(v1.value0, Data_Tuple.fst(handler), el);
          }

          ;

          if (v1 instanceof Ref) {
            return Data_Unit.unit;
          }

          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 165, column 5 - line 175, column 18): " + [v1.constructor.name]);
        };
      };

      var mbEmit = function mbEmit(v) {
        if (v instanceof Data_Maybe.Just) {
          return emit(v.value0)();
        }

        ;
        return Data_Unit.unit;
      };

      var done = function done(ps) {
        var v = Foreign_Object.lookup("ref")(ps);

        if (v instanceof Data_Maybe.Just && v.value0 instanceof Ref) {
          return function () {
            return mbEmit(v.value0.value0(new Removed(el)));
          };
        }

        ;
        return Halogen_VDom_Util.effectUnit;
      };

      var diffProp = function diffProp(prevEvents, events) {
        return function (v, v1, v11, v2) {
          if (v11 instanceof Attribute && v2 instanceof Attribute) {
            var $61 = v11.value2 === v2.value2;

            if ($61) {
              return v2;
            }

            ;
            Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
            return v2;
          }

          ;

          if (v11 instanceof Property && v2 instanceof Property) {
            var v4 = Halogen_VDom_Util.refEq(v11.value1, v2.value1);

            if (v4) {
              return v2;
            }

            ;

            if (v2.value0 === "value") {
              var elVal = unsafeGetProperty("value", el);
              var $70 = Halogen_VDom_Util.refEq(elVal, v2.value1);

              if ($70) {
                return v2;
              }

              ;
              setProperty(v2.value0, v2.value1, el);
              return v2;
            }

            ;
            setProperty(v2.value0, v2.value1, el);
            return v2;
          }

          ;

          if (v11 instanceof Handler && v2 instanceof Handler) {
            var handler = Halogen_VDom_Util.unsafeLookup(v2.value0, prevEvents);
            Effect_Ref.write(v2.value1)(Data_Tuple.snd(handler))();
            Halogen_VDom_Util.pokeMutMap(v2.value0, handler, events);
            return v2;
          }

          ;
          return v2;
        };
      };

      var applyProp = function applyProp(events) {
        return function (v, v1, v2) {
          if (v2 instanceof Attribute) {
            Halogen_VDom_Util.setAttribute(Data_Nullable.toNullable(v2.value0), v2.value1, v2.value2, el);
            return v2;
          }

          ;

          if (v2 instanceof Property) {
            setProperty(v2.value0, v2.value1, el);
            return v2;
          }

          ;

          if (v2 instanceof Handler) {
            var v3 = Halogen_VDom_Util.unsafeGetAny(v2.value0, events);

            if (Halogen_VDom_Util.unsafeHasAny(v2.value0, events)) {
              Effect_Ref.write(v2.value1)(Data_Tuple.snd(v3))();
              return v2;
            }

            ;
            var v4 = Effect_Ref["new"](v2.value1)();
            var v5 = Web_Event_EventTarget.eventListener(function (ev) {
              return function __do() {
                var v5 = Effect_Ref.read(v4)();
                return mbEmit(v5(ev));
              };
            })();
            Halogen_VDom_Util.pokeMutMap(v2.value0, new Data_Tuple.Tuple(v5, v4), events);
            Halogen_VDom_Util.addEventListener(v2.value0, v5, el);
            return v2;
          }

          ;

          if (v2 instanceof Ref) {
            mbEmit(v2.value0(new Created(el)));
            return v2;
          }

          ;
          throw new Error("Failed pattern match at Halogen.VDom.DOM.Prop (line 109, column 5 - line 131, column 15): " + [v2.constructor.name]);
        };
      };

      var patch = function patch(prevEvents, ps1) {
        return function (ps2) {
          var v = Halogen_VDom_Util.newMutMap();
          var onThis = removeProp(prevEvents);
          var onThese = diffProp(prevEvents, v);
          var onThat = applyProp(v);
          var v1 = Halogen_VDom_Util.diffWithKeyAndIxE(ps1, ps2, propToStrKey, onThese, onThis, onThat);
          return new Halogen_VDom_Machine.Step(Data_Unit.unit, patch(Halogen_VDom_Util.unsafeFreeze(v), v1), done(v1));
        };
      };

      var render = function render(ps1) {
        var v = Halogen_VDom_Util.newMutMap();
        var v1 = Halogen_VDom_Util.strMapWithIxE(ps1, propToStrKey, applyProp(v));
        return new Halogen_VDom_Machine.Step(Data_Unit.unit, patch(Halogen_VDom_Util.unsafeFreeze(v), v1), done(v1));
      };

      return render;
    };
  };

  exports["Attribute"] = Attribute;
  exports["Property"] = Property;
  exports["Handler"] = Handler;
  exports["Ref"] = Ref;
  exports["Created"] = Created;
  exports["Removed"] = Removed;
  exports["propFromString"] = propFromString;
  exports["propFromBoolean"] = propFromBoolean;
  exports["propFromInt"] = propFromInt;
  exports["propFromNumber"] = propFromNumber;
  exports["buildProp"] = buildProp;
  exports["functorProp"] = functorProp;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.VDom.Types"] = $PS["Halogen.VDom.Types"] || {};
  var exports = $PS["Halogen.VDom.Types"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];

  var ElemSpec = function () {
    function ElemSpec(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    ElemSpec.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new ElemSpec(value0, value1, value2);
        };
      };
    };

    return ElemSpec;
  }();

  var Text = function () {
    function Text(value0) {
      this.value0 = value0;
    }

    ;

    Text.create = function (value0) {
      return new Text(value0);
    };

    return Text;
  }();

  var Elem = function () {
    function Elem(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Elem.create = function (value0) {
      return function (value1) {
        return new Elem(value0, value1);
      };
    };

    return Elem;
  }();

  var Keyed = function () {
    function Keyed(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Keyed.create = function (value0) {
      return function (value1) {
        return new Keyed(value0, value1);
      };
    };

    return Keyed;
  }();

  var Widget = function () {
    function Widget(value0) {
      this.value0 = value0;
    }

    ;

    Widget.create = function (value0) {
      return new Widget(value0);
    };

    return Widget;
  }();

  var Grafted = function () {
    function Grafted(value0) {
      this.value0 = value0;
    }

    ;

    Grafted.create = function (value0) {
      return new Grafted(value0);
    };

    return Grafted;
  }();

  var Graft = function () {
    function Graft(value0, value1, value2) {
      this.value0 = value0;
      this.value1 = value1;
      this.value2 = value2;
    }

    ;

    Graft.create = function (value0) {
      return function (value1) {
        return function (value2) {
          return new Graft(value0, value1, value2);
        };
      };
    };

    return Graft;
  }();

  var unGraft = function unGraft(f) {
    return function ($90) {
      return f($90);
    };
  };

  var graft = Unsafe_Coerce.unsafeCoerce;
  var functorElemSpec = new Data_Functor.Functor(function (f) {
    return function (m) {
      return new ElemSpec(m.value0, m.value1, f(m.value2));
    };
  });
  var bifunctorGraft = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
      return unGraft(function (v) {
        return graft(new Graft(function ($92) {
          return f(v.value0($92));
        }, function ($93) {
          return g(v.value1($93));
        }, v.value2));
      });
    };
  });
  var bifunctorVDom = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
      return function (v) {
        if (v instanceof Text) {
          return new Text(v.value0);
        }

        ;

        if (v instanceof Grafted) {
          return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(f)(g)(v.value0));
        }

        ;
        return new Grafted(graft(new Graft(f, g, v)));
      };
    };
  });
  var runGraft = unGraft(function (v) {
    var go = function go(v2) {
      if (v2 instanceof Text) {
        return new Text(v2.value0);
      }

      ;

      if (v2 instanceof Elem) {
        return new Elem(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0), Data_Functor.map(Data_Functor.functorArray)(go)(v2.value1));
      }

      ;

      if (v2 instanceof Keyed) {
        return new Keyed(Data_Functor.map(functorElemSpec)(v.value0)(v2.value0), Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Data_Tuple.functorTuple)(go))(v2.value1));
      }

      ;

      if (v2 instanceof Widget) {
        return new Widget(v.value1(v2.value0));
      }

      ;

      if (v2 instanceof Grafted) {
        return new Grafted(Data_Bifunctor.bimap(bifunctorGraft)(v.value0)(v.value1)(v2.value0));
      }

      ;
      throw new Error("Failed pattern match at Halogen.VDom.Types (line 74, column 7 - line 74, column 27): " + [v2.constructor.name]);
    };

    return go(v.value2);
  });
  exports["Text"] = Text;
  exports["Elem"] = Elem;
  exports["Keyed"] = Keyed;
  exports["Widget"] = Widget;
  exports["Grafted"] = Grafted;
  exports["Graft"] = Graft;
  exports["graft"] = graft;
  exports["unGraft"] = unGraft;
  exports["runGraft"] = runGraft;
  exports["ElemSpec"] = ElemSpec;
  exports["bifunctorVDom"] = bifunctorVDom;
  exports["bifunctorGraft"] = bifunctorGraft;
  exports["functorElemSpec"] = functorElemSpec;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.HTML.Core"] = $PS["Halogen.HTML.Core"] || {};
  var exports = $PS["Halogen.HTML.Core"];
  var DOM_HTML_Indexed_ButtonType = $PS["DOM.HTML.Indexed.ButtonType"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var DOM_HTML_Indexed_StepValue = $PS["DOM.HTML.Indexed.StepValue"];
  var Data_Bifunctor = $PS["Data.Bifunctor"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_MediaType = $PS["Data.MediaType"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Halogen_Query_InputF = $PS["Halogen.Query.InputF"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];

  var HTML = function HTML(x) {
    return x;
  };

  var ClassName = function ClassName(x) {
    return x;
  };

  var IsProp = function IsProp(toPropValue) {
    this.toPropValue = toPropValue;
  };

  var toPropValue = function toPropValue(dict) {
    return dict.toPropValue;
  };

  var text = function text($27) {
    return HTML(Halogen_VDom_Types.Text.create($27));
  };

  var stringIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromString);
  var stepValueIsProp = new IsProp(function ($28) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_StepValue.renderStepValue($28));
  });

  var slot = function slot($29) {
    return HTML(Halogen_VDom_Types.Widget.create($29));
  };

  var ref = function ref(f) {
    return Halogen_VDom_DOM_Prop.Ref.create(function ($31) {
      return f(function (v) {
        if (v instanceof Halogen_VDom_DOM_Prop.Created) {
          return new Data_Maybe.Just(v.value0);
        }

        ;

        if (v instanceof Halogen_VDom_DOM_Prop.Removed) {
          return Data_Maybe.Nothing.value;
        }

        ;
        throw new Error("Failed pattern match at Halogen.HTML.Core (line 103, column 21 - line 105, column 23): " + [v.constructor.name]);
      }($31));
    });
  };

  var prop = function prop(dictIsProp) {
    return function (v) {
      return function ($32) {
        return Halogen_VDom_DOM_Prop.Property.create(v)(toPropValue(dictIsProp)($32));
      };
    };
  };

  var numberIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromNumber);
  var newtypeClassName = new Data_Newtype.Newtype(function (n) {
    return n;
  }, ClassName);
  var mediaTypeIsProp = new IsProp(function ($38) {
    return Halogen_VDom_DOM_Prop.propFromString(Data_Newtype.unwrap(Data_MediaType.newtypeMediaType)($38));
  });
  var intIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromInt);
  var inputTypeIsProp = new IsProp(function ($40) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_InputType.renderInputType($40));
  });
  var handler = Halogen_VDom_DOM_Prop.Handler.create;

  var element = function element(ns) {
    return function (name) {
      return function (props) {
        return function (children) {
          return new Halogen_VDom_Types.Elem(new Halogen_VDom_Types.ElemSpec(ns, name, props), children);
        };
      };
    };
  };

  var buttonTypeIsProp = new IsProp(function ($44) {
    return Halogen_VDom_DOM_Prop.propFromString(DOM_HTML_Indexed_ButtonType.renderButtonType($44));
  });
  var booleanIsProp = new IsProp(Halogen_VDom_DOM_Prop.propFromBoolean);
  var bifunctorHTML = new Data_Bifunctor.Bifunctor(function (f) {
    return function (g) {
      return function (v) {
        return Data_Bifunctor.bimap(Halogen_VDom_Types.bifunctorVDom)(Data_Functor.map(Data_Functor.functorArray)(Data_Functor.map(Halogen_VDom_DOM_Prop.functorProp)(Data_Functor.map(Halogen_Query_InputF.functorInputF)(g))))(f)(v);
      };
    };
  });

  var attr = function attr(ns) {
    return function (v) {
      return Halogen_VDom_DOM_Prop.Attribute.create(ns)(v);
    };
  };

  exports["HTML"] = HTML;
  exports["slot"] = slot;
  exports["text"] = text;
  exports["element"] = element;
  exports["prop"] = prop;
  exports["attr"] = attr;
  exports["handler"] = handler;
  exports["ref"] = ref;
  exports["IsProp"] = IsProp;
  exports["toPropValue"] = toPropValue;
  exports["ClassName"] = ClassName;
  exports["bifunctorHTML"] = bifunctorHTML;
  exports["stringIsProp"] = stringIsProp;
  exports["intIsProp"] = intIsProp;
  exports["numberIsProp"] = numberIsProp;
  exports["booleanIsProp"] = booleanIsProp;
  exports["mediaTypeIsProp"] = mediaTypeIsProp;
  exports["buttonTypeIsProp"] = buttonTypeIsProp;
  exports["inputTypeIsProp"] = inputTypeIsProp;
  exports["stepValueIsProp"] = stepValueIsProp;
  exports["newtypeClassName"] = newtypeClassName;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.HTML.Elements"] = $PS["Halogen.HTML.Elements"] || {};
  var exports = $PS["Halogen.HTML.Elements"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var element = Halogen_HTML_Core.element(Data_Maybe.Nothing.value);
  var em = element("em");
  var em_ = em([]);
  var footer = element("footer");
  var h1 = element("h1");
  var h1_ = h1([]);
  var h2 = element("h2");
  var h3 = element("h3");
  var h3_ = h3([]);
  var h4 = element("h4");
  var h4_ = h4([]);
  var header = element("header");
  var i = element("i");

  var img = function img(props) {
    return element("img")(props)([]);
  };

  var input = function input(props) {
    return element("input")(props)([]);
  };

  var label = element("label");
  var li = element("li");
  var li_ = li([]);
  var nav = element("nav");
  var ol = element("ol");
  var ol_ = ol([]);
  var p = element("p");
  var p_ = p([]);
  var span = element("span");
  var span_ = span([]);
  var style = element("style");
  var ul = element("ul");
  var ul_ = ul([]);
  var div = element("div");
  var div_ = div([]);
  var dialog = element("dialog");
  var button = element("button");
  var b = element("b");
  var b_ = b([]);
  var a = element("a");
  exports["element"] = element;
  exports["a"] = a;
  exports["b"] = b;
  exports["b_"] = b_;
  exports["button"] = button;
  exports["dialog"] = dialog;
  exports["div"] = div;
  exports["div_"] = div_;
  exports["em"] = em;
  exports["em_"] = em_;
  exports["footer"] = footer;
  exports["h1"] = h1;
  exports["h1_"] = h1_;
  exports["h2"] = h2;
  exports["h3"] = h3;
  exports["h3_"] = h3_;
  exports["h4"] = h4;
  exports["h4_"] = h4_;
  exports["header"] = header;
  exports["i"] = i;
  exports["img"] = img;
  exports["input"] = input;
  exports["label"] = label;
  exports["li"] = li;
  exports["li_"] = li_;
  exports["nav"] = nav;
  exports["ol"] = ol;
  exports["ol_"] = ol_;
  exports["p"] = p;
  exports["p_"] = p_;
  exports["span"] = span;
  exports["span_"] = span_;
  exports["style"] = style;
  exports["ul"] = ul;
  exports["ul_"] = ul_;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.HTML.Properties"] = $PS["Halogen.HTML.Properties"] || {};
  var exports = $PS["Halogen.HTML.Properties"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query_InputF = $PS["Halogen.Query.InputF"];

  var ref = function () {
    var go = function go(p) {
      return function (mel) {
        return new Data_Maybe.Just(new Halogen_Query_InputF.RefUpdate(p, mel, Data_Unit.unit));
      };
    };

    return function ($10) {
      return Halogen_HTML_Core.ref(go($10));
    };
  }();

  var prop = function prop(dictIsProp) {
    return Halogen_HTML_Core.prop(dictIsProp);
  };

  var src = prop(Halogen_HTML_Core.stringIsProp)("src");
  var step = prop(Halogen_HTML_Core.stepValueIsProp)("step");
  var tabIndex = prop(Halogen_HTML_Core.intIsProp)("tabIndex");

  var type_ = function type_(dictIsProp) {
    return prop(dictIsProp)("type");
  };

  var value = prop(Halogen_HTML_Core.stringIsProp)("value");
  var name = prop(Halogen_HTML_Core.stringIsProp)("name");
  var min = prop(Halogen_HTML_Core.numberIsProp)("min");
  var max = prop(Halogen_HTML_Core.numberIsProp)("max");
  var id_ = prop(Halogen_HTML_Core.stringIsProp)("id");
  var href = prop(Halogen_HTML_Core.stringIsProp)("href");
  var $$for = prop(Halogen_HTML_Core.stringIsProp)("htmlFor");
  var disabled = prop(Halogen_HTML_Core.booleanIsProp)("disabled");

  var classes = function classes($12) {
    return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_String_Common.joinWith(" ")(Data_Functor.map(Data_Functor.functorArray)(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName))($12)));
  };

  var class_ = function class_($13) {
    return prop(Halogen_HTML_Core.stringIsProp)("className")(Data_Newtype.unwrap(Halogen_HTML_Core.newtypeClassName)($13));
  };

  var checked = prop(Halogen_HTML_Core.booleanIsProp)("checked");
  var attr = Halogen_HTML_Core.attr(Data_Maybe.Nothing.value);
  exports["prop"] = prop;
  exports["attr"] = attr;
  exports["ref"] = ref;
  exports["class_"] = class_;
  exports["classes"] = classes;
  exports["for"] = $$for;
  exports["href"] = href;
  exports["id_"] = id_;
  exports["name"] = name;
  exports["src"] = src;
  exports["type_"] = type_;
  exports["value"] = value;
  exports["min"] = min;
  exports["max"] = max;
  exports["step"] = step;
  exports["disabled"] = disabled;
  exports["checked"] = checked;
  exports["tabIndex"] = tabIndex;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Badge"] = $PS["Halogen.MDL.Badge"] || {};
  var exports = $PS["Halogen.MDL.Badge"];
  var cl = {
    badge: "mdl-badge",
    badgeNoBackground: "mdl-badge--no-background",
    badgeOverlap: "mdl-badge--overlap"
  };
  var attr = {
    dataBadge: "data-badge"
  };
  exports["cl"] = cl;
  exports["attr"] = attr;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Cell"] = $PS["Halogen.MDL.Cell"] || {};
  var exports = $PS["Halogen.MDL.Cell"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var cl = {
    cell: "mdl-cell",
    cell1Col: "mdl-cell--1-col",
    cell2Col: "mdl-cell--2-col",
    cell3Col: "mdl-cell--3-col",
    cell4Col: "mdl-cell--4-col",
    cell5Col: "mdl-cell--5-col",
    cell6Col: "mdl-cell--6-col",
    cell7Col: "mdl-cell--7-col",
    cell8Col: "mdl-cell--8-col",
    cell9Col: "mdl-cell--9-col",
    cell10Col: "mdl-cell--10-col",
    cell11Col: "mdl-cell--11-col",
    cell12Col: "mdl-cell--12-col",
    cell1ColDesktop: "mdl-cell--1-col-desktop",
    cell2ColDesktop: "mdl-cell--2-col-desktop",
    cell3ColDesktop: "mdl-cell--3-col-desktop",
    cell4ColDesktop: "mdl-cell--4-col-desktop",
    cell5ColDesktop: "mdl-cell--5-col-desktop",
    cell6ColDesktop: "mdl-cell--6-col-desktop",
    cell7ColDesktop: "mdl-cell--7-col-desktop",
    cell8ColDesktop: "mdl-cell--8-col-desktop",
    cell9ColDesktop: "mdl-cell--9-col-desktop",
    cell10ColDesktop: "mdl-cell--10-col-desktop",
    cell11ColDesktop: "mdl-cell--11-col-desktop",
    cell12ColDesktop: "mdl-cell--12-col-desktop",
    cell1ColTablet: "mdl-cell--1-col-tablet",
    cell2ColTablet: "mdl-cell--2-col-tablet",
    cell3ColTablet: "mdl-cell--3-col-tablet",
    cell4ColTablet: "mdl-cell--4-col-tablet",
    cell5ColTablet: "mdl-cell--5-col-tablet",
    cell6ColTablet: "mdl-cell--6-col-tablet",
    cell7ColTablet: "mdl-cell--7-col-tablet",
    cell8ColTablet: "mdl-cell--8-col-tablet",
    cell9ColTablet: "mdl-cell--9-col-tablet",
    cell10ColTablet: "mdl-cell--10-col-tablet",
    cell11ColTablet: "mdl-cell--11-col-tablet",
    cell12ColTablet: "mdl-cell--12-col-tablet",
    cell1ColPhone: "mdl-cell--1-col-phone",
    cell2ColPhone: "mdl-cell--2-col-phone",
    cell3ColPhone: "mdl-cell--3-col-phone",
    cell4ColPhone: "mdl-cell--4-col-phone",
    cell5ColPhone: "mdl-cell--5-col-phone",
    cell6ColPhone: "mdl-cell--6-col-phone",
    cell7ColPhone: "mdl-cell--7-col-phone",
    cell8ColPhone: "mdl-cell--8-col-phone",
    cell9ColPhone: "mdl-cell--9-col-phone",
    cell10ColPhone: "mdl-cell--10-col-phone",
    cell11ColPhone: "mdl-cell--11-col-phone",
    cell12ColPhone: "mdl-cell--12-col-phone",
    cell1Offset: "mdl-cell--1-offset",
    cell2Offset: "mdl-cell--2-offset",
    cell3Offset: "mdl-cell--3-offset",
    cell4Offset: "mdl-cell--4-offset",
    cell5Offset: "mdl-cell--5-offset",
    cell6Offset: "mdl-cell--6-offset",
    cell7Offset: "mdl-cell--7-offset",
    cell8Offset: "mdl-cell--8-offset",
    cell9Offset: "mdl-cell--9-offset",
    cell10Offset: "mdl-cell--10-offset",
    cell11Offset: "mdl-cell--11-offset",
    cell12Offset: "mdl-cell--12-offset",
    cell1OffsetDesktop: "mdl-cell--1-offset-desktop",
    cell2OffsetDesktop: "mdl-cell--2-offset-desktop",
    cell3OffsetDesktop: "mdl-cell--3-offset-desktop",
    cell4OffsetDesktop: "mdl-cell--4-offset-desktop",
    cell5OffsetDesktop: "mdl-cell--5-offset-desktop",
    cell6OffsetDesktop: "mdl-cell--6-offset-desktop",
    cell7OffsetDesktop: "mdl-cell--7-offset-desktop",
    cell8OffsetDesktop: "mdl-cell--8-offset-desktop",
    cell9OffsetDesktop: "mdl-cell--9-offset-desktop",
    cell10OffsetDesktop: "mdl-cell--10-offset-desktop",
    cell11OffsetDesktop: "mdl-cell--11-offset-desktop",
    cell12OffsetDesktop: "mdl-cell--12-offset-desktop",
    cell1OffsetTablet: "mdl-cell--1-offset-tablet",
    cell2OffsetTablet: "mdl-cell--2-offset-tablet",
    cell3OffsetTablet: "mdl-cell--3-offset-tablet",
    cell4OffsetTablet: "mdl-cell--4-offset-tablet",
    cell5OffsetTablet: "mdl-cell--5-offset-tablet",
    cell6OffsetTablet: "mdl-cell--6-offset-tablet",
    cell7OffsetTablet: "mdl-cell--7-offset-tablet",
    cell8OffsetTablet: "mdl-cell--8-offset-tablet",
    cell9OffsetTablet: "mdl-cell--9-offset-tablet",
    cell10OffsetTablet: "mdl-cell--10-offset-tablet",
    cell11OffsetTablet: "mdl-cell--11-offset-tablet",
    cell12OffsetTablet: "mdl-cell--12-offset-tablet",
    cell1OffsetPhone: "mdl-cell--1-offset-phone",
    cell2OffsetPhone: "mdl-cell--2-offset-phone",
    cell3OffsetPhone: "mdl-cell--3-offset-phone",
    cell4OffsetPhone: "mdl-cell--4-offset-phone",
    cell5OffsetPhone: "mdl-cell--5-offset-phone",
    cell6OffsetPhone: "mdl-cell--6-offset-phone",
    cell7OffsetPhone: "mdl-cell--7-offset-phone",
    cell8OffsetPhone: "mdl-cell--8-offset-phone",
    cell9OffsetPhone: "mdl-cell--9-offset-phone",
    cell10OffsetPhone: "mdl-cell--10-offset-phone",
    cell11OffsetPhone: "mdl-cell--11-offset-phone",
    cell12OffsetPhone: "mdl-cell--12-offset-phone",
    cellOrder1: "mdl-cell--order-1",
    cellOrder2: "mdl-cell--order-2",
    cellOrder3: "mdl-cell--order-3",
    cellOrder4: "mdl-cell--order-4",
    cellOrder5: "mdl-cell--order-5",
    cellOrder6: "mdl-cell--order-6",
    cellOrder7: "mdl-cell--order-7",
    cellOrder8: "mdl-cell--order-8",
    cellOrder9: "mdl-cell--order-9",
    cellOrder10: "mdl-cell--order-10",
    cellOrder11: "mdl-cell--order-11",
    cellOrder12: "mdl-cell--order-12",
    cellOrder1Desktop: "mdl-cell--order-1-desktop",
    cellOrder2Desktop: "mdl-cell--order-2-desktop",
    cellOrder3Desktop: "mdl-cell--order-3-desktop",
    cellOrder4Desktop: "mdl-cell--order-4-desktop",
    cellOrder5Desktop: "mdl-cell--order-5-desktop",
    cellOrder6Desktop: "mdl-cell--order-6-desktop",
    cellOrder7Desktop: "mdl-cell--order-7-desktop",
    cellOrder8Desktop: "mdl-cell--order-8-desktop",
    cellOrder9Desktop: "mdl-cell--order-9-desktop",
    cellOrder10Desktop: "mdl-cell--order-10-desktop",
    cellOrder11Desktop: "mdl-cell--order-11-desktop",
    cellOrder12Desktop: "mdl-cell--order-12-desktop",
    cellOrder1Tablet: "mdl-cell--order-1-tablet",
    cellOrder2Tablet: "mdl-cell--order-2-tablet",
    cellOrder3Tablet: "mdl-cell--order-3-tablet",
    cellOrder4Tablet: "mdl-cell--order-4-tablet",
    cellOrder5Tablet: "mdl-cell--order-5-tablet",
    cellOrder6Tablet: "mdl-cell--order-6-tablet",
    cellOrder7Tablet: "mdl-cell--order-7-tablet",
    cellOrder8Tablet: "mdl-cell--order-8-tablet",
    cellOrder9Tablet: "mdl-cell--order-9-tablet",
    cellOrder10Tablet: "mdl-cell--order-10-tablet",
    cellOrder11Tablet: "mdl-cell--order-11-tablet",
    cellOrder12Tablet: "mdl-cell--order-12-tablet",
    cellOrder1Phone: "mdl-cell--order-1-phone",
    cellOrder2Phone: "mdl-cell--order-2-phone",
    cellOrder3Phone: "mdl-cell--order-3-phone",
    cellOrder4Phone: "mdl-cell--order-4-phone",
    cellOrder5Phone: "mdl-cell--order-5-phone",
    cellOrder6Phone: "mdl-cell--order-6-phone",
    cellOrder7Phone: "mdl-cell--order-7-phone",
    cellOrder8Phone: "mdl-cell--order-8-phone",
    cellOrder9Phone: "mdl-cell--order-9-phone",
    cellOrder10Phone: "mdl-cell--order-10-phone",
    cellOrder11Phone: "mdl-cell--order-11-phone",
    cellOrder12Phone: "mdl-cell--order-12-phone",
    cellHideDesktop: "mdl-cell--hide-desktop",
    cellHideTablet: "mdl-cell--hide-tablet",
    cellHidePhone: "mdl-cell--hide-phone",
    cellStretch: "mdl-cell--stretch",
    cellTop: "mdl-cell--top",
    cellMiddle: "mdl-cell--middle",
    cellBottom: "mdl-cell--bottom"
  };
  var el = {
    cell1Col_: function cell1Col_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([cl.cell, cl.cell1Col])])(children);
    },
    cell2Col_: function cell2Col_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([cl.cell, cl.cell2Col])])(children);
    },
    cell3Col_: function cell3Col_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([cl.cell, cl.cell3Col])])(children);
    },
    cell4Col_: function cell4Col_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([cl.cell, cl.cell4Col])])(children);
    },
    cell5Col_: function cell5Col_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([cl.cell, cl.cell5Col])])(children);
    },
    cell6Col_: function cell6Col_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([cl.cell, cl.cell6Col])])(children);
    },
    cell7Col_: function cell7Col_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([cl.cell, cl.cell7Col])])(children);
    },
    cell8Col_: function cell8Col_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([cl.cell, cl.cell8Col])])(children);
    },
    cell9Col_: function cell9Col_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([cl.cell, cl.cell9Col])])(children);
    },
    cell10Col_: function cell10Col_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([cl.cell, cl.cell10Col])])(children);
    },
    cell11Col_: function cell11Col_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([cl.cell, cl.cell11Col])])(children);
    },
    cell12Col_: function cell12Col_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([cl.cell, cl.cell12Col])])(children);
    }
  };
  exports["cl"] = cl;
  exports["el"] = el;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Grid"] = $PS["Halogen.MDL.Grid"] || {};
  var exports = $PS["Halogen.MDL.Grid"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var cl = {
    grid: "mdl-grid",
    gridNoSpacing: "mdl-grid--no-spacing"
  };
  var el = {
    grid_: function grid_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(cl.grid)])(children);
    }
  };
  exports["cl"] = cl;
  exports["el"] = el;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.MaterialIcon"] = $PS["Halogen.MDL.MaterialIcon"] || {};
  var exports = $PS["Halogen.MDL.MaterialIcon"];
  var str = {
    "_3dRotation": "3d_rotation",
    accessibility: "accessibility",
    accessibile: "accessibile",
    accountBalance: "accoun_balance",
    accountBalanceWallet: "accoun_balance_wallet",
    accountBox: "account_box",
    accountCircle: "account_circle",
    addShoppingCart: "add_shopping_cart",
    alarm: "alarm",
    cancel: "cancel",
    moreVert: "more_vert",
    person: "person",
    share: "share",
    star: "star"
  };
  var cl = {
    materialIcons: "material-icons"
  };
  exports["cl"] = cl;
  exports["str"] = str;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect.Aff.Class"] = $PS["Effect.Aff.Class"] || {};
  var exports = $PS["Effect.Aff.Class"];
  var Control_Category = $PS["Control.Category"];
  var Effect_Aff = $PS["Effect.Aff"];

  var MonadAff = function MonadAff(MonadEffect0, liftAff) {
    this.MonadEffect0 = MonadEffect0;
    this.liftAff = liftAff;
  };

  var monadAffAff = new MonadAff(function () {
    return Effect_Aff.monadEffectAff;
  }, Control_Category.identity(Control_Category.categoryFn));

  var liftAff = function liftAff(dict) {
    return dict.liftAff;
  };

  exports["liftAff"] = liftAff;
  exports["MonadAff"] = MonadAff;
  exports["monadAffAff"] = monadAffAff;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.Query.HalogenM"] = $PS["Halogen.Query.HalogenM"] || {};
  var exports = $PS["Halogen.Query.HalogenM"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Control_Monad = $PS["Control.Monad"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Coyoneda = $PS["Data.Coyoneda"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];

  var HalogenM = function HalogenM(x) {
    return x;
  };

  var State = function () {
    function State(value0) {
      this.value0 = value0;
    }

    ;

    State.create = function (value0) {
      return new State(value0);
    };

    return State;
  }();

  var Subscribe = function () {
    function Subscribe(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Subscribe.create = function (value0) {
      return function (value1) {
        return new Subscribe(value0, value1);
      };
    };

    return Subscribe;
  }();

  var Lift = function () {
    function Lift(value0) {
      this.value0 = value0;
    }

    ;

    Lift.create = function (value0) {
      return new Lift(value0);
    };

    return Lift;
  }();

  var Halt = function () {
    function Halt(value0) {
      this.value0 = value0;
    }

    ;

    Halt.create = function (value0) {
      return new Halt(value0);
    };

    return Halt;
  }();

  var GetSlots = function () {
    function GetSlots(value0) {
      this.value0 = value0;
    }

    ;

    GetSlots.create = function (value0) {
      return new GetSlots(value0);
    };

    return GetSlots;
  }();

  var CheckSlot = function () {
    function CheckSlot(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    CheckSlot.create = function (value0) {
      return function (value1) {
        return new CheckSlot(value0, value1);
      };
    };

    return CheckSlot;
  }();

  var ChildQuery = function () {
    function ChildQuery(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    ChildQuery.create = function (value0) {
      return function (value1) {
        return new ChildQuery(value0, value1);
      };
    };

    return ChildQuery;
  }();

  var Raise = function () {
    function Raise(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    Raise.create = function (value0) {
      return function (value1) {
        return new Raise(value0, value1);
      };
    };

    return Raise;
  }();

  var Par = function () {
    function Par(value0) {
      this.value0 = value0;
    }

    ;

    Par.create = function (value0) {
      return new Par(value0);
    };

    return Par;
  }();

  var Fork = function () {
    function Fork(value0) {
      this.value0 = value0;
    }

    ;

    Fork.create = function (value0) {
      return new Fork(value0);
    };

    return Fork;
  }();

  var GetRef = function () {
    function GetRef(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    GetRef.create = function (value0) {
      return function (value1) {
        return new GetRef(value0, value1);
      };
    };

    return GetRef;
  }();

  var raise = function raise(o) {
    return HalogenM(Control_Monad_Free.liftF(new Raise(o, Data_Unit.unit)));
  };

  var mkQuery = function mkQuery(dictEq) {
    return function (p) {
      return function ($176) {
        return HalogenM(Control_Monad_Free.liftF(ChildQuery.create(p)(Data_Coyoneda.coyoneda(Control_Category.identity(Control_Category.categoryFn))($176))));
      };
    };
  };

  var getRef = function getRef(p) {
    return HalogenM(Control_Monad_Free.liftF(new GetRef(p, Control_Category.identity(Control_Category.categoryFn))));
  };

  var functorHalogenM = new Data_Functor.Functor(function (f) {
    return function (v) {
      return Data_Functor.map(Control_Monad_Free.freeFunctor)(f)(v);
    };
  });

  var checkSlot = function checkSlot(p) {
    return HalogenM(Control_Monad_Free.liftF(new CheckSlot(p, Control_Category.identity(Control_Category.categoryFn))));
  };

  var applyHalogenM = new Control_Apply.Apply(function () {
    return functorHalogenM;
  }, function (v) {
    return function (v1) {
      return Control_Apply.apply(Control_Monad_Free.freeApply)(v)(v1);
    };
  });
  var bindHalogenM = new Control_Bind.Bind(function () {
    return applyHalogenM;
  }, function (v) {
    return function (f) {
      return Control_Bind.bind(Control_Monad_Free.freeBind)(v)(function (x) {
        var v1 = f(x);
        return v1;
      });
    };
  });
  var applicativeHalogenM = new Control_Applicative.Applicative(function () {
    return applyHalogenM;
  }, function (a) {
    return Control_Applicative.pure(Control_Monad_Free.freeApplicative)(a);
  });
  var monadHalogenM = new Control_Monad.Monad(function () {
    return applicativeHalogenM;
  }, function () {
    return bindHalogenM;
  });

  var monadEffectHalogenM = function monadEffectHalogenM(dictMonadEffect) {
    return new Effect_Class.MonadEffect(function () {
      return monadHalogenM;
    }, function (eff) {
      return HalogenM(Control_Monad_Free.liftF(Lift.create(Effect_Class.liftEffect(dictMonadEffect)(eff))));
    });
  };

  var monadAffHalogenM = function monadAffHalogenM(dictMonadAff) {
    return new Effect_Aff_Class.MonadAff(function () {
      return monadEffectHalogenM(dictMonadAff.MonadEffect0());
    }, function (aff) {
      return HalogenM(Control_Monad_Free.liftF(Lift.create(Effect_Aff_Class.liftAff(dictMonadAff)(aff))));
    });
  };

  var monadStateHalogenM = new Control_Monad_State_Class.MonadState(function () {
    return monadHalogenM;
  }, function ($180) {
    return HalogenM(Control_Monad_Free.liftF(State.create($180)));
  });
  exports["State"] = State;
  exports["Subscribe"] = Subscribe;
  exports["Lift"] = Lift;
  exports["Halt"] = Halt;
  exports["GetSlots"] = GetSlots;
  exports["CheckSlot"] = CheckSlot;
  exports["ChildQuery"] = ChildQuery;
  exports["Raise"] = Raise;
  exports["Par"] = Par;
  exports["Fork"] = Fork;
  exports["GetRef"] = GetRef;
  exports["HalogenM"] = HalogenM;
  exports["mkQuery"] = mkQuery;
  exports["checkSlot"] = checkSlot;
  exports["getRef"] = getRef;
  exports["raise"] = raise;
  exports["functorHalogenM"] = functorHalogenM;
  exports["applyHalogenM"] = applyHalogenM;
  exports["applicativeHalogenM"] = applicativeHalogenM;
  exports["bindHalogenM"] = bindHalogenM;
  exports["monadHalogenM"] = monadHalogenM;
  exports["monadEffectHalogenM"] = monadEffectHalogenM;
  exports["monadAffHalogenM"] = monadAffHalogenM;
  exports["monadStateHalogenM"] = monadStateHalogenM;
})(PS);

(function (exports) {
  "use strict";

  exports._read = function (nothing, just, value) {
    var tag = Object.prototype.toString.call(value);

    if (tag.indexOf("[object HTML") === 0 && tag.indexOf("Element]") === tag.length - 8) {
      return just(value);
    } else {
      return nothing;
    }
  };
})(PS["Web.HTML.HTMLElement"] = PS["Web.HTML.HTMLElement"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Web.HTML.HTMLElement"] = $PS["Web.HTML.HTMLElement"] || {};
  var exports = $PS["Web.HTML.HTMLElement"];
  var $foreign = $PS["Web.HTML.HTMLElement"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var toNode = Unsafe_Coerce.unsafeCoerce;

  var fromElement = function fromElement(x) {
    return $foreign["_read"](Data_Maybe.Nothing.value, Data_Maybe.Just.create, x);
  };

  exports["fromElement"] = fromElement;
  exports["toNode"] = toNode;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.Query"] = $PS["Halogen.Query"] || {};
  var exports = $PS["Halogen.Query"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];

  var query = function query(dictEq) {
    return function (p) {
      return function (q) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.checkSlot(p))(function (v) {
          if (v) {
            return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(Data_Maybe.Just.create)(Halogen_Query_HalogenM.mkQuery(dictEq)(p)(q));
          }

          ;
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Maybe.Nothing.value);
        });
      };
    };
  };

  var getHTMLElementRef = function getHTMLElementRef($10) {
    return Data_Functor.map(Halogen_Query_HalogenM.functorHalogenM)(function (v) {
      return Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(v);
    })(Halogen_Query_HalogenM.getRef($10));
  };

  var action = function action(act) {
    return act(Data_Unit.unit);
  };

  exports["action"] = action;
  exports["query"] = query;
  exports["getHTMLElementRef"] = getHTMLElementRef;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoBadges"] = $PS["DemoBadges"] || {};
  var exports = $PS["DemoBadges"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL_Badge = $PS["Halogen.MDL.Badge"];
  var Halogen_MDL_Cell = $PS["Halogen.MDL.Cell"];
  var Halogen_MDL_Grid = $PS["Halogen.MDL.Grid"];
  var Halogen_MDL_MaterialIcon = $PS["Halogen.MDL.MaterialIcon"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var init = function init(state) {
    return new Initialize(state);
  };

  var demoBadges = function () {
    var renderDemoSection = function renderDemoSection(body) {
      return Halogen_MDL_Cell.el.cell3Col_(body);
    };

    var renderDemoHeader = function renderDemoHeader(name) {
      return Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h3_([Halogen_HTML_Core.text(name)])]);
    };

    var renderBadgesHeader = Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Badges")])]);

    var render = function render(state) {
      return Halogen_MDL_Grid.el.grid_([renderBadgesHeader, renderDemoHeader("Badges on icons (overlap)"), renderDemoSection([Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Badge.cl.badge, Halogen_MDL_Badge.cl.badgeOverlap, Halogen_MDL_MaterialIcon.cl.materialIcons]), Halogen_HTML_Properties.attr(Halogen_MDL_Badge.attr.dataBadge)("1")])([Halogen_HTML_Core.text(Halogen_MDL_MaterialIcon.str.accountBox)])]), renderDemoSection([Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Badge.cl.badge, Halogen_MDL_Badge.cl.badgeOverlap, Halogen_MDL_MaterialIcon.cl.materialIcons]), Halogen_HTML_Properties.attr(Halogen_MDL_Badge.attr.dataBadge)("\u2665")])([Halogen_HTML_Core.text(Halogen_MDL_MaterialIcon.str.accountBox)])]), renderDemoHeader("Badges on icons (overlap, no background)"), renderDemoSection([Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Badge.cl.badge, Halogen_MDL_Badge.cl.badgeOverlap, Halogen_MDL_Badge.cl.badgeNoBackground, Halogen_MDL_MaterialIcon.cl.materialIcons]), Halogen_HTML_Properties.attr(Halogen_MDL_Badge.attr.dataBadge)("1")])([Halogen_HTML_Core.text(Halogen_MDL_MaterialIcon.str.accountBox)])]), renderDemoSection([Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Badge.cl.badge, Halogen_MDL_Badge.cl.badgeOverlap, Halogen_MDL_Badge.cl.badgeNoBackground, Halogen_MDL_MaterialIcon.cl.materialIcons]), Halogen_HTML_Properties.attr(Halogen_MDL_Badge.attr.dataBadge)("\u2665")])([Halogen_HTML_Core.text(Halogen_MDL_MaterialIcon.str.accountBox)])]), renderDemoHeader("Badges on text (no overlap)"), renderDemoSection([Halogen_HTML_Elements.span([Halogen_HTML_Properties.classes([Halogen_MDL_Badge.cl.badge]), Halogen_HTML_Properties.attr(Halogen_MDL_Badge.attr.dataBadge)("1")])([Halogen_HTML_Core.text("Inbox")])]), renderDemoSection([Halogen_HTML_Elements.span([Halogen_HTML_Properties.classes([Halogen_MDL_Badge.cl.badge]), Halogen_HTML_Properties.attr(Halogen_MDL_Badge.attr.dataBadge)("\u2665")])([Halogen_HTML_Core.text("Mood")])]), renderDemoHeader("Badges on text (no overlap, no background)"), renderDemoSection([Halogen_HTML_Elements.span([Halogen_HTML_Properties.classes([Halogen_MDL_Badge.cl.badge, Halogen_MDL_Badge.cl.badgeNoBackground]), Halogen_HTML_Properties.attr(Halogen_MDL_Badge.attr.dataBadge)("1")])([Halogen_HTML_Core.text("Inbox")])]), renderDemoSection([Halogen_HTML_Elements.span([Halogen_HTML_Properties.classes([Halogen_MDL_Badge.cl.badge, Halogen_MDL_Badge.cl.badgeNoBackground]), Halogen_HTML_Properties.attr(Halogen_MDL_Badge.attr.dataBadge)("\u2665")])([Halogen_HTML_Core.text("Mood")])])]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;
      throw new Error("Failed pattern match at DemoBadges (line 134, column 10 - line 139, column 12): " + [v.constructor.name]);
    };

    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["Initialize"] = Initialize;
  exports["init"] = init;
  exports["demoBadges"] = demoBadges;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.Data.Prism"] = $PS["Halogen.Data.Prism"] || {};
  var exports = $PS["Halogen.Data.Prism"];
  var Data_Either_Nested = $PS["Data.Either.Nested"];
  var Data_Functor_Coproduct_Nested = $PS["Data.Functor.Coproduct.Nested"];
  var Data_Lens_Prism = $PS["Data.Lens.Prism"];
  var Data_Maybe = $PS["Data.Maybe"];

  var _Either9 = function _Either9(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in9)(Data_Either_Nested.at9(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Either8 = function _Either8(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in8)(Data_Either_Nested.at8(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Either7 = function _Either7(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in7)(Data_Either_Nested.at7(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Either6 = function _Either6(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in6)(Data_Either_Nested.at6(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Either5 = function _Either5(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in5)(Data_Either_Nested.at5(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Either4 = function _Either4(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in4)(Data_Either_Nested.at4(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Either3 = function _Either3(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in3)(Data_Either_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Either2 = function _Either2(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in2)(Data_Either_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Either10 = function _Either10(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in10)(Data_Either_Nested.at10(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Either1 = function _Either1(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Either_Nested.in1)(Data_Either_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Coproduct9 = function _Coproduct9(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in9)(Data_Functor_Coproduct_Nested.at9(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Coproduct8 = function _Coproduct8(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in8)(Data_Functor_Coproduct_Nested.at8(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Coproduct7 = function _Coproduct7(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in7)(Data_Functor_Coproduct_Nested.at7(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Coproduct6 = function _Coproduct6(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in6)(Data_Functor_Coproduct_Nested.at6(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Coproduct5 = function _Coproduct5(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in5)(Data_Functor_Coproduct_Nested.at5(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Coproduct4 = function _Coproduct4(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in4)(Data_Functor_Coproduct_Nested.at4(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Coproduct3 = function _Coproduct3(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in3)(Data_Functor_Coproduct_Nested.at3(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Coproduct2 = function _Coproduct2(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in2)(Data_Functor_Coproduct_Nested.at2(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Coproduct10 = function _Coproduct10(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in10)(Data_Functor_Coproduct_Nested.at10(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  var _Coproduct1 = function _Coproduct1(dictChoice) {
    return Data_Lens_Prism["prism'"](Data_Functor_Coproduct_Nested.in1)(Data_Functor_Coproduct_Nested.at1(Data_Maybe.Nothing.value)(Data_Maybe.Just.create))(dictChoice);
  };

  exports["_Either1"] = _Either1;
  exports["_Coproduct1"] = _Coproduct1;
  exports["_Either2"] = _Either2;
  exports["_Coproduct2"] = _Coproduct2;
  exports["_Either3"] = _Either3;
  exports["_Coproduct3"] = _Coproduct3;
  exports["_Either4"] = _Either4;
  exports["_Coproduct4"] = _Coproduct4;
  exports["_Either5"] = _Either5;
  exports["_Coproduct5"] = _Coproduct5;
  exports["_Either6"] = _Either6;
  exports["_Coproduct6"] = _Coproduct6;
  exports["_Either7"] = _Either7;
  exports["_Coproduct7"] = _Coproduct7;
  exports["_Either8"] = _Either8;
  exports["_Coproduct8"] = _Coproduct8;
  exports["_Either9"] = _Either9;
  exports["_Coproduct9"] = _Coproduct9;
  exports["_Either10"] = _Either10;
  exports["_Coproduct10"] = _Coproduct10;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.Component.ChildPath"] = $PS["Halogen.Component.ChildPath"] || {};
  var exports = $PS["Halogen.Component.ChildPath"];
  var Data_Lens_Fold = $PS["Data.Lens.Fold"];
  var Data_Lens_Internal_Forget = $PS["Data.Lens.Internal.Forget"];
  var Data_Lens_Internal_Tagged = $PS["Data.Lens.Internal.Tagged"];
  var Data_Lens_Prism = $PS["Data.Lens.Prism"];
  var Data_Lens_Prism_Coproduct = $PS["Data.Lens.Prism.Coproduct"];
  var Data_Lens_Prism_Either = $PS["Data.Lens.Prism.Either"];
  var Data_Maybe_First = $PS["Data.Maybe.First"];
  var Halogen_Data_Prism = $PS["Halogen.Data.Prism"];

  var ChildPath = function () {
    function ChildPath(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    ChildPath.create = function (value0) {
      return function (value1) {
        return new ChildPath(value0, value1);
      };
    };

    return ChildPath;
  }();

  var prjQuery = function prjQuery(v) {
    return Data_Lens_Fold.preview(v.value0(Data_Lens_Internal_Forget.choiceForget(Data_Maybe_First.monoidFirst)));
  };

  var injSlot = function injSlot(v) {
    return Data_Lens_Prism.review(v.value1(Data_Lens_Internal_Tagged.taggedChoice));
  };

  var injQuery = function injQuery(v) {
    return Data_Lens_Prism.review(v.value0(Data_Lens_Internal_Tagged.taggedChoice));
  };

  var cpR = new ChildPath(function (dictChoice) {
    return Data_Lens_Prism_Coproduct["_Right"](dictChoice);
  }, function (dictChoice) {
    return Data_Lens_Prism_Either["_Right"](dictChoice);
  });
  var cpL = new ChildPath(function (dictChoice) {
    return Data_Lens_Prism_Coproduct["_Left"](dictChoice);
  }, function (dictChoice) {
    return Data_Lens_Prism_Either["_Left"](dictChoice);
  });
  var cp9 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct9"](dictChoice);
  }, function (dictChoice) {
    return Halogen_Data_Prism["_Either9"](dictChoice);
  });
  var cp8 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct8"](dictChoice);
  }, function (dictChoice) {
    return Halogen_Data_Prism["_Either8"](dictChoice);
  });
  var cp7 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct7"](dictChoice);
  }, function (dictChoice) {
    return Halogen_Data_Prism["_Either7"](dictChoice);
  });
  var cp6 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct6"](dictChoice);
  }, function (dictChoice) {
    return Halogen_Data_Prism["_Either6"](dictChoice);
  });
  var cp5 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct5"](dictChoice);
  }, function (dictChoice) {
    return Halogen_Data_Prism["_Either5"](dictChoice);
  });
  var cp4 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct4"](dictChoice);
  }, function (dictChoice) {
    return Halogen_Data_Prism["_Either4"](dictChoice);
  });
  var cp3 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct3"](dictChoice);
  }, function (dictChoice) {
    return Halogen_Data_Prism["_Either3"](dictChoice);
  });
  var cp2 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct2"](dictChoice);
  }, function (dictChoice) {
    return Halogen_Data_Prism["_Either2"](dictChoice);
  });
  var cp10 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct10"](dictChoice);
  }, function (dictChoice) {
    return Halogen_Data_Prism["_Either10"](dictChoice);
  });
  var cp1 = new ChildPath(function (dictChoice) {
    return Halogen_Data_Prism["_Coproduct1"](dictChoice);
  }, function (dictChoice) {
    return Halogen_Data_Prism["_Either1"](dictChoice);
  });

  var compose = function compose(v) {
    return function (v1) {
      return new ChildPath(function (dictChoice) {
        return function ($52) {
          return v.value0(dictChoice)(v1.value0(dictChoice)($52));
        };
      }, function (dictChoice) {
        return function ($53) {
          return v.value1(dictChoice)(v1.value1(dictChoice)($53));
        };
      });
    };
  };

  exports["ChildPath"] = ChildPath;
  exports["compose"] = compose;
  exports["cp1"] = cp1;
  exports["cp10"] = cp10;
  exports["cp2"] = cp2;
  exports["cp3"] = cp3;
  exports["cp4"] = cp4;
  exports["cp5"] = cp5;
  exports["cp6"] = cp6;
  exports["cp7"] = cp7;
  exports["cp8"] = cp8;
  exports["cp9"] = cp9;
  exports["cpL"] = cpL;
  exports["cpR"] = cpR;
  exports["injQuery"] = injQuery;
  exports["injSlot"] = injSlot;
  exports["prjQuery"] = prjQuery;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.HTML"] = $PS["Halogen.HTML"] || {};
  var exports = $PS["Halogen.HTML"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_Component_ChildPath = $PS["Halogen.Component.ChildPath"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];

  var slot$prime = function slot$prime(i) {
    return function (p) {
      return function (component) {
        return function (input) {
          return function (outputQuery) {
            var pq = Halogen_Component_ChildPath.prjQuery(i);

            var f = function f($2) {
              return Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Component_ChildPath.injQuery(i))(Halogen_Component.unComponent(function (v) {
                return v.receiver;
              })(component)($2));
            };

            return Halogen_HTML_Core.slot(Halogen_Component.mkComponentSlot(Halogen_Component_ChildPath.injSlot(i)(p))(component)(input)(f)(outputQuery)(pq));
          };
        };
      };
    };
  };

  var slot = function slot(p) {
    return function (component) {
      return function (input) {
        return function (outputQuery) {
          var f = Halogen_Component.unComponent(function (v) {
            return v.receiver;
          })(component);
          return Halogen_HTML_Core.slot(Halogen_Component.mkComponentSlot(p)(component)(input)(f)(outputQuery)(Data_Maybe.Just.create));
        };
      };
    };
  };

  exports["slot"] = slot;
  exports["slot'"] = slot$prime;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.HTML.CSS"] = $PS["Halogen.HTML.CSS"] || {};
  var exports = $PS["Halogen.HTML.CSS"];
  var CSS_Render = $PS["CSS.Render"];
  var CSS_Stylesheet = $PS["CSS.Stylesheet"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Monoid = $PS["Data.Monoid"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Foreign_Object = $PS["Foreign.Object"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];

  var stylesheet = function stylesheet(css) {
    var content = Data_Maybe.fromMaybe("")(CSS_Render.renderedSheet(CSS_Render.render(css)));
    return Halogen_HTML_Elements.style([Halogen_HTML_Properties.type_(Halogen_HTML_Core.mediaTypeIsProp)("text/css")])([Halogen_HTML_Core.text(content)]);
  };

  var style = function () {
    var toString = function toString($4) {
      return Data_String_Common.joinWith("; ")(Foreign_Object.foldMap(Data_Monoid.monoidArray)(function (key) {
        return function (val) {
          return [key + (": " + val)];
        };
      })($4));
    };

    var rights = Data_Array.concatMap(Data_Foldable.foldMap(Data_Either.foldableEither)(Data_Monoid.monoidArray)(Data_Array.singleton));

    var property = function property(v) {
      if (v instanceof CSS_Stylesheet.Property) {
        return new Data_Maybe.Just(new Data_Tuple.Tuple(v.value0, v.value1));
      }

      ;
      return Data_Maybe.Nothing.value;
    };

    var rules = function rules(rs) {
      var properties = Control_Bind.bind(Control_Bind.bindArray)(Data_Array.mapMaybe(property)(rs))(function ($5) {
        return rights(CSS_Render.collect($5));
      });
      return Foreign_Object.fromFoldable(Data_Foldable.foldableArray)(properties);
    };

    return function ($6) {
      return Halogen_HTML_Properties.attr("style")(toString(rules(CSS_Stylesheet.runS($6))));
    };
  }();

  exports["style"] = style;
  exports["stylesheet"] = stylesheet;
})(PS);

(function (exports) {
  "use strict";

  exports.unsafeReadPropImpl = function (f, s, key, value) {
    return value == null ? f : s(value[key]);
  };
})(PS["Foreign.Index"] = PS["Foreign.Index"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Foreign.Index"] = $PS["Foreign.Index"] || {};
  var exports = $PS["Foreign.Index"];
  var $foreign = $PS["Foreign.Index"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Identity = $PS["Data.Identity"];
  var Foreign = $PS["Foreign"];

  var unsafeReadProp = function unsafeReadProp(k) {
    return function (value) {
      return $foreign.unsafeReadPropImpl(Foreign.fail(new Foreign.TypeMismatch("object", Foreign.typeOf(value))), Control_Applicative.pure(Control_Monad_Except_Trans.applicativeExceptT(Data_Identity.monadIdentity)), k, value);
    };
  };

  var readProp = unsafeReadProp;
  exports["readProp"] = readProp;
})(PS);

(function (exports) {
  "use strict";

  exports._currentTarget = function (e) {
    return e.currentTarget;
  };
})(PS["Web.Event.Event"] = PS["Web.Event.Event"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Web.Event.Event"] = $PS["Web.Event.Event"] || {};
  var exports = $PS["Web.Event.Event"];
  var $foreign = $PS["Web.Event.Event"];
  var Data_Nullable = $PS["Data.Nullable"];

  var currentTarget = function currentTarget($6) {
    return Data_Nullable.toMaybe($foreign["_currentTarget"]($6));
  };

  exports["currentTarget"] = currentTarget;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Web.HTML.Event.EventTypes"] = $PS["Web.HTML.Event.EventTypes"] || {};
  var exports = $PS["Web.HTML.Event.EventTypes"];
  var input = "input";
  var domcontentloaded = "DOMContentLoaded";
  exports["domcontentloaded"] = domcontentloaded;
  exports["input"] = input;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Web.UIEvent.MouseEvent.EventTypes"] = $PS["Web.UIEvent.MouseEvent.EventTypes"] || {};
  var exports = $PS["Web.UIEvent.MouseEvent.EventTypes"];
  var click = "click";
  exports["click"] = click;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.HTML.Events"] = $PS["Halogen.HTML.Events"] || {};
  var exports = $PS["Halogen.HTML.Events"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Except = $PS["Control.Monad.Except"];
  var Control_Monad_Except_Trans = $PS["Control.Monad.Except.Trans"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Identity = $PS["Data.Identity"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Foreign = $PS["Foreign"];
  var Foreign_Index = $PS["Foreign.Index"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_InputF = $PS["Halogen.Query.InputF"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_Event_Event = $PS["Web.Event.Event"];
  var Web_HTML_Event_EventTypes = $PS["Web.HTML.Event.EventTypes"];
  var Web_UIEvent_MouseEvent_EventTypes = $PS["Web.UIEvent.MouseEvent.EventTypes"];
  var mouseHandler = Unsafe_Coerce.unsafeCoerce;

  var input_ = function input_(f) {
    return function (v) {
      return Data_Maybe.Just.create(Halogen_Query.action(f));
    };
  };

  var input = function input(f) {
    return function (x) {
      return Data_Maybe.Just.create(Halogen_Query.action(f(x)));
    };
  };

  var handler = function handler(et) {
    return function ($1) {
      return Halogen_HTML_Core.handler(et)(Data_Functor.map(Data_Functor.functorFn)(Data_Functor.map(Data_Maybe.functorMaybe)(Halogen_Query_InputF.Query.create))($1));
    };
  };

  var onClick = function onClick($2) {
    return handler(Web_UIEvent_MouseEvent_EventTypes.click)(mouseHandler($2));
  };

  var addForeignPropHandler = function addForeignPropHandler(key) {
    return function (prop) {
      return function (reader) {
        return function (f) {
          var go = function go(a) {
            return Control_Bind.composeKleisliFlipped(Control_Monad_Except_Trans.bindExceptT(Data_Identity.monadIdentity))(reader)(Foreign_Index.readProp(prop))(Foreign.unsafeToForeign(a));
          };

          return handler(key)(Control_Bind.composeKleisli(Data_Maybe.bindMaybe)(Web_Event_Event.currentTarget)(function (e) {
            return Data_Either.either(Data_Function["const"](Data_Maybe.Nothing.value))(f)(Control_Monad_Except.runExcept(go(e)));
          }));
        };
      };
    };
  };

  var onValueInput = addForeignPropHandler(Web_HTML_Event_EventTypes.input)("value")(Foreign.readString);
  exports["input"] = input;
  exports["input_"] = input_;
  exports["handler"] = handler;
  exports["onClick"] = onClick;
  exports["onValueInput"] = onValueInput;
})(PS);

(function (exports) {
  exports.upgradeElement = function (element) {
    return function () {
      try {
        console.log("MDL.upgradeElement: " + element.classList);
        componentHandler.upgradeElement(element);
      } catch (e) {
        console.error('MDL.upgradeElement: failed to upgradeElement', element, e);
      }

      return {};
    };
  };

  exports.upgradeElementsBySelector = function (selector) {
    return function () {
      try {
        console.log("MDL.upgradeElementsBySelector " + selector);
        var elements = document.querySelectorAll(selector);

        if (elements && elements.length > 0) {
          elements.forEach(function (element) {
            componentHandler.upgradeElement(element);
          });
        }
      } catch (e) {
        console.error('MDL.upgradeElementsBySelector: failed to upgradeElements by selector', selector, e);
      }

      return {};
    };
  };
})(PS["Halogen.MDL"] = PS["Halogen.MDL"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL"] = $PS["Halogen.MDL"] || {};
  var exports = $PS["Halogen.MDL"];
  var $foreign = $PS["Halogen.MDL"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var upgradeElementsByClassName = function upgradeElementsByClassName(v) {
    return $foreign.upgradeElementsBySelector("." + v);
  };

  var upgradeElementsByClassNames = function upgradeElementsByClassNames(classNames) {
    return Data_Functor["void"](Effect.functorEffect)(Data_Traversable.traverse(Data_Traversable.traversableArray)(Effect.applicativeEffect)(upgradeElementsByClassName)(classNames));
  };

  var upgradeElementByRef = function upgradeElementByRef(dictMonadEffect) {
    return function (ref) {
      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef(ref))(function (v) {
        if (v instanceof Data_Maybe.Just) {
          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))($foreign.upgradeElement(v.value0));
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
        }

        ;
        throw new Error("Failed pattern match at Halogen.MDL (line 35, column 3 - line 37, column 25): " + [v.constructor.name]);
      });
    };
  };

  var attr = {
    disabled: "data-mdl-disabled",
    "for": "data-mdl-for"
  };
  exports["upgradeElementsByClassName"] = upgradeElementsByClassName;
  exports["upgradeElementsByClassNames"] = upgradeElementsByClassNames;
  exports["upgradeElementByRef"] = upgradeElementByRef;
  exports["attr"] = attr;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.RippleEffect"] = $PS["Halogen.MDL.RippleEffect"] || {};
  var exports = $PS["Halogen.MDL.RippleEffect"];
  var cl = {
    jsRippleEffect: "mdl-js-ripple-effect"
  };
  exports["cl"] = cl;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Button"] = $PS["Halogen.MDL.Button"] || {};
  var exports = $PS["Halogen.MDL.Button"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL = $PS["Halogen.MDL"];
  var Halogen_MDL_MaterialIcon = $PS["Halogen.MDL.MaterialIcon"];
  var Halogen_MDL_RippleEffect = $PS["Halogen.MDL.RippleEffect"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var Clicked = function () {
    function Clicked(value0) {
      this.value0 = value0;
    }

    ;

    Clicked.create = function (value0) {
      return new Clicked(value0);
    };

    return Clicked;
  }();

  var Flat = function () {
    function Flat() {}

    ;
    Flat.value = new Flat();
    return Flat;
  }();

  var Raised = function () {
    function Raised() {}

    ;
    Raised.value = new Raised();
    return Raised;
  }();

  var Fab = function () {
    function Fab() {}

    ;
    Fab.value = new Fab();
    return Fab;
  }();

  var MiniFab = function () {
    function MiniFab() {}

    ;
    MiniFab.value = new MiniFab();
    return MiniFab;
  }();

  var Icon = function () {
    function Icon() {}

    ;
    Icon.value = new Icon();
    return Icon;
  }();

  var Text = function () {
    function Text(value0) {
      this.value0 = value0;
    }

    ;

    Text.create = function (value0) {
      return new Text(value0);
    };

    return Text;
  }();

  var IconText = function () {
    function IconText(value0) {
      this.value0 = value0;
    }

    ;

    IconText.create = function (value0) {
      return new IconText(value0);
    };

    return IconText;
  }();

  var Plain = function () {
    function Plain() {}

    ;
    Plain.value = new Plain();
    return Plain;
  }();

  var Colored = function () {
    function Colored() {}

    ;
    Colored.value = new Colored();
    return Colored;
  }();

  var Primary = function () {
    function Primary() {}

    ;
    Primary.value = new Primary();
    return Primary;
  }();

  var Accent = function () {
    function Accent() {}

    ;
    Accent.value = new Accent();
    return Accent;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var OnClick = function () {
    function OnClick(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnClick.create = function (value0) {
      return function (value1) {
        return new OnClick(value0, value1);
      };
    };

    return OnClick;
  }();

  var init = function init(props) {
    return Initialize.create(props);
  };

  var eqButtonType = new Data_Eq.Eq(function (x) {
    return function (y) {
      if (x instanceof Flat && y instanceof Flat) {
        return true;
      }

      ;

      if (x instanceof Raised && y instanceof Raised) {
        return true;
      }

      ;

      if (x instanceof Fab && y instanceof Fab) {
        return true;
      }

      ;

      if (x instanceof MiniFab && y instanceof MiniFab) {
        return true;
      }

      ;

      if (x instanceof Icon && y instanceof Icon) {
        return true;
      }

      ;
      return false;
    };
  });
  var eqButtonContent = new Data_Eq.Eq(function (x) {
    return function (y) {
      if (x instanceof Text && y instanceof Text) {
        return x.value0 === y.value0;
      }

      ;

      if (x instanceof IconText && y instanceof IconText) {
        return x.value0 === y.value0;
      }

      ;
      return false;
    };
  });
  var eqButtonColor = new Data_Eq.Eq(function (x) {
    return function (y) {
      if (x instanceof Plain && y instanceof Plain) {
        return true;
      }

      ;

      if (x instanceof Colored && y instanceof Colored) {
        return true;
      }

      ;

      if (x instanceof Primary && y instanceof Primary) {
        return true;
      }

      ;

      if (x instanceof Accent && y instanceof Accent) {
        return true;
      }

      ;
      return false;
    };
  });
  var eqState = new Data_Eq.Eq(function (x) {
    return function (y) {
      return Data_Eq.eq(eqButtonColor)(x.color)(y.color) && Data_Eq.eq(eqButtonContent)(x.content)(y.content) && x.disabled === y.disabled && x.ripple === y.ripple && Data_Eq.eq(eqButtonType)(x.type)(y.type);
    };
  });
  var cl = {
    button: "mdl-button",
    buttonRaised: "mdl-button--raised",
    buttonFab: "mdl-button--fab",
    buttonMiniFab: "mdl-button--mini-fab",
    buttonIcon: "mdl-button--icon",
    buttonColored: "mdl-button--colored",
    buttonPrimary: "mdl-button--primary",
    buttonAccent: "mdl-button--accent",
    jsButton: "mdl-js-button"
  };

  var button = function () {
    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var getClasses = function getClasses(props) {
      return Data_Semigroup.append(Data_Semigroup.semigroupArray)([cl.button, cl.jsButton])(Data_Semigroup.append(Data_Semigroup.semigroupArray)(function () {
        if (props.type instanceof Flat) {
          return [];
        }

        ;

        if (props.type instanceof Raised) {
          return [cl.buttonRaised];
        }

        ;

        if (props.type instanceof Fab) {
          return [cl.buttonFab];
        }

        ;

        if (props.type instanceof MiniFab) {
          return [cl.buttonFab, cl.buttonMiniFab];
        }

        ;

        if (props.type instanceof Icon) {
          return [cl.buttonIcon];
        }

        ;
        throw new Error("Failed pattern match at Halogen.MDL.Button (line 159, column 10 - line 164, column 32): " + [props.type.constructor.name]);
      }())(Data_Semigroup.append(Data_Semigroup.semigroupArray)(function () {
        if (props.color instanceof Plain) {
          return [];
        }

        ;

        if (props.color instanceof Colored) {
          return [cl.buttonColored];
        }

        ;

        if (props.color instanceof Primary) {
          return [cl.buttonPrimary];
        }

        ;

        if (props.color instanceof Accent) {
          return [cl.buttonAccent];
        }

        ;
        throw new Error("Failed pattern match at Halogen.MDL.Button (line 165, column 10 - line 169, column 36): " + [props.color.constructor.name]);
      }())(function () {
        if (props.ripple) {
          return [Halogen_MDL_RippleEffect.cl.jsRippleEffect];
        }

        ;
        return [];
      }())));
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_MDL.upgradeElementByRef(Effect_Aff.monadEffectAff)("mdl-button-ref"))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Applicative.when(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Eq.notEq(eqState)(v.value0)(v1))(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0)))(function () {
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
          });
        });
      }

      ;

      if (v instanceof OnClick) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query_HalogenM.raise(new Clicked(v.value0)))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;
      throw new Error("Failed pattern match at Halogen.MDL.Button (line 175, column 10 - line 196, column 12): " + [v.constructor.name]);
    };

    var render = function render(v) {
      return Halogen_HTML_Elements.button([Halogen_HTML_Properties.ref("mdl-button-ref"), Halogen_HTML_Properties.classes(getClasses(v)), Halogen_HTML_Properties.disabled(v.disabled), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input(OnClick.create))])(function () {
        if (v.content instanceof Text) {
          return [Halogen_HTML_Core.text(v.content.value0)];
        }

        ;

        if (v.content instanceof IconText) {
          return [Halogen_HTML_Elements.i([Halogen_HTML_Properties.class_(Halogen_MDL_MaterialIcon.cl.materialIcons)])([Halogen_HTML_Core.text(v.content.value0)])];
        }

        ;
        throw new Error("Failed pattern match at Halogen.MDL.Button (line 142, column 7 - line 148, column 12): " + [v.content.constructor.name]);
      }());
    };

    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["cl"] = cl;
  exports["Flat"] = Flat;
  exports["Raised"] = Raised;
  exports["Fab"] = Fab;
  exports["MiniFab"] = MiniFab;
  exports["Icon"] = Icon;
  exports["Plain"] = Plain;
  exports["Colored"] = Colored;
  exports["Primary"] = Primary;
  exports["Accent"] = Accent;
  exports["Text"] = Text;
  exports["IconText"] = IconText;
  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["OnClick"] = OnClick;
  exports["Initialize"] = Initialize;
  exports["Clicked"] = Clicked;
  exports["init"] = init;
  exports["button"] = button;
  exports["eqButtonType"] = eqButtonType;
  exports["eqButtonColor"] = eqButtonColor;
  exports["eqButtonContent"] = eqButtonContent;
  exports["eqState"] = eqState;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Spinner"] = $PS["Halogen.MDL.Spinner"] || {};
  var exports = $PS["Halogen.MDL.Spinner"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var cl = {
    spinner: "mdl-spinner",
    spinnerSingleColor: "mdl-spinner--single-color",
    jsSpinner: "mdl-js-spinner",
    isActive: "is-active"
  };
  var el = {
    spinner_: Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([cl.spinner, cl.jsSpinner, cl.isActive])])([])
  };
  exports["cl"] = cl;
  exports["el"] = el;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoButtons"] = $PS["DemoButtons"] || {};
  var exports = $PS["DemoButtons"];
  var CSS_Display = $PS["CSS.Display"];
  var CSS_Geometry = $PS["CSS.Geometry"];
  var CSS_Size = $PS["CSS.Size"];
  var CSS_Stylesheet = $PS["CSS.Stylesheet"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var DOM_HTML_Indexed_ButtonType = $PS["DOM.HTML.Indexed.ButtonType"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_Class = $PS["Effect.Aff.Class"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_CSS = $PS["Halogen.HTML.CSS"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL = $PS["Halogen.MDL"];
  var Halogen_MDL_Button = $PS["Halogen.MDL.Button"];
  var Halogen_MDL_Cell = $PS["Halogen.MDL.Cell"];
  var Halogen_MDL_Grid = $PS["Halogen.MDL.Grid"];
  var Halogen_MDL_RippleEffect = $PS["Halogen.MDL.RippleEffect"];
  var Halogen_MDL_Spinner = $PS["Halogen.MDL.Spinner"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var OnClickDemoButtonMessage = function () {
    function OnClickDemoButtonMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnClickDemoButtonMessage.create = function (value0) {
      return function (value1) {
        return new OnClickDemoButtonMessage(value0, value1);
      };
    };

    return OnClickDemoButtonMessage;
  }();

  var OnIgnoredButtonMessage = function () {
    function OnIgnoredButtonMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnIgnoredButtonMessage.create = function (value0) {
      return function (value1) {
        return new OnIgnoredButtonMessage(value0, value1);
      };
    };

    return OnIgnoredButtonMessage;
  }();

  var OnNonComponentButtonClick = function () {
    function OnNonComponentButtonClick(value0) {
      this.value0 = value0;
    }

    ;

    OnNonComponentButtonClick.create = function (value0) {
      return new OnNonComponentButtonClick(value0);
    };

    return OnNonComponentButtonClick;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var ClickDemoSlot = function () {
    function ClickDemoSlot() {}

    ;
    ClickDemoSlot.value = new ClickDemoSlot();
    return ClickDemoSlot;
  }();

  var ColoredFabSlot = function () {
    function ColoredFabSlot() {}

    ;
    ColoredFabSlot.value = new ColoredFabSlot();
    return ColoredFabSlot;
  }();

  var ColoredFabRippleSlot = function () {
    function ColoredFabRippleSlot() {}

    ;
    ColoredFabRippleSlot.value = new ColoredFabRippleSlot();
    return ColoredFabRippleSlot;
  }();

  var ColoredFabDisabledSlot = function () {
    function ColoredFabDisabledSlot() {}

    ;
    ColoredFabDisabledSlot.value = new ColoredFabDisabledSlot();
    return ColoredFabDisabledSlot;
  }();

  var PlainFabSlot = function () {
    function PlainFabSlot() {}

    ;
    PlainFabSlot.value = new PlainFabSlot();
    return PlainFabSlot;
  }();

  var PlainFabRippleSlot = function () {
    function PlainFabRippleSlot() {}

    ;
    PlainFabRippleSlot.value = new PlainFabRippleSlot();
    return PlainFabRippleSlot;
  }();

  var PlainFabDisabledSlot = function () {
    function PlainFabDisabledSlot() {}

    ;
    PlainFabDisabledSlot.value = new PlainFabDisabledSlot();
    return PlainFabDisabledSlot;
  }();

  var ColoredRaisedSlot = function () {
    function ColoredRaisedSlot() {}

    ;
    ColoredRaisedSlot.value = new ColoredRaisedSlot();
    return ColoredRaisedSlot;
  }();

  var ColoredRaisedRippleSlot = function () {
    function ColoredRaisedRippleSlot() {}

    ;
    ColoredRaisedRippleSlot.value = new ColoredRaisedRippleSlot();
    return ColoredRaisedRippleSlot;
  }();

  var ColoredRaisedDisabledSlot = function () {
    function ColoredRaisedDisabledSlot() {}

    ;
    ColoredRaisedDisabledSlot.value = new ColoredRaisedDisabledSlot();
    return ColoredRaisedDisabledSlot;
  }();

  var ColoredAccentRaisedSlot = function () {
    function ColoredAccentRaisedSlot() {}

    ;
    ColoredAccentRaisedSlot.value = new ColoredAccentRaisedSlot();
    return ColoredAccentRaisedSlot;
  }();

  var ColoredAccentRaisedRippleSlot = function () {
    function ColoredAccentRaisedRippleSlot() {}

    ;
    ColoredAccentRaisedRippleSlot.value = new ColoredAccentRaisedRippleSlot();
    return ColoredAccentRaisedRippleSlot;
  }();

  var ColoredAccentRaisedDisabledSlot = function () {
    function ColoredAccentRaisedDisabledSlot() {}

    ;
    ColoredAccentRaisedDisabledSlot.value = new ColoredAccentRaisedDisabledSlot();
    return ColoredAccentRaisedDisabledSlot;
  }();

  var PlainRaisedSlot = function () {
    function PlainRaisedSlot() {}

    ;
    PlainRaisedSlot.value = new PlainRaisedSlot();
    return PlainRaisedSlot;
  }();

  var PlainRaisedRippleSlot = function () {
    function PlainRaisedRippleSlot() {}

    ;
    PlainRaisedRippleSlot.value = new PlainRaisedRippleSlot();
    return PlainRaisedRippleSlot;
  }();

  var PlainRaisedDisabledSlot = function () {
    function PlainRaisedDisabledSlot() {}

    ;
    PlainRaisedDisabledSlot.value = new PlainRaisedDisabledSlot();
    return PlainRaisedDisabledSlot;
  }();

  var ColoredFlatSlot = function () {
    function ColoredFlatSlot() {}

    ;
    ColoredFlatSlot.value = new ColoredFlatSlot();
    return ColoredFlatSlot;
  }();

  var ColoredFlatRippleSlot = function () {
    function ColoredFlatRippleSlot() {}

    ;
    ColoredFlatRippleSlot.value = new ColoredFlatRippleSlot();
    return ColoredFlatRippleSlot;
  }();

  var ColoredFlatDisabledSlot = function () {
    function ColoredFlatDisabledSlot() {}

    ;
    ColoredFlatDisabledSlot.value = new ColoredFlatDisabledSlot();
    return ColoredFlatDisabledSlot;
  }();

  var ColoredAccentFlatSlot = function () {
    function ColoredAccentFlatSlot() {}

    ;
    ColoredAccentFlatSlot.value = new ColoredAccentFlatSlot();
    return ColoredAccentFlatSlot;
  }();

  var ColoredAccentFlatRippleSlot = function () {
    function ColoredAccentFlatRippleSlot() {}

    ;
    ColoredAccentFlatRippleSlot.value = new ColoredAccentFlatRippleSlot();
    return ColoredAccentFlatRippleSlot;
  }();

  var ColoredAccentFlatDisabledSlot = function () {
    function ColoredAccentFlatDisabledSlot() {}

    ;
    ColoredAccentFlatDisabledSlot.value = new ColoredAccentFlatDisabledSlot();
    return ColoredAccentFlatDisabledSlot;
  }();

  var PlainFlatSlot = function () {
    function PlainFlatSlot() {}

    ;
    PlainFlatSlot.value = new PlainFlatSlot();
    return PlainFlatSlot;
  }();

  var PlainFlatRippleSlot = function () {
    function PlainFlatRippleSlot() {}

    ;
    PlainFlatRippleSlot.value = new PlainFlatRippleSlot();
    return PlainFlatRippleSlot;
  }();

  var PlainFlatDisabledSlot = function () {
    function PlainFlatDisabledSlot() {}

    ;
    PlainFlatDisabledSlot.value = new PlainFlatDisabledSlot();
    return PlainFlatDisabledSlot;
  }();

  var ColoredIconSlot = function () {
    function ColoredIconSlot() {}

    ;
    ColoredIconSlot.value = new ColoredIconSlot();
    return ColoredIconSlot;
  }();

  var ColoredIconRippleSlot = function () {
    function ColoredIconRippleSlot() {}

    ;
    ColoredIconRippleSlot.value = new ColoredIconRippleSlot();
    return ColoredIconRippleSlot;
  }();

  var ColoredIconDisabledSlot = function () {
    function ColoredIconDisabledSlot() {}

    ;
    ColoredIconDisabledSlot.value = new ColoredIconDisabledSlot();
    return ColoredIconDisabledSlot;
  }();

  var ColoredMiniFabSlot = function () {
    function ColoredMiniFabSlot() {}

    ;
    ColoredMiniFabSlot.value = new ColoredMiniFabSlot();
    return ColoredMiniFabSlot;
  }();

  var ColoredMiniFabRippleSlot = function () {
    function ColoredMiniFabRippleSlot() {}

    ;
    ColoredMiniFabRippleSlot.value = new ColoredMiniFabRippleSlot();
    return ColoredMiniFabRippleSlot;
  }();

  var ColoredMiniFabDisabledSlot = function () {
    function ColoredMiniFabDisabledSlot() {}

    ;
    ColoredMiniFabDisabledSlot.value = new ColoredMiniFabDisabledSlot();
    return ColoredMiniFabDisabledSlot;
  }();

  var init = function init(state) {
    return new Initialize(state);
  };

  var eqChildSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      if (x instanceof ClickDemoSlot && y instanceof ClickDemoSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredFabSlot && y instanceof ColoredFabSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredFabRippleSlot && y instanceof ColoredFabRippleSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredFabDisabledSlot && y instanceof ColoredFabDisabledSlot) {
        return true;
      }

      ;

      if (x instanceof PlainFabSlot && y instanceof PlainFabSlot) {
        return true;
      }

      ;

      if (x instanceof PlainFabRippleSlot && y instanceof PlainFabRippleSlot) {
        return true;
      }

      ;

      if (x instanceof PlainFabDisabledSlot && y instanceof PlainFabDisabledSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredRaisedSlot && y instanceof ColoredRaisedSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredRaisedRippleSlot && y instanceof ColoredRaisedRippleSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredRaisedDisabledSlot && y instanceof ColoredRaisedDisabledSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredAccentRaisedSlot && y instanceof ColoredAccentRaisedSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredAccentRaisedRippleSlot && y instanceof ColoredAccentRaisedRippleSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredAccentRaisedDisabledSlot && y instanceof ColoredAccentRaisedDisabledSlot) {
        return true;
      }

      ;

      if (x instanceof PlainRaisedSlot && y instanceof PlainRaisedSlot) {
        return true;
      }

      ;

      if (x instanceof PlainRaisedRippleSlot && y instanceof PlainRaisedRippleSlot) {
        return true;
      }

      ;

      if (x instanceof PlainRaisedDisabledSlot && y instanceof PlainRaisedDisabledSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredFlatSlot && y instanceof ColoredFlatSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredFlatRippleSlot && y instanceof ColoredFlatRippleSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredFlatDisabledSlot && y instanceof ColoredFlatDisabledSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredAccentFlatSlot && y instanceof ColoredAccentFlatSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredAccentFlatRippleSlot && y instanceof ColoredAccentFlatRippleSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredAccentFlatDisabledSlot && y instanceof ColoredAccentFlatDisabledSlot) {
        return true;
      }

      ;

      if (x instanceof PlainFlatSlot && y instanceof PlainFlatSlot) {
        return true;
      }

      ;

      if (x instanceof PlainFlatRippleSlot && y instanceof PlainFlatRippleSlot) {
        return true;
      }

      ;

      if (x instanceof PlainFlatDisabledSlot && y instanceof PlainFlatDisabledSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredIconSlot && y instanceof ColoredIconSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredIconRippleSlot && y instanceof ColoredIconRippleSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredIconDisabledSlot && y instanceof ColoredIconDisabledSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredMiniFabSlot && y instanceof ColoredMiniFabSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredMiniFabRippleSlot && y instanceof ColoredMiniFabRippleSlot) {
        return true;
      }

      ;

      if (x instanceof ColoredMiniFabDisabledSlot && y instanceof ColoredMiniFabDisabledSlot) {
        return true;
      }

      ;
      return false;
    };
  });
  var ordChildSlot = new Data_Ord.Ord(function () {
    return eqChildSlot;
  }, function (x) {
    return function (y) {
      if (x instanceof ClickDemoSlot && y instanceof ClickDemoSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ClickDemoSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ClickDemoSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredFabSlot && y instanceof ColoredFabSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredFabSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredFabSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredFabRippleSlot && y instanceof ColoredFabRippleSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredFabRippleSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredFabRippleSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredFabDisabledSlot && y instanceof ColoredFabDisabledSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredFabDisabledSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredFabDisabledSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof PlainFabSlot && y instanceof PlainFabSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof PlainFabSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof PlainFabSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof PlainFabRippleSlot && y instanceof PlainFabRippleSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof PlainFabRippleSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof PlainFabRippleSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof PlainFabDisabledSlot && y instanceof PlainFabDisabledSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof PlainFabDisabledSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof PlainFabDisabledSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredRaisedSlot && y instanceof ColoredRaisedSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredRaisedSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredRaisedSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredRaisedRippleSlot && y instanceof ColoredRaisedRippleSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredRaisedRippleSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredRaisedRippleSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredRaisedDisabledSlot && y instanceof ColoredRaisedDisabledSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredRaisedDisabledSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredRaisedDisabledSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredAccentRaisedSlot && y instanceof ColoredAccentRaisedSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredAccentRaisedSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredAccentRaisedSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredAccentRaisedRippleSlot && y instanceof ColoredAccentRaisedRippleSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredAccentRaisedRippleSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredAccentRaisedRippleSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredAccentRaisedDisabledSlot && y instanceof ColoredAccentRaisedDisabledSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredAccentRaisedDisabledSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredAccentRaisedDisabledSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof PlainRaisedSlot && y instanceof PlainRaisedSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof PlainRaisedSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof PlainRaisedSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof PlainRaisedRippleSlot && y instanceof PlainRaisedRippleSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof PlainRaisedRippleSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof PlainRaisedRippleSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof PlainRaisedDisabledSlot && y instanceof PlainRaisedDisabledSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof PlainRaisedDisabledSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof PlainRaisedDisabledSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredFlatSlot && y instanceof ColoredFlatSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredFlatSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredFlatSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredFlatRippleSlot && y instanceof ColoredFlatRippleSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredFlatRippleSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredFlatRippleSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredFlatDisabledSlot && y instanceof ColoredFlatDisabledSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredFlatDisabledSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredFlatDisabledSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredAccentFlatSlot && y instanceof ColoredAccentFlatSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredAccentFlatSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredAccentFlatSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredAccentFlatRippleSlot && y instanceof ColoredAccentFlatRippleSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredAccentFlatRippleSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredAccentFlatRippleSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredAccentFlatDisabledSlot && y instanceof ColoredAccentFlatDisabledSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredAccentFlatDisabledSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredAccentFlatDisabledSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof PlainFlatSlot && y instanceof PlainFlatSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof PlainFlatSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof PlainFlatSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof PlainFlatRippleSlot && y instanceof PlainFlatRippleSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof PlainFlatRippleSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof PlainFlatRippleSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof PlainFlatDisabledSlot && y instanceof PlainFlatDisabledSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof PlainFlatDisabledSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof PlainFlatDisabledSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredIconSlot && y instanceof ColoredIconSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredIconSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredIconSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredIconRippleSlot && y instanceof ColoredIconRippleSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredIconRippleSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredIconRippleSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredIconDisabledSlot && y instanceof ColoredIconDisabledSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredIconDisabledSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredIconDisabledSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredMiniFabSlot && y instanceof ColoredMiniFabSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredMiniFabSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredMiniFabSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredMiniFabRippleSlot && y instanceof ColoredMiniFabRippleSlot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof ColoredMiniFabRippleSlot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof ColoredMiniFabRippleSlot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof ColoredMiniFabDisabledSlot && y instanceof ColoredMiniFabDisabledSlot) {
        return Data_Ordering.EQ.value;
      }

      ;
      throw new Error("Failed pattern match at DemoButtons (line 75, column 8 - line 75, column 46): " + [x.constructor.name, y.constructor.name]);
    };
  });

  var demoButtons = function () {
    var renderMainHeader = Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Buttons")])]);

    var renderDemoSection = function renderDemoSection(body) {
      return Halogen_MDL_Cell.el.cell4Col_(body);
    };

    var renderDemoHeader = function renderDemoHeader(name) {
      return Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h3_([Halogen_HTML_Core.text(name)])]);
    };

    var render = function render(state) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(Halogen_MDL_Grid.cl.grid)])([renderMainHeader, renderDemoHeader("Click demo"), renderDemoSection([Halogen_HTML.slot(ClickDemoSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Raised.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.Text("Click this"),
        disabled: false,
        ripple: true
      }))(Halogen_HTML_Events.input(OnClickDemoButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Button has been clicked " + (Data_Show.show(Data_Show.showInt)(state.clickDemo.clickCount) + " times."))])]), renderDemoHeader("Colored fab buttons"), renderDemoSection([Halogen_HTML.slot(ColoredFabSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Fab.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.IconText("add"),
        disabled: false,
        ripple: false
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Normal")])]), renderDemoSection([Halogen_HTML.slot(ColoredFabRippleSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Fab.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.IconText("add"),
        disabled: false,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Ripple")])]), renderDemoSection([Halogen_HTML.slot(ColoredFabDisabledSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Fab.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.IconText("add"),
        disabled: true,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Disabled")])]), renderDemoHeader("Plain fab buttons"), renderDemoSection([Halogen_HTML.slot(PlainFabSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Fab.value,
        color: Halogen_MDL_Button.Plain.value,
        content: new Halogen_MDL_Button.IconText("add"),
        disabled: false,
        ripple: false
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Normal")])]), renderDemoSection([Halogen_HTML.slot(PlainFabRippleSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Fab.value,
        color: Halogen_MDL_Button.Plain.value,
        content: new Halogen_MDL_Button.IconText("add"),
        disabled: false,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Ripple")])]), renderDemoSection([Halogen_HTML.slot(PlainFabDisabledSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Fab.value,
        color: Halogen_MDL_Button.Plain.value,
        content: new Halogen_MDL_Button.IconText("add"),
        disabled: true,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Disabled")])]), renderDemoHeader("Colored raised buttons"), renderDemoSection([Halogen_HTML.slot(ColoredRaisedSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Raised.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: false,
        ripple: false
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Normal")])]), renderDemoSection([Halogen_HTML.slot(ColoredRaisedRippleSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Raised.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: false,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Ripple")])]), renderDemoSection([Halogen_HTML.slot(ColoredRaisedDisabledSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Raised.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: true,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Disabled")])]), renderDemoHeader("Colored accent raised buttons"), renderDemoSection([Halogen_HTML.slot(ColoredAccentRaisedSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Raised.value,
        color: Halogen_MDL_Button.Accent.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: false,
        ripple: false
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Normal")])]), renderDemoSection([Halogen_HTML.slot(ColoredAccentRaisedRippleSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Raised.value,
        color: Halogen_MDL_Button.Accent.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: false,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Ripple")])]), renderDemoSection([Halogen_HTML.slot(ColoredAccentRaisedDisabledSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Raised.value,
        color: Halogen_MDL_Button.Accent.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: true,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Disabled")])]), renderDemoHeader("Plain raised buttons"), renderDemoSection([Halogen_HTML.slot(PlainRaisedSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Raised.value,
        color: Halogen_MDL_Button.Plain.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: false,
        ripple: false
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Normal")])]), renderDemoSection([Halogen_HTML.slot(PlainRaisedRippleSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Raised.value,
        color: Halogen_MDL_Button.Plain.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: false,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Ripple")])]), renderDemoSection([Halogen_HTML.slot(PlainRaisedDisabledSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Raised.value,
        color: Halogen_MDL_Button.Plain.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: true,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Disabled")])]), renderDemoHeader("Colored flat buttons"), renderDemoSection([Halogen_HTML.slot(ColoredFlatSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Flat.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: false,
        ripple: false
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Normal")])]), renderDemoSection([Halogen_HTML.slot(ColoredFlatRippleSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Flat.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: false,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Ripple")])]), renderDemoSection([Halogen_HTML.slot(ColoredFlatDisabledSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Flat.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: true,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Disabled")])]), renderDemoHeader("Colored accent flat buttons"), renderDemoSection([Halogen_HTML.slot(ColoredAccentFlatSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Flat.value,
        color: Halogen_MDL_Button.Accent.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: false,
        ripple: false
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Normal")])]), renderDemoSection([Halogen_HTML.slot(ColoredAccentFlatRippleSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Flat.value,
        color: Halogen_MDL_Button.Accent.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: false,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Ripple")])]), renderDemoSection([Halogen_HTML.slot(ColoredAccentFlatDisabledSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Flat.value,
        color: Halogen_MDL_Button.Accent.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: true,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Disabled")])]), renderDemoHeader("Plain flat buttons"), renderDemoSection([Halogen_HTML.slot(PlainFlatSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Flat.value,
        color: Halogen_MDL_Button.Plain.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: false,
        ripple: false
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Normal")])]), renderDemoSection([Halogen_HTML.slot(PlainFlatRippleSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Flat.value,
        color: Halogen_MDL_Button.Plain.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: false,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Ripple")])]), renderDemoSection([Halogen_HTML.slot(PlainFlatDisabledSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Flat.value,
        color: Halogen_MDL_Button.Plain.value,
        content: new Halogen_MDL_Button.Text("Click me"),
        disabled: true,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Disabled")])]), renderDemoHeader("Colored icon buttons"), renderDemoSection([Halogen_HTML.slot(ColoredIconSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Icon.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.IconText("mood"),
        disabled: false,
        ripple: false
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Normal")])]), renderDemoSection([Halogen_HTML.slot(ColoredIconRippleSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Icon.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.IconText("mood"),
        disabled: false,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Ripple")])]), renderDemoSection([Halogen_HTML.slot(ColoredIconDisabledSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.Icon.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.IconText("mood"),
        disabled: true,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Disabled")])]), renderDemoHeader("Colored mini-fab buttons"), renderDemoSection([Halogen_HTML.slot(ColoredMiniFabSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.MiniFab.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.IconText("add"),
        disabled: false,
        ripple: false
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Normal")])]), renderDemoSection([Halogen_HTML.slot(ColoredMiniFabRippleSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.MiniFab.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.IconText("add"),
        disabled: false,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Ripple")])]), renderDemoSection([Halogen_HTML.slot(ColoredMiniFabDisabledSlot.value)(Halogen_MDL_Button.button)(Halogen_MDL_Button.init({
        type: Halogen_MDL_Button.MiniFab.value,
        color: Halogen_MDL_Button.Colored.value,
        content: new Halogen_MDL_Button.IconText("add"),
        disabled: true,
        ripple: true
      }))(Halogen_HTML_Events.input(OnIgnoredButtonMessage.create)), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Disabled")])]), renderDemoHeader("DIY (non-component) button"), renderDemoSection(Data_Semigroup.append(Data_Semigroup.semigroupArray)([Halogen_HTML_Elements.button([Halogen_HTML_Properties.classes([Halogen_MDL_Button.cl.button, Halogen_MDL_Button.cl.jsButton, Halogen_MDL_Button.cl.buttonRaised, Halogen_MDL_Button.cl.buttonColored, Halogen_MDL_RippleEffect.cl.jsRippleEffect]), Halogen_HTML_Properties.type_(Halogen_HTML_Core.buttonTypeIsProp)(DOM_HTML_Indexed_ButtonType.ButtonButton.value), Halogen_HTML_Properties.ref("non-component-button"), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(OnNonComponentButtonClick.create)), Halogen_HTML_Properties.disabled(state.nonComponentDemo.isLoading)])(function () {
        if (state.nonComponentDemo.isLoading) {
          return [Halogen_HTML_Core.text("Loading")];
        }

        ;
        return [Halogen_HTML_Core.text("Click for async action")];
      }())])(function () {
        if (state.nonComponentDemo.isLoading) {
          return [Halogen_HTML_Elements.div([Halogen_HTML_CSS.style(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Display.display(CSS_Display.inlineBlock))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Display.position(CSS_Display.relative))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.left(CSS_Size.px(10.0)))(function () {
                return CSS_Geometry.top(CSS_Size.px(8.0));
              });
            });
          }))])([Halogen_MDL_Spinner.el.spinner_])];
        }

        ;
        return [];
      }()))]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_MDL.upgradeElementByRef(Effect_Aff.monadEffectAff)("non-component-button"))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof OnClickDemoButtonMessage) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state1) {
            var $31 = {};

            for (var $32 in state1) {
              if ({}.hasOwnProperty.call(state1, $32)) {
                $31[$32] = state1[$32];
              }

              ;
            }

            ;

            $31.clickDemo = function () {
              var $28 = {};

              for (var $29 in state1.clickDemo) {
                if ({}.hasOwnProperty.call(state1.clickDemo, $29)) {
                  $28[$29] = state1["clickDemo"][$29];
                }

                ;
              }

              ;
              $28.clickCount = state1.clickDemo.clickCount + 1 | 0;
              return $28;
            }();

            return $31;
          }))(function () {
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
          });
        });
      }

      ;

      if (v instanceof OnIgnoredButtonMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;

      if (v instanceof OnNonComponentButtonClick) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state1) {
            var $43 = {};

            for (var $44 in state1) {
              if ({}.hasOwnProperty.call(state1, $44)) {
                $43[$44] = state1[$44];
              }

              ;
            }

            ;

            $43.nonComponentDemo = function () {
              var $40 = {};

              for (var $41 in state1.nonComponentDemo) {
                if ({}.hasOwnProperty.call(state1.nonComponentDemo, $41)) {
                  $40[$41] = state1["nonComponentDemo"][$41];
                }

                ;
              }

              ;
              $40.isLoading = true;
              return $40;
            }();

            return $43;
          }))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Halogen_MDL.upgradeElementsByClassName(Halogen_MDL_Spinner.cl.jsSpinner)))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Aff_Class.liftAff(Halogen_Query_HalogenM.monadAffHalogenM(Effect_Aff_Class.monadAffAff))(Effect_Aff.delay(2000.0)))(function () {
                return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state1) {
                  var $49 = {};

                  for (var $50 in state1) {
                    if ({}.hasOwnProperty.call(state1, $50)) {
                      $49[$50] = state1[$50];
                    }

                    ;
                  }

                  ;

                  $49.nonComponentDemo = function () {
                    var $46 = {};

                    for (var $47 in state1.nonComponentDemo) {
                      if ({}.hasOwnProperty.call(state1.nonComponentDemo, $47)) {
                        $46[$47] = state1["nonComponentDemo"][$47];
                      }

                      ;
                    }

                    ;
                    $46.isLoading = false;
                    return $46;
                  }();

                  return $49;
                }))(function () {
                  return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
                });
              });
            });
          });
        });
      }

      ;
      throw new Error("Failed pattern match at DemoButtons (line 425, column 10 - line 453, column 12): " + [v.constructor.name]);
    };

    return Halogen_Component.lifecycleParentComponent(ordChildSlot)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["OnClickDemoButtonMessage"] = OnClickDemoButtonMessage;
  exports["OnIgnoredButtonMessage"] = OnIgnoredButtonMessage;
  exports["OnNonComponentButtonClick"] = OnNonComponentButtonClick;
  exports["Initialize"] = Initialize;
  exports["ClickDemoSlot"] = ClickDemoSlot;
  exports["ColoredFabSlot"] = ColoredFabSlot;
  exports["ColoredFabRippleSlot"] = ColoredFabRippleSlot;
  exports["ColoredFabDisabledSlot"] = ColoredFabDisabledSlot;
  exports["PlainFabSlot"] = PlainFabSlot;
  exports["PlainFabRippleSlot"] = PlainFabRippleSlot;
  exports["PlainFabDisabledSlot"] = PlainFabDisabledSlot;
  exports["ColoredRaisedSlot"] = ColoredRaisedSlot;
  exports["ColoredRaisedRippleSlot"] = ColoredRaisedRippleSlot;
  exports["ColoredRaisedDisabledSlot"] = ColoredRaisedDisabledSlot;
  exports["ColoredAccentRaisedSlot"] = ColoredAccentRaisedSlot;
  exports["ColoredAccentRaisedRippleSlot"] = ColoredAccentRaisedRippleSlot;
  exports["ColoredAccentRaisedDisabledSlot"] = ColoredAccentRaisedDisabledSlot;
  exports["PlainRaisedSlot"] = PlainRaisedSlot;
  exports["PlainRaisedRippleSlot"] = PlainRaisedRippleSlot;
  exports["PlainRaisedDisabledSlot"] = PlainRaisedDisabledSlot;
  exports["ColoredFlatSlot"] = ColoredFlatSlot;
  exports["ColoredFlatRippleSlot"] = ColoredFlatRippleSlot;
  exports["ColoredFlatDisabledSlot"] = ColoredFlatDisabledSlot;
  exports["ColoredAccentFlatSlot"] = ColoredAccentFlatSlot;
  exports["ColoredAccentFlatRippleSlot"] = ColoredAccentFlatRippleSlot;
  exports["ColoredAccentFlatDisabledSlot"] = ColoredAccentFlatDisabledSlot;
  exports["PlainFlatSlot"] = PlainFlatSlot;
  exports["PlainFlatRippleSlot"] = PlainFlatRippleSlot;
  exports["PlainFlatDisabledSlot"] = PlainFlatDisabledSlot;
  exports["ColoredIconSlot"] = ColoredIconSlot;
  exports["ColoredIconRippleSlot"] = ColoredIconRippleSlot;
  exports["ColoredIconDisabledSlot"] = ColoredIconDisabledSlot;
  exports["ColoredMiniFabSlot"] = ColoredMiniFabSlot;
  exports["ColoredMiniFabRippleSlot"] = ColoredMiniFabRippleSlot;
  exports["ColoredMiniFabDisabledSlot"] = ColoredMiniFabDisabledSlot;
  exports["init"] = init;
  exports["demoButtons"] = demoButtons;
  exports["eqChildSlot"] = eqChildSlot;
  exports["ordChildSlot"] = ordChildSlot;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Card"] = $PS["Halogen.MDL.Card"] || {};
  var exports = $PS["Halogen.MDL.Card"];
  var cl = {
    card: "mdl-card",
    cardExpand: "mdl-card--expand",
    cardBorder: "mdl-card--border",
    cardTitle: "mdl-card__title",
    cardTitleText: "mdl-card__title-text",
    cardSubtitleText: "mdl-card__subtitle-text",
    cardMedia: "mdl-card__media",
    cardSupportingText: "mdl-card__supporting-text",
    cardActions: "mdl-card__actions",
    cardMenu: "mdl-card__menu"
  };
  exports["cl"] = cl;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Shadow"] = $PS["Halogen.MDL.Shadow"] || {};
  var exports = $PS["Halogen.MDL.Shadow"];
  var cl = {
    shadow2dp: "mdl-shadow--2dp",
    shadow3dp: "mdl-shadow--3dp",
    shadow4dp: "mdl-shadow--4dp",
    shadow6dp: "mdl-shadow--6dp",
    shadow8dp: "mdl-shadow--8dp",
    shadow16dp: "mdl-shadow--16dp"
  };
  exports["cl"] = cl;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoCards"] = $PS["DemoCards"] || {};
  var exports = $PS["DemoCards"];
  var CSS_Background = $PS["CSS.Background"];
  var CSS_Font = $PS["CSS.Font"];
  var CSS_Geometry = $PS["CSS.Geometry"];
  var CSS_Selector = $PS["CSS.Selector"];
  var CSS_Size = $PS["CSS.Size"];
  var CSS_Stylesheet = $PS["CSS.Stylesheet"];
  var Color = $PS["Color"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_CSS = $PS["Halogen.HTML.CSS"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL = $PS["Halogen.MDL"];
  var Halogen_MDL_Button = $PS["Halogen.MDL.Button"];
  var Halogen_MDL_Card = $PS["Halogen.MDL.Card"];
  var Halogen_MDL_Cell = $PS["Halogen.MDL.Cell"];
  var Halogen_MDL_Grid = $PS["Halogen.MDL.Grid"];
  var Halogen_MDL_MaterialIcon = $PS["Halogen.MDL.MaterialIcon"];
  var Halogen_MDL_RippleEffect = $PS["Halogen.MDL.RippleEffect"];
  var Halogen_MDL_Shadow = $PS["Halogen.MDL.Shadow"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var init = function init(state) {
    return new Initialize(state);
  };

  var demoCards = function () {
    var renderWelcomeCard = [Halogen_HTML_CSS.stylesheet(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_Selector.element(".demo-card-wide.mdl-card"))(CSS_Geometry.width(CSS_Size.px(512.0))))(function () {
      return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_Selector.child(CSS_Selector.element(".demo-card-wide"))(CSS_Selector.element(".mdl-card__title")))(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Font.color(Color.white))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.height(CSS_Size.px(176.0)))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Background.background(CSS_Background.backgroundBackgroundImage)(CSS_Background.url("https://getmdl.io/assets/demos/welcome_card.jpg")))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Background.backgroundSize(CSS_Background.cover))(function () {
              return CSS_Background.backgroundPosition(CSS_Background.placed(CSS_Background.sideCenter)(CSS_Background.sideCenter));
            });
          });
        });
      })))(function () {
        return CSS_Stylesheet.select(CSS_Selector.child(CSS_Selector.element(".demo-card-wide"))(CSS_Selector.element(".mdl-card__menu")))(CSS_Font.color(Color.white));
      });
    })), Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes(["demo-card-wide", Halogen_MDL_Card.cl.card, Halogen_MDL_Shadow.cl.shadow2dp])])([Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(Halogen_MDL_Card.cl.cardTitle)])([Halogen_HTML_Elements.h2([Halogen_HTML_Properties.class_(Halogen_MDL_Card.cl.cardTitleText)])([Halogen_HTML_Core.text("Welcome")])]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(Halogen_MDL_Card.cl.cardSupportingText)])([Halogen_HTML_Core.text("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sagittis pellentesque lacus eleifend lacinia...")]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Card.cl.cardActions, Halogen_MDL_Card.cl.cardBorder])])([Halogen_HTML_Elements.a([Halogen_HTML_Properties.classes([Halogen_MDL_Button.cl.button, Halogen_MDL_Button.cl.buttonColored, Halogen_MDL_Button.cl.jsButton, Halogen_MDL_RippleEffect.cl.jsRippleEffect])])([Halogen_HTML_Core.text("Get started")])]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Card.cl.cardMenu])])([Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Button.cl.button, Halogen_MDL_Button.cl.buttonIcon, Halogen_MDL_Button.cl.jsButton, Halogen_MDL_RippleEffect.cl.jsRippleEffect])])([Halogen_HTML_Elements.i([Halogen_HTML_Properties.class_(Halogen_MDL_MaterialIcon.cl.materialIcons)])([Halogen_HTML_Core.text(Halogen_MDL_MaterialIcon.str.share)])])])])];
    var renderSquareCard = [Halogen_HTML_CSS.stylesheet(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Stylesheet.select(CSS_Selector.element(".demo-card-square.mdl-card"))(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.width(CSS_Size.px(320.0)))(function () {
      return CSS_Geometry.height(CSS_Size.px(320.0));
    })))(function () {
      return CSS_Stylesheet.select(CSS_Selector.child(CSS_Selector.element(".demo-card-square"))(CSS_Selector.element(".mdl-card__title")))(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Font.color(Color.white))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Geometry.height(CSS_Size.px(176.0)))(function () {
          return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Background.background(CSS_Background.backgroundBackgroundImage)(CSS_Background.url("https://getmdl.io/assets/demos/dog.png")))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Background.backgroundColor(Data_Maybe.fromMaybe(Color.white)(Color.fromHexString("#46B6AC"))))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Background.backgroundRepeat(CSS_Background.noRepeat))(function () {
                return CSS_Background.backgroundPosition(CSS_Background.placed(CSS_Background.sideRight)(CSS_Background.sideBottom));
              });
            });
          });
        });
      }));
    })), Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes(["demo-card-square", Halogen_MDL_Card.cl.card, Halogen_MDL_Shadow.cl.shadow2dp])])([Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Card.cl.cardTitle, Halogen_MDL_Card.cl.cardExpand])])([Halogen_HTML_Elements.h2([Halogen_HTML_Properties.class_(Halogen_MDL_Card.cl.cardTitleText)])([Halogen_HTML_Core.text("Update")])]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Card.cl.cardSupportingText])])([Halogen_HTML_Core.text("Lorem ipsum dolor sit amet, consectetur adipiscing elit. Mauris sagittis pellentesque lacus eleifend lacinia...")]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Card.cl.cardActions, Halogen_MDL_Card.cl.cardBorder])])([Halogen_HTML_Elements.a([Halogen_HTML_Properties.classes([Halogen_MDL_Button.cl.button, Halogen_MDL_Button.cl.buttonColored, Halogen_MDL_Button.cl.jsButton, Halogen_MDL_RippleEffect.cl.jsRippleEffect])])([Halogen_HTML_Core.text("View updates")])])])];

    var renderDemoSection = function renderDemoSection(body) {
      return Halogen_MDL_Cell.el.cell12Col_(body);
    };

    var renderDemoHeader = function renderDemoHeader(name) {
      return Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h3_([Halogen_HTML_Core.text(name)])]);
    };

    var renderCardsHeader = Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Cards")])]);

    var render = function render(state) {
      return Halogen_MDL_Grid.el.grid_([renderCardsHeader, renderDemoHeader("Welcome card"), renderDemoSection(renderWelcomeCard), renderDemoHeader("Square card"), renderDemoSection(renderSquareCard)]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Halogen_MDL.upgradeElementsByClassName(Halogen_MDL_Button.cl.jsButton)))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;
      throw new Error("Failed pattern match at DemoCards (line 162, column 10 - line 169, column 12): " + [v.constructor.name]);
    };

    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["Initialize"] = Initialize;
  exports["init"] = init;
  exports["demoCards"] = demoCards;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Chip"] = $PS["Halogen.MDL.Chip"] || {};
  var exports = $PS["Halogen.MDL.Chip"];
  var cl = {
    chip: "mdl-chip",
    chipContactM: "mdl-chip--contact",
    chipDeletable: "mdl-chip--deletable",
    chipText: "mdl-chip__text",
    chipAction: "mdl-chip__action",
    chipContactE: "mdl-chip__contact"
  };
  exports["cl"] = cl;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Color"] = $PS["Halogen.MDL.Color"] || {};
  var exports = $PS["Halogen.MDL.Color"];
  var cl = {
    colorTeal: "mdl-color--teal",
    colorTextWhite: "mdl-color-text--white"
  };
  exports["cl"] = cl;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoChips"] = $PS["DemoChips"] || {};
  var exports = $PS["DemoChips"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var DOM_HTML_Indexed_ButtonType = $PS["DOM.HTML.Indexed.ButtonType"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL_Cell = $PS["Halogen.MDL.Cell"];
  var Halogen_MDL_Chip = $PS["Halogen.MDL.Chip"];
  var Halogen_MDL_Color = $PS["Halogen.MDL.Color"];
  var Halogen_MDL_Grid = $PS["Halogen.MDL.Grid"];
  var Halogen_MDL_MaterialIcon = $PS["Halogen.MDL.MaterialIcon"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var init = function init(state) {
    return new Initialize(state);
  };

  var demoChips = function () {
    var renderDemoSection = function renderDemoSection(body) {
      return Halogen_MDL_Cell.el.cell3Col_(body);
    };

    var renderDemoHeader = function renderDemoHeader(name) {
      return Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h3_([Halogen_HTML_Core.text(name)])]);
    };

    var renderChipsHeader = Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Chips")])]);

    var render = function render(state) {
      return Halogen_MDL_Grid.el.grid_([renderChipsHeader, renderDemoHeader("Basic chips"), renderDemoSection([Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_Chip.cl.chip)])([Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_Chip.cl.chipText)])([Halogen_HTML_Core.text("Basic chip")])])]), renderDemoSection([Halogen_HTML_Elements.span([Halogen_HTML_Properties.classes([Halogen_MDL_Chip.cl.chip, Halogen_MDL_Chip.cl.chipDeletable])])([Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_Chip.cl.chipText)])([Halogen_HTML_Core.text("Deletable chip")]), Halogen_HTML_Elements.button([Halogen_HTML_Properties.class_(Halogen_MDL_Chip.cl.chipAction), Halogen_HTML_Properties.type_(Halogen_HTML_Core.buttonTypeIsProp)(DOM_HTML_Indexed_ButtonType.ButtonButton.value)])([Halogen_HTML_Elements.i([Halogen_HTML_Properties.class_(Halogen_MDL_MaterialIcon.cl.materialIcons)])([Halogen_HTML_Core.text(Halogen_MDL_MaterialIcon.str.cancel)])])])]), renderDemoSection([Halogen_HTML_Elements.button([Halogen_HTML_Properties.class_(Halogen_MDL_Chip.cl.chip), Halogen_HTML_Properties.type_(Halogen_HTML_Core.buttonTypeIsProp)(DOM_HTML_Indexed_ButtonType.ButtonButton.value)])([Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_Chip.cl.chipText)])([Halogen_HTML_Core.text("Button chip")])])]), renderDemoHeader("Contact chips"), renderDemoSection([Halogen_HTML_Elements.span([Halogen_HTML_Properties.classes([Halogen_MDL_Chip.cl.chip, Halogen_MDL_Chip.cl.chipContactM])])([Halogen_HTML_Elements.span([Halogen_HTML_Properties.classes([Halogen_MDL_Chip.cl.chipContactE, Halogen_MDL_Color.cl.colorTeal, Halogen_MDL_Color.cl.colorTextWhite])])([Halogen_HTML_Core.text("A")]), Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_Chip.cl.chipText)])([Halogen_HTML_Core.text("Contact Chip")])])]), renderDemoSection([Halogen_HTML_Elements.span([Halogen_HTML_Properties.classes([Halogen_MDL_Chip.cl.chip, Halogen_MDL_Chip.cl.chipContactM, Halogen_MDL_Chip.cl.chipDeletable])])([Halogen_HTML_Elements.img([Halogen_HTML_Properties.classes([Halogen_MDL_Chip.cl.chipContactE]), Halogen_HTML_Properties.src("https://getmdl.io/templates/dashboard/images/user.jpg")]), Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_Chip.cl.chipText)])([Halogen_HTML_Core.text("Deletable Contact Chip")]), Halogen_HTML_Elements.a([Halogen_HTML_Properties.class_(Halogen_MDL_Chip.cl.chipAction)])([Halogen_HTML_Elements.i([Halogen_HTML_Properties.class_(Halogen_MDL_MaterialIcon.cl.materialIcons)])([Halogen_HTML_Core.text(Halogen_MDL_MaterialIcon.str.cancel)])])])])]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;
      throw new Error("Failed pattern match at DemoChips (line 149, column 10 - line 156, column 12): " + [v.constructor.name]);
    };

    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["Initialize"] = Initialize;
  exports["init"] = init;
  exports["demoChips"] = demoChips;
})(PS);

(function (exports) {
  exports.registerDialog = function (dialogElement) {
    return function () {
      console.log("Dialog.registerDialog");

      if (!dialogElement.showModal) {
        console.log("Dialog.showDialog - attempting dialog polyfill");
        dialogPolyfill.registerDialog(dialogElement);
      }

      return {};
    };
  };

  exports.showDialog = function (dialogElement) {
    return function () {
      console.log("Dialog.showDialog");

      if (!dialogElement.showModal) {
        console.log("Dialog.showDialog - attempting dialog polyfill");
        dialogPolyfill.registerDialog(dialogElement);
      }

      dialogElement.showModal();
      return {};
    };
  };

  exports.close = function (dialogElement) {
    return function () {
      console.log("Dialog.close");
      dialogElement.close();
      return {};
    };
  };
})(PS["Halogen.MDL.Dialog"] = PS["Halogen.MDL.Dialog"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Dialog"] = $PS["Halogen.MDL.Dialog"] || {};
  var exports = $PS["Halogen.MDL.Dialog"];
  var $foreign = $PS["Halogen.MDL.Dialog"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var showDialogByRef = function showDialogByRef(dictMonadEffect) {
    return function (ref) {
      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef(ref))(function (v) {
        if (v instanceof Data_Maybe.Just) {
          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))($foreign.showDialog(v.value0));
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
        }

        ;
        throw new Error("Failed pattern match at Halogen.MDL.Dialog (line 31, column 3 - line 33, column 25): " + [v.constructor.name]);
      });
    };
  };

  var registerDialogByRef = function registerDialogByRef(dictMonadEffect) {
    return function (ref) {
      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef(ref))(function (v) {
        if (v instanceof Data_Maybe.Just) {
          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))($foreign.registerDialog(v.value0));
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
        }

        ;
        throw new Error("Failed pattern match at Halogen.MDL.Dialog (line 24, column 3 - line 26, column 25): " + [v.constructor.name]);
      });
    };
  };

  var closeByRef = function closeByRef(dictMonadEffect) {
    return function (ref) {
      return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef(ref))(function (v) {
        if (v instanceof Data_Maybe.Just) {
          return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))($foreign.close(v.value0));
        }

        ;

        if (v instanceof Data_Maybe.Nothing) {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
        }

        ;
        throw new Error("Failed pattern match at Halogen.MDL.Dialog (line 38, column 3 - line 40, column 25): " + [v.constructor.name]);
      });
    };
  };

  var cl = {
    dialog: "mdl-dialog",
    dialogTitle: "mdl-dialog__title",
    dialogContent: "mdl-dialog__content",
    dialogActions: "mdl-dialog__actions",
    dialogActionsFullWidth: "mdl-dialog__actions--full-width"
  };
  exports["registerDialogByRef"] = registerDialogByRef;
  exports["showDialogByRef"] = showDialogByRef;
  exports["closeByRef"] = closeByRef;
  exports["cl"] = cl;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoDialogs"] = $PS["DemoDialogs"] || {};
  var exports = $PS["DemoDialogs"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var DOM_HTML_Indexed_ButtonType = $PS["DOM.HTML.Indexed.ButtonType"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL_Button = $PS["Halogen.MDL.Button"];
  var Halogen_MDL_Cell = $PS["Halogen.MDL.Cell"];
  var Halogen_MDL_Dialog = $PS["Halogen.MDL.Dialog"];
  var Halogen_MDL_Grid = $PS["Halogen.MDL.Grid"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var ShowDialogDemo1 = function () {
    function ShowDialogDemo1(value0) {
      this.value0 = value0;
    }

    ;

    ShowDialogDemo1.create = function (value0) {
      return new ShowDialogDemo1(value0);
    };

    return ShowDialogDemo1;
  }();

  var CloseDialogDemo1 = function () {
    function CloseDialogDemo1(value0) {
      this.value0 = value0;
    }

    ;

    CloseDialogDemo1.create = function (value0) {
      return new CloseDialogDemo1(value0);
    };

    return CloseDialogDemo1;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var init = function init(state) {
    return new Initialize(state);
  };

  var demoDialogs = function () {
    var renderDialogsHeader = Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Dialogs")])]);

    var renderDemoSection = function renderDemoSection(body) {
      return Halogen_MDL_Cell.el.cell12Col_(body);
    };

    var renderDemoHeader = function renderDemoHeader(name) {
      return Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h3_([Halogen_HTML_Core.text(name)])]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_MDL_Dialog.registerDialogByRef(Effect_Aff.monadEffectAff)("dialog-demo-1"))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof ShowDialogDemo1) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_MDL_Dialog.showDialogByRef(Effect_Aff.monadEffectAff)("dialog-demo-1"))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;

      if (v instanceof CloseDialogDemo1) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_MDL_Dialog.closeByRef(Effect_Aff.monadEffectAff)("dialog-demo-1"))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;
      throw new Error("Failed pattern match at DemoDialogs (line 125, column 10 - line 139, column 12): " + [v.constructor.name]);
    };

    var renderDialogDemo1 = [Halogen_HTML_Elements.button([Halogen_HTML_Properties.id_("show-dialog"), Halogen_HTML_Properties.type_(Halogen_HTML_Core.buttonTypeIsProp)(DOM_HTML_Indexed_ButtonType.ButtonButton.value), Halogen_HTML_Properties.classes([Halogen_MDL_Button.cl.button, Halogen_MDL_Button.cl.buttonRaised, Halogen_MDL_Button.cl.buttonColored]), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(ShowDialogDemo1.create))])([Halogen_HTML_Core.text("Show dialog")]), Halogen_HTML_Elements.dialog([Halogen_HTML_Properties.class_(Halogen_MDL_Dialog.cl.dialog), Halogen_HTML_Properties.ref("dialog-demo-1")])([Halogen_HTML_Elements.h4([Halogen_HTML_Properties.class_(Halogen_MDL_Dialog.cl.dialogTitle)])([Halogen_HTML_Core.text("Allow data collection?")]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(Halogen_MDL_Dialog.cl.dialogContent)])([Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Allowing us to collect data will let us get you the information you want faster.")])]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(Halogen_MDL_Dialog.cl.dialogActions)])([Halogen_HTML_Elements.button([Halogen_HTML_Properties.type_(Halogen_HTML_Core.buttonTypeIsProp)(DOM_HTML_Indexed_ButtonType.ButtonButton.value), Halogen_HTML_Properties.class_(Halogen_MDL_Button.cl.button)])([Halogen_HTML_Core.text("Agree")]), Halogen_HTML_Elements.button([Halogen_HTML_Properties.type_(Halogen_HTML_Core.buttonTypeIsProp)(DOM_HTML_Indexed_ButtonType.ButtonButton.value), Halogen_HTML_Properties.class_(Halogen_MDL_Button.cl.button), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(CloseDialogDemo1.create))])([Halogen_HTML_Core.text("Disagree")])])])];

    var render = function render(state) {
      return Halogen_MDL_Grid.el.grid_([renderDialogsHeader, renderDemoHeader("Simple dialog"), renderDemoSection(renderDialogDemo1)]);
    };

    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["ShowDialogDemo1"] = ShowDialogDemo1;
  exports["CloseDialogDemo1"] = CloseDialogDemo1;
  exports["Initialize"] = Initialize;
  exports["init"] = init;
  exports["demoDialogs"] = demoDialogs;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoHome"] = $PS["DemoHome"] || {};
  var exports = $PS["DemoHome"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_MDL_Cell = $PS["Halogen.MDL.Cell"];
  var Halogen_MDL_Grid = $PS["Halogen.MDL.Grid"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var init = function init(v) {
    return new Initialize(Data_Unit.unit);
  };

  var demoHome = function () {
    var renderHomeHeader = Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Halogen MDL")])]);

    var render = function render(state) {
      return Halogen_MDL_Grid.el.grid_([renderHomeHeader]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Nothing.value;
    };

    var initialState = function initialState(v) {
      return Data_Unit.unit;
    };

    var $$eval = function $$eval(v) {
      return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
    };

    return Halogen_Component.component(Halogen_HTML_Core.bifunctorHTML)({
      initialState: initialState,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["Initialize"] = Initialize;
  exports["init"] = init;
  exports["demoHome"] = demoHome;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.List"] = $PS["Halogen.MDL.List"] || {};
  var exports = $PS["Halogen.MDL.List"];
  var cl = {
    list: "mdl-list",
    listItem: "mdl-list__item",
    listItemSubTitle: "mdl-list__item-sub-title",
    listItemTwoLine: "mdl-list__item--two-line",
    listItemThreeLine: "mdl-list__item--three-line",
    listItemPrimaryContent: "mdl-list__item-primary-content",
    listItemAvatar: "mdl-list__item-avatar",
    listItemIcon: "mdl-list__item-icon",
    listItemSecondaryContent: "mdl-list__item-secondary-content",
    listItemSecondaryInfo: "mdl-list__item-secondary-info",
    listItemSecondaryAction: "mdl-list__item-secondary-action",
    listItemTextBody: "mdl-list__item-text-body"
  };
  exports["cl"] = cl;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoLists"] = $PS["DemoLists"] || {};
  var exports = $PS["DemoLists"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL_Cell = $PS["Halogen.MDL.Cell"];
  var Halogen_MDL_Grid = $PS["Halogen.MDL.Grid"];
  var Halogen_MDL_List = $PS["Halogen.MDL.List"];
  var Halogen_MDL_MaterialIcon = $PS["Halogen.MDL.MaterialIcon"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var init = function init(state) {
    return new Initialize(state);
  };

  var demoLists = function () {
    var renderListsHeader = Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Lists")])]);
    var renderListExample = [Halogen_HTML_Elements.ul([Halogen_HTML_Properties.class_(Halogen_MDL_List.cl.list)])([Halogen_HTML_Elements.li([Halogen_HTML_Properties.classes([Halogen_MDL_List.cl.listItem, Halogen_MDL_List.cl.listItemTwoLine])])([Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_List.cl.listItemPrimaryContent)])([Halogen_HTML_Elements.i([Halogen_HTML_Properties.classes([Halogen_MDL_MaterialIcon.cl.materialIcons, Halogen_MDL_List.cl.listItemAvatar])])([Halogen_HTML_Core.text(Halogen_MDL_MaterialIcon.str.person)]), Halogen_HTML_Elements.span_([Halogen_HTML_Core.text("Bryan Cranston")]), Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_List.cl.listItemSubTitle)])([Halogen_HTML_Core.text("62 Episodes")])]), Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_List.cl.listItemSecondaryContent)])([Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_List.cl.listItemSecondaryInfo)])([Halogen_HTML_Core.text("Actor")]), Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_List.cl.listItemSecondaryAction)])([Halogen_HTML_Elements.a([Halogen_HTML_Properties.class_(Halogen_MDL_List.cl.listItemSecondaryAction)])([Halogen_HTML_Elements.i([Halogen_HTML_Properties.class_(Halogen_MDL_MaterialIcon.cl.materialIcons)])([Halogen_HTML_Core.text(Halogen_MDL_MaterialIcon.str.star)])])])])]), Halogen_HTML_Elements.li([Halogen_HTML_Properties.classes([Halogen_MDL_List.cl.listItem, Halogen_MDL_List.cl.listItemTwoLine])])([Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_List.cl.listItemPrimaryContent)])([Halogen_HTML_Elements.i([Halogen_HTML_Properties.classes([Halogen_MDL_MaterialIcon.cl.materialIcons, Halogen_MDL_List.cl.listItemAvatar])])([Halogen_HTML_Core.text(Halogen_MDL_MaterialIcon.str.person)]), Halogen_HTML_Elements.span_([Halogen_HTML_Core.text("Aaron Paul")]), Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_List.cl.listItemSubTitle)])([Halogen_HTML_Core.text("62 Episodes")])]), Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_List.cl.listItemSecondaryContent)])([Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_List.cl.listItemSecondaryInfo)])([Halogen_HTML_Core.text("Actor")]), Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(Halogen_MDL_List.cl.listItemSecondaryAction)])([Halogen_HTML_Elements.a([Halogen_HTML_Properties.class_(Halogen_MDL_List.cl.listItemSecondaryAction)])([Halogen_HTML_Elements.i([Halogen_HTML_Properties.class_(Halogen_MDL_MaterialIcon.cl.materialIcons)])([Halogen_HTML_Core.text(Halogen_MDL_MaterialIcon.str.star)])])])])])])];

    var renderDemoSection = function renderDemoSection(body) {
      return Halogen_MDL_Cell.el.cell4Col_(body);
    };

    var renderDemoHeader = function renderDemoHeader(name) {
      return Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h3_([Halogen_HTML_Core.text(name)])]);
    };

    var render = function render(state) {
      return Halogen_MDL_Grid.el.grid_([renderListsHeader, renderDemoHeader("List example"), renderDemoSection(renderListExample)]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;
      throw new Error("Failed pattern match at DemoLists (line 126, column 10 - line 133, column 12): " + [v.constructor.name]);
    };

    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["Initialize"] = Initialize;
  exports["init"] = init;
  exports["demoLists"] = demoLists;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Menu"] = $PS["Halogen.MDL.Menu"] || {};
  var exports = $PS["Halogen.MDL.Menu"];
  var cl = {
    menu: "mdl-menu",
    jsMenu: "mdl-js-menu",
    menuItem: "mdl-menu__item",
    menuItemFullBleedDivider: "mdl-menu__item--full-bleed-divider",
    menuTopLeft: "mdl-menu--top-left",
    menuTopRight: "mdl-menu--top-right",
    menuBottomLeft: "mdl-menu--bottom-left",
    menuBottomRight: "mdl-menu--bottom-right"
  };
  exports["cl"] = cl;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoMenus"] = $PS["DemoMenus"] || {};
  var exports = $PS["DemoMenus"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL = $PS["Halogen.MDL"];
  var Halogen_MDL_Button = $PS["Halogen.MDL.Button"];
  var Halogen_MDL_Cell = $PS["Halogen.MDL.Cell"];
  var Halogen_MDL_Grid = $PS["Halogen.MDL.Grid"];
  var Halogen_MDL_MaterialIcon = $PS["Halogen.MDL.MaterialIcon"];
  var Halogen_MDL_Menu = $PS["Halogen.MDL.Menu"];
  var Halogen_MDL_RippleEffect = $PS["Halogen.MDL.RippleEffect"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var init = Initialize.create;

  var demoMenus = function () {
    var render = function render(state) {
      return Halogen_MDL_Grid.el.grid_([Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h3_([Halogen_HTML_Core.text("Menus")])]), Halogen_MDL_Cell.el.cell3Col_([Halogen_HTML_Elements.button([Halogen_HTML_Properties.id_("demo-menu-lower-left"), Halogen_HTML_Properties.classes([Halogen_MDL_Button.cl.button, Halogen_MDL_Button.cl.jsButton, Halogen_MDL_Button.cl.buttonIcon])])([Halogen_HTML_Elements.i([Halogen_HTML_Properties.class_(Halogen_MDL_MaterialIcon.cl.materialIcons)])([Halogen_HTML_Core.text(Halogen_MDL_MaterialIcon.str.moreVert)])]), Halogen_HTML_Elements.ul([Halogen_HTML_Properties.classes([Halogen_MDL_Menu.cl.menu, Halogen_MDL_Menu.cl.menuBottomLeft, Halogen_MDL_Menu.cl.jsMenu, Halogen_MDL_RippleEffect.cl.jsRippleEffect]), Halogen_HTML_Properties.attr(Halogen_MDL["attr"]["for"])("demo-menu-lower-left")])([Halogen_HTML_Elements.li([Halogen_HTML_Properties.class_(Halogen_MDL_Menu.cl.menuItem)])([Halogen_HTML_Core.text("Some action")]), Halogen_HTML_Elements.li([Halogen_HTML_Properties.classes([Halogen_MDL_Menu.cl.menuItem, Halogen_MDL_Menu.cl.menuItemFullBleedDivider])])([Halogen_HTML_Core.text("Another action")]), Halogen_HTML_Elements.li([Halogen_HTML_Properties.class_(Halogen_MDL_Menu.cl.menuItem), Halogen_HTML_Properties.attr(Halogen_MDL.attr.disabled)("true")])([Halogen_HTML_Core.text("Some action")]), Halogen_HTML_Elements.li([Halogen_HTML_Properties.classes([Halogen_MDL_Menu.cl.menuItem])])([Halogen_HTML_Core.text("Yet another action")])])]), Halogen_MDL_Cell.el.cell12Col_([])]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Halogen_MDL.upgradeElementsByClassNames([Halogen_MDL_Menu.cl.jsMenu, Halogen_MDL_Button.cl.jsButton])))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;
      throw new Error("Failed pattern match at DemoMenus (line 102, column 10 - line 110, column 12): " + [v.constructor.name]);
    };

    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["Initialize"] = Initialize;
  exports["init"] = init;
  exports["demoMenus"] = demoMenus;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Progress"] = $PS["Halogen.MDL.Progress"] || {};
  var exports = $PS["Halogen.MDL.Progress"];
  var cl = {
    progress: "mdl-progress",
    jsProgress: "mdl-js-progress",
    progressIndeterminate: "mdl-progress__indeterminate"
  };
  exports["cl"] = cl;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoProgress"] = $PS["DemoProgress"] || {};
  var exports = $PS["DemoProgress"];
  var CSS_Geometry = $PS["CSS.Geometry"];
  var CSS_Size = $PS["CSS.Size"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_CSS = $PS["Halogen.HTML.CSS"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL = $PS["Halogen.MDL"];
  var Halogen_MDL_Cell = $PS["Halogen.MDL.Cell"];
  var Halogen_MDL_Grid = $PS["Halogen.MDL.Grid"];
  var Halogen_MDL_Progress = $PS["Halogen.MDL.Progress"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var init = Initialize.create;

  var demoProgress = function () {
    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var render = function render(state) {
      return Halogen_MDL_Grid.el.grid_([Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h3_([Halogen_HTML_Core.text("Determinate progress bar")])]), Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.div([Halogen_HTML_CSS.style(CSS_Geometry.width(CSS_Size.px(250.0))), Halogen_HTML_Properties.classes([Halogen_MDL_Progress.cl.progress, Halogen_MDL_Progress.cl.jsProgress]), Halogen_HTML_Properties.ref("progress-ref")])([])]), Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h3_([Halogen_HTML_Core.text("Indeterminate progress bar")])]), Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.div([Halogen_HTML_CSS.style(CSS_Geometry.width(CSS_Size.px(250.0))), Halogen_HTML_Properties.classes([Halogen_MDL_Progress.cl.progress, Halogen_MDL_Progress.cl.jsProgress, Halogen_MDL_Progress.cl.progressIndeterminate])])([])])]);
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Halogen_MDL.upgradeElementsByClassName(Halogen_MDL_Progress.cl.jsProgress)))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;
      throw new Error("Failed pattern match at DemoProgress (line 88, column 10 - line 112, column 12): " + [v.constructor.name]);
    };

    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["Initialize"] = Initialize;
  exports["init"] = init;
  exports["demoProgress"] = demoProgress;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Slider"] = $PS["Halogen.MDL.Slider"] || {};
  var exports = $PS["Halogen.MDL.Slider"];
  var CSS_Flexbox = $PS["CSS.Flexbox"];
  var CSS_Size = $PS["CSS.Size"];
  var CSS_Stylesheet = $PS["CSS.Stylesheet"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var DOM_HTML_Indexed_StepValue = $PS["DOM.HTML.Indexed.StepValue"];
  var Data_Int = $PS["Data.Int"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Number = $PS["Data.Number"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_CSS = $PS["Halogen.HTML.CSS"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var OnValueInput = function () {
    function OnValueInput(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnValueInput.create = function (value0) {
      return function (value1) {
        return new OnValueInput(value0, value1);
      };
    };

    return OnValueInput;
  }();

  var SetValue = function () {
    function SetValue(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    SetValue.create = function (value0) {
      return function (value1) {
        return new SetValue(value0, value1);
      };
    };

    return SetValue;
  }();

  var GetValue = function () {
    function GetValue(value0) {
      this.value0 = value0;
    }

    ;

    GetValue.create = function (value0) {
      return new GetValue(value0);
    };

    return GetValue;
  }();

  var ValueChanged = function () {
    function ValueChanged(value0) {
      this.value0 = value0;
    }

    ;

    ValueChanged.create = function (value0) {
      return new ValueChanged(value0);
    };

    return ValueChanged;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var init = Initialize.create;
  var cl = {
    slider: "mdl-slider",
    jsSlider: "mdl-js-slider",
    sliderContainer: "mdl-slider__container",
    sliderBackgroundFlex: "mdl-slider__background-flex",
    sliderBackgroundLower: "mdl-slider__background-lower",
    sliderBackgroundUpper: "mdl-slider__background-upper",
    isUpgraded: "is-upgraded"
  };
  var attr = {
    dataUpgraded: "data-upgraded"
  };

  var slider = function () {
    var receiver = function receiver(v) {
      return Data_Maybe.Nothing.value;
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var getLowerFraction = function getLowerFraction(state) {
      return (state.value - state.min) / (state.max - state.min);
    };

    var getUpperFraction = function getUpperFraction(state) {
      return 1.0 - getLowerFraction(state);
    };

    var getBackgroundUpperFlexGrow = function getBackgroundUpperFlexGrow(state) {
      return Data_Int.round(1000.0 * getUpperFraction(state));
    };

    var getBackgroundLowerFlexGrow = function getBackgroundLowerFlexGrow(state) {
      return Data_Int.round(1000.0 * getLowerFraction(state));
    };

    var render = function render(state) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(cl.sliderContainer)])([Halogen_HTML_Elements.input([Halogen_HTML_Properties.classes([cl.slider, cl.jsSlider, cl.isUpgraded]), Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputRange.value), Halogen_HTML_Properties.min(state.min), Halogen_HTML_Properties.max(state.max), Halogen_HTML_Properties.step(new DOM_HTML_Indexed_StepValue.Step(state.step)), Halogen_HTML_Properties.value(Data_Show.show(Data_Show.showNumber)(state.value)), Halogen_HTML_Properties.tabIndex(0), Halogen_HTML_Properties.attr(attr.dataUpgraded)(",MaterialSlider"), Halogen_HTML_Properties.disabled(state.disabled), Halogen_HTML_Events.onValueInput(Halogen_HTML_Events.input(OnValueInput.create)), Halogen_HTML_Properties.ref("slider-ref")]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(cl.sliderBackgroundFlex)])([Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(cl.sliderBackgroundLower), Halogen_HTML_CSS.style(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Flexbox.flexShrink(1))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Flexbox.flexGrow(getBackgroundLowerFlexGrow(state)))(function () {
          return CSS_Flexbox.flexBasis(CSS_Size.pct(0.0));
        });
      }))])([]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(cl.sliderBackgroundUpper), Halogen_HTML_CSS.style(Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Flexbox.flexShrink(1))(function () {
        return Control_Bind.discard(Control_Bind.discardUnit)(CSS_Stylesheet.bindStyleM)(CSS_Flexbox.flexGrow(getBackgroundUpperFlexGrow(state)))(function () {
          return CSS_Flexbox.flexBasis(CSS_Size.pct(0.0));
        });
      }))])([])])]);
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v1))(function () {
            return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(function () {
              var $23 = v1.value !== v1.value;

              if ($23) {
                return Halogen_Query_HalogenM.raise(new ValueChanged(v1.value));
              }

              ;
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
            }())(function () {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
            });
          });
        });
      }

      ;

      if (v instanceof OnValueInput) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(function () {
            var v2 = Data_Number.fromString(v.value0);

            if (v2 instanceof Data_Maybe.Just && v1.value !== v2.value0) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v3) {
                var $28 = {};

                for (var $29 in v3) {
                  if ({}.hasOwnProperty.call(v3, $29)) {
                    $28[$29] = v3[$29];
                  }

                  ;
                }

                ;
                $28.value = v2.value0;
                return $28;
              }))(function () {
                return Halogen_Query_HalogenM.raise(new ValueChanged(v2.value0));
              });
            }

            ;
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          }())(function () {
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
          });
        });
      }

      ;

      if (v instanceof SetValue) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(function () {
            var $35 = v1.value !== v.value0;

            if ($35) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v2) {
                var $36 = {};

                for (var $37 in v2) {
                  if ({}.hasOwnProperty.call(v2, $37)) {
                    $36[$37] = v2[$37];
                  }

                  ;
                }

                ;
                $36.value = v.value0;
                return $36;
              }))(function () {
                return Halogen_Query_HalogenM.raise(new ValueChanged(v.value0));
              });
            }

            ;
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          }())(function () {
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
          });
        });
      }

      ;

      if (v instanceof GetValue) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.get(Halogen_Query_HalogenM.monadStateHalogenM))(function (v1) {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0(v1.value));
        });
      }

      ;
      throw new Error("Failed pattern match at Halogen.MDL.Slider (line 179, column 10 - line 213, column 26): " + [v.constructor.name]);
    };

    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["cl"] = cl;
  exports["attr"] = attr;
  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["OnValueInput"] = OnValueInput;
  exports["SetValue"] = SetValue;
  exports["GetValue"] = GetValue;
  exports["Initialize"] = Initialize;
  exports["ValueChanged"] = ValueChanged;
  exports["init"] = init;
  exports["slider"] = slider;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoSliders"] = $PS["DemoSliders"] || {};
  var exports = $PS["DemoSliders"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_MDL_Cell = $PS["Halogen.MDL.Cell"];
  var Halogen_MDL_Grid = $PS["Halogen.MDL.Grid"];
  var Halogen_MDL_Slider = $PS["Halogen.MDL.Slider"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var OnSlider1Message = function () {
    function OnSlider1Message(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnSlider1Message.create = function (value0) {
      return function (value1) {
        return new OnSlider1Message(value0, value1);
      };
    };

    return OnSlider1Message;
  }();

  var OnSlider2Message = function () {
    function OnSlider2Message(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnSlider2Message.create = function (value0) {
      return function (value1) {
        return new OnSlider2Message(value0, value1);
      };
    };

    return OnSlider2Message;
  }();

  var OnSlider3Message = function () {
    function OnSlider3Message(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnSlider3Message.create = function (value0) {
      return function (value1) {
        return new OnSlider3Message(value0, value1);
      };
    };

    return OnSlider3Message;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var Slider1Slot = function () {
    function Slider1Slot() {}

    ;
    Slider1Slot.value = new Slider1Slot();
    return Slider1Slot;
  }();

  var Slider2Slot = function () {
    function Slider2Slot() {}

    ;
    Slider2Slot.value = new Slider2Slot();
    return Slider2Slot;
  }();

  var Slider3Slot = function () {
    function Slider3Slot() {}

    ;
    Slider3Slot.value = new Slider3Slot();
    return Slider3Slot;
  }();

  var init = Initialize.create;
  var eqChildSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      if (x instanceof Slider1Slot && y instanceof Slider1Slot) {
        return true;
      }

      ;

      if (x instanceof Slider2Slot && y instanceof Slider2Slot) {
        return true;
      }

      ;

      if (x instanceof Slider3Slot && y instanceof Slider3Slot) {
        return true;
      }

      ;
      return false;
    };
  });
  var ordChildSlot = new Data_Ord.Ord(function () {
    return eqChildSlot;
  }, function (x) {
    return function (y) {
      if (x instanceof Slider1Slot && y instanceof Slider1Slot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Slider1Slot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Slider1Slot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Slider2Slot && y instanceof Slider2Slot) {
        return Data_Ordering.EQ.value;
      }

      ;

      if (x instanceof Slider2Slot) {
        return Data_Ordering.LT.value;
      }

      ;

      if (y instanceof Slider2Slot) {
        return Data_Ordering.GT.value;
      }

      ;

      if (x instanceof Slider3Slot && y instanceof Slider3Slot) {
        return Data_Ordering.EQ.value;
      }

      ;
      throw new Error("Failed pattern match at DemoSliders (line 41, column 8 - line 41, column 46): " + [x.constructor.name, y.constructor.name]);
    };
  });

  var demoSliders = function () {
    var render = function render(state) {
      return Halogen_MDL_Grid.el.grid_([Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h3_([Halogen_HTML_Core.text("Sliders")])]), Halogen_MDL_Cell.el.cell4Col_([Halogen_HTML.slot(Slider1Slot.value)(Halogen_MDL_Slider.slider)(Halogen_MDL_Slider.init({
        min: 0.0,
        max: 100.0,
        value: state.slider1,
        step: 1.0,
        disabled: false
      }))(Halogen_HTML_Events.input(OnSlider1Message.create))]), Halogen_MDL_Cell.el.cell8Col_([Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Slider value: " + Data_Show.show(Data_Show.showNumber)(state.slider1))])]), Halogen_MDL_Cell.el.cell4Col_([Halogen_HTML.slot(Slider2Slot.value)(Halogen_MDL_Slider.slider)(Halogen_MDL_Slider.init({
        min: 0.0,
        max: 100.0,
        value: state.slider2,
        step: 1.0,
        disabled: false
      }))(Halogen_HTML_Events.input(OnSlider2Message.create))]), Halogen_MDL_Cell.el.cell8Col_([Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Slider value: " + Data_Show.show(Data_Show.showNumber)(state.slider2))])]), Halogen_MDL_Cell.el.cell4Col_([Halogen_HTML.slot(Slider3Slot.value)(Halogen_MDL_Slider.slider)(Halogen_MDL_Slider.init({
        min: 0.0,
        max: 100.0,
        value: state.slider3,
        step: 1.0,
        disabled: true
      }))(Halogen_HTML_Events.input(OnSlider3Message.create))]), Halogen_MDL_Cell.el.cell8Col_([Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Slider value: " + Data_Show.show(Data_Show.showNumber)(state.slider3))])])]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof OnSlider1Message) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
          var $24 = {};

          for (var $25 in v1) {
            if ({}.hasOwnProperty.call(v1, $25)) {
              $24[$25] = v1[$25];
            }

            ;
          }

          ;
          $24.slider1 = v.value0.value0;
          return $24;
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof OnSlider2Message) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
          var $30 = {};

          for (var $31 in v1) {
            if ({}.hasOwnProperty.call(v1, $31)) {
              $30[$31] = v1[$31];
            }

            ;
          }

          ;
          $30.slider2 = v.value0.value0;
          return $30;
        }))(function () {
          return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.query(eqChildSlot)(Slider3Slot.value)(Halogen_Query.action(Halogen_MDL_Slider.SetValue.create(v.value0.value0))))(function (v1) {
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
          });
        });
      }

      ;

      if (v instanceof OnSlider3Message) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
          var $36 = {};

          for (var $37 in v1) {
            if ({}.hasOwnProperty.call(v1, $37)) {
              $36[$37] = v1[$37];
            }

            ;
          }

          ;
          $36.slider3 = v.value0.value0;
          return $36;
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;
      throw new Error("Failed pattern match at DemoSliders (line 108, column 10 - line 128, column 12): " + [v.constructor.name]);
    };

    return Halogen_Component.lifecycleParentComponent(ordChildSlot)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["OnSlider1Message"] = OnSlider1Message;
  exports["OnSlider2Message"] = OnSlider2Message;
  exports["OnSlider3Message"] = OnSlider3Message;
  exports["Initialize"] = Initialize;
  exports["Slider1Slot"] = Slider1Slot;
  exports["Slider2Slot"] = Slider2Slot;
  exports["Slider3Slot"] = Slider3Slot;
  exports["init"] = init;
  exports["demoSliders"] = demoSliders;
  exports["eqChildSlot"] = eqChildSlot;
  exports["ordChildSlot"] = ordChildSlot;
})(PS);

(function (exports) {
  exports.showSnackbarNoAction = function (element) {
    return function (data) {
      element.MaterialSnackbar.showSnackbar(data);
      return {};
    };
  };

  exports.showSnackbarWithAction = function (element) {
    return function (data) {
      element.MaterialSnackbar.showSnackbar(data);
      return {};
    };
  };
})(PS["Halogen.MDL.Snackbar"] = PS["Halogen.MDL.Snackbar"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Snackbar"] = $PS["Halogen.MDL.Snackbar"] || {};
  var exports = $PS["Halogen.MDL.Snackbar"];
  var $foreign = $PS["Halogen.MDL.Snackbar"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var showSnackbarWithActionByRef = function showSnackbarWithActionByRef(dictMonadEffect) {
    return function (ref) {
      return function (data_) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef(ref))(function (v) {
          if (v instanceof Data_Maybe.Just) {
            return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))($foreign.showSnackbarWithAction(v.value0)(data_));
          }

          ;

          if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          }

          ;
          throw new Error("Failed pattern match at Halogen.MDL.Snackbar (line 38, column 3 - line 40, column 25): " + [v.constructor.name]);
        });
      };
    };
  };

  var showSnackbarNoActionByRef = function showSnackbarNoActionByRef(dictMonadEffect) {
    return function (ref) {
      return function (data_) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef(ref))(function (v) {
          if (v instanceof Data_Maybe.Just) {
            return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(dictMonadEffect))($foreign.showSnackbarNoAction(v.value0)(data_));
          }

          ;

          if (v instanceof Data_Maybe.Nothing) {
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
          }

          ;
          throw new Error("Failed pattern match at Halogen.MDL.Snackbar (line 31, column 3 - line 33, column 25): " + [v.constructor.name]);
        });
      };
    };
  };

  var cl = {
    snackbar: "mdl-snackbar",
    jsSnackbar: "mdl-js-snackbar",
    snackbarText: "mdl-snackbar__text",
    snackbarAction: "mdl-snackbar__action",
    snackbarActive: "mdl-snackbar--active"
  };
  exports["showSnackbarNoActionByRef"] = showSnackbarNoActionByRef;
  exports["showSnackbarWithActionByRef"] = showSnackbarWithActionByRef;
  exports["cl"] = cl;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoSnackbars"] = $PS["DemoSnackbars"] || {};
  var exports = $PS["DemoSnackbars"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var DOM_HTML_Indexed_ButtonType = $PS["DOM.HTML.Indexed.ButtonType"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL = $PS["Halogen.MDL"];
  var Halogen_MDL_Button = $PS["Halogen.MDL.Button"];
  var Halogen_MDL_Cell = $PS["Halogen.MDL.Cell"];
  var Halogen_MDL_Grid = $PS["Halogen.MDL.Grid"];
  var Halogen_MDL_RippleEffect = $PS["Halogen.MDL.RippleEffect"];
  var Halogen_MDL_Snackbar = $PS["Halogen.MDL.Snackbar"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var OnButton1Click = function () {
    function OnButton1Click(value0) {
      this.value0 = value0;
    }

    ;

    OnButton1Click.create = function (value0) {
      return new OnButton1Click(value0);
    };

    return OnButton1Click;
  }();

  var OnButton2Click = function () {
    function OnButton2Click(value0) {
      this.value0 = value0;
    }

    ;

    OnButton2Click.create = function (value0) {
      return new OnButton2Click(value0);
    };

    return OnButton2Click;
  }();

  var OnSnackbar2Action = function () {
    function OnSnackbar2Action(value0) {
      this.value0 = value0;
    }

    ;

    OnSnackbar2Action.create = function (value0) {
      return new OnSnackbar2Action(value0);
    };

    return OnSnackbar2Action;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var init = Initialize.create;

  var demoSnackbars = function () {
    var render = function render(state) {
      return Halogen_MDL_Grid.el.grid_([Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h3_([Halogen_HTML_Core.text("Snackbars")])]), Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.button([Halogen_HTML_Properties.classes([Halogen_MDL_Button.cl.button, Halogen_MDL_Button.cl.jsButton, Halogen_MDL_Button.cl.buttonRaised, Halogen_MDL_RippleEffect.cl.jsRippleEffect]), Halogen_HTML_Properties.type_(Halogen_HTML_Core.buttonTypeIsProp)(DOM_HTML_Indexed_ButtonType.ButtonButton.value), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(OnButton1Click.create))])([Halogen_HTML_Core.text("Show snackbar no action")]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Snackbar.cl.snackbar, Halogen_MDL_Snackbar.cl.jsSnackbar]), Halogen_HTML_Properties.ref("snackbar-1-ref")])([Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(Halogen_MDL_Snackbar.cl.snackbarText)])([Halogen_HTML_Core.text("")]), Halogen_HTML_Elements.button([Halogen_HTML_Properties.class_(Halogen_MDL_Snackbar.cl.snackbarAction)])([Halogen_HTML_Core.text("")])])]), Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.button([Halogen_HTML_Properties.classes([Halogen_MDL_Button.cl.button, Halogen_MDL_Button.cl.jsButton, Halogen_MDL_Button.cl.buttonRaised, Halogen_MDL_RippleEffect.cl.jsRippleEffect]), Halogen_HTML_Properties.type_(Halogen_HTML_Core.buttonTypeIsProp)(DOM_HTML_Indexed_ButtonType.ButtonButton.value), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(OnButton2Click.create))])([Halogen_HTML_Core.text("Show snackbar with action")]), Halogen_HTML_Elements.div_([Halogen_HTML_Core.text("Action has been clicked " + (Data_Show.show(Data_Show.showInt)(state.snackbar2ActionCount) + " time(s)"))]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Snackbar.cl.snackbar, Halogen_MDL_Snackbar.cl.jsSnackbar]), Halogen_HTML_Properties.ref("snackbar-2-ref")])([Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(Halogen_MDL_Snackbar.cl.snackbarText)])([Halogen_HTML_Core.text("")]), Halogen_HTML_Elements.button([Halogen_HTML_Properties.class_(Halogen_MDL_Snackbar.cl.snackbarAction), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(OnSnackbar2Action.create))])([Halogen_HTML_Core.text("")])])])]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Halogen_MDL.upgradeElementsByClassNames([Halogen_MDL_Snackbar.cl.jsSnackbar, Halogen_MDL_Button.cl.jsButton])))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof OnButton1Click) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_MDL_Snackbar.showSnackbarNoActionByRef(Effect_Aff.monadEffectAff)("snackbar-1-ref")({
          message: "Snackbar 1 (no action)",
          timeout: 2750
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;

      if (v instanceof OnButton2Click) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_MDL_Snackbar.showSnackbarWithActionByRef(Effect_Aff.monadEffectAff)("snackbar-2-ref")({
          message: "Snackbar 2 (with action)",
          timeout: 2750,
          actionHandler: function actionHandler(v1) {
            return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
          },
          actionText: "Action"
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;

      if (v instanceof OnSnackbar2Action) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
          var $16 = {};

          for (var $17 in state) {
            if ({}.hasOwnProperty.call(state, $17)) {
              $16[$17] = state[$17];
            }

            ;
          }

          ;
          $16.snackbar2ActionCount = state.snackbar2ActionCount + 1 | 0;
          return $16;
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;
      throw new Error("Failed pattern match at DemoSnackbars (line 121, column 10 - line 148, column 12): " + [v.constructor.name]);
    };

    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["OnButton1Click"] = OnButton1Click;
  exports["OnButton2Click"] = OnButton2Click;
  exports["OnSnackbar2Action"] = OnSnackbar2Action;
  exports["Initialize"] = Initialize;
  exports["init"] = init;
  exports["demoSnackbars"] = demoSnackbars;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoSpinners"] = $PS["DemoSpinners"] || {};
  var exports = $PS["DemoSpinners"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL = $PS["Halogen.MDL"];
  var Halogen_MDL_Cell = $PS["Halogen.MDL.Cell"];
  var Halogen_MDL_Grid = $PS["Halogen.MDL.Grid"];
  var Halogen_MDL_Spinner = $PS["Halogen.MDL.Spinner"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var init = Initialize.create;

  var demoSpinners = function () {
    var render = function render(state) {
      return Halogen_MDL_Grid.el.grid_([Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h3_([Halogen_HTML_Core.text("Spinners")])]), Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Spinner.cl.spinner, Halogen_MDL_Spinner.cl.jsSpinner, Halogen_MDL_Spinner.cl.isActive])])([])]), Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Spinner.cl.spinner, Halogen_MDL_Spinner.cl.jsSpinner, Halogen_MDL_Spinner.cl.spinnerSingleColor, Halogen_MDL_Spinner.cl.isActive])])([])])]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Halogen_MDL.upgradeElementsByClassName(Halogen_MDL_Spinner.cl.jsSpinner)))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;
      throw new Error("Failed pattern match at DemoSpinners (line 77, column 10 - line 85, column 12): " + [v.constructor.name]);
    };

    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["Initialize"] = Initialize;
  exports["init"] = init;
  exports["demoSpinners"] = demoSpinners;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Tabs"] = $PS["Halogen.MDL.Tabs"] || {};
  var exports = $PS["Halogen.MDL.Tabs"];
  var cl = {
    tabs: "mdl-tabs",
    jsTabs: "mdl-js-tabs",
    tabsTabBar: "mdl-tabs__tab-bar",
    tabsTab: "mdl-tabs__tab",
    isActive: "is-active",
    tabsPanel: "mdl-tabs__panel"
  };
  exports["cl"] = cl;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoTabs"] = $PS["DemoTabs"] || {};
  var exports = $PS["DemoTabs"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL = $PS["Halogen.MDL"];
  var Halogen_MDL_Cell = $PS["Halogen.MDL.Cell"];
  var Halogen_MDL_Grid = $PS["Halogen.MDL.Grid"];
  var Halogen_MDL_RippleEffect = $PS["Halogen.MDL.RippleEffect"];
  var Halogen_MDL_Tabs = $PS["Halogen.MDL.Tabs"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var About = function () {
    function About() {}

    ;
    About.value = new About();
    return About;
  }();

  var Members = function () {
    function Members() {}

    ;
    Members.value = new Members();
    return Members;
  }();

  var Albums = function () {
    function Albums() {}

    ;
    Albums.value = new Albums();
    return Albums;
  }();

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var UpdateCurrentTab = function () {
    function UpdateCurrentTab(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateCurrentTab.create = function (value0) {
      return function (value1) {
        return new UpdateCurrentTab(value0, value1);
      };
    };

    return UpdateCurrentTab;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var showTab = new Data_Show.Show(function (v) {
    if (v instanceof About) {
      return "About";
    }

    ;

    if (v instanceof Members) {
      return "Members";
    }

    ;

    if (v instanceof Albums) {
      return "Albums";
    }

    ;
    throw new Error("Failed pattern match at DemoTabs (line 27, column 1 - line 27, column 29): " + [v.constructor.name]);
  });

  var init = function init(state) {
    return new Initialize(state);
  };

  var eqTab = new Data_Eq.Eq(function (x) {
    return function (y) {
      if (x instanceof About && y instanceof About) {
        return true;
      }

      ;

      if (x instanceof Members && y instanceof Members) {
        return true;
      }

      ;

      if (x instanceof Albums && y instanceof Albums) {
        return true;
      }

      ;
      return false;
    };
  });

  var isCurrentTab = function isCurrentTab(state) {
    return function (tab) {
      return Data_Eq.eq(eqTab)(state.currentTab)(tab);
    };
  };

  var demoTabs = function () {
    var renderTabsHeader = Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h1_([Halogen_HTML_Core.text("Tabs")])]);

    var renderDemoSection = function renderDemoSection(body) {
      return Halogen_MDL_Cell.el.cell6Col_(body);
    };

    var renderDemoHeader = function renderDemoHeader(name) {
      return Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h3_([Halogen_HTML_Core.text(name)])]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var getActiveClass = function getActiveClass(state) {
      return function (tab) {
        var $14 = isCurrentTab(state)(tab);

        if ($14) {
          return [Halogen_MDL_Tabs.cl.isActive];
        }

        ;
        return [];
      };
    };

    var renderExampleWithRipple = function renderExampleWithRipple(state) {
      return [Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Tabs.cl.tabs, Halogen_MDL_Tabs.cl.jsTabs, Halogen_MDL_RippleEffect.cl.jsRippleEffect])])([Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(Halogen_MDL_Tabs.cl.tabsTabBar)])([Halogen_HTML_Elements.a([Halogen_HTML_Properties.href("#about-panel"), Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)([Halogen_MDL_Tabs.cl.tabsTab])(getActiveClass(state)(About.value))), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(UpdateCurrentTab.create(About.value)))])([Halogen_HTML_Core.text("Beatles")]), Halogen_HTML_Elements.a([Halogen_HTML_Properties.href("#members-panel"), Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)([Halogen_MDL_Tabs.cl.tabsTab])(getActiveClass(state)(Members.value))), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(UpdateCurrentTab.create(Members.value)))])([Halogen_HTML_Core.text("Members")]), Halogen_HTML_Elements.a([Halogen_HTML_Properties.href("#albums-panel"), Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)([Halogen_MDL_Tabs.cl.tabsTab])(getActiveClass(state)(Albums.value))), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(UpdateCurrentTab.create(Albums.value)))])([Halogen_HTML_Core.text("Discography")])]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)([Halogen_MDL_Tabs.cl.tabsPanel])(getActiveClass(state)(About.value))), Halogen_HTML_Properties.id_("about-panel")])([Halogen_HTML_Elements.p_([Halogen_HTML_Elements.b_([Halogen_HTML_Core.text("The Beatles")]), Halogen_HTML_Core.text(" were a four-piece musical group from Liverpool, England. ...")]), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Their songs were among the best-loved music of all time. ...")])]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)([Halogen_MDL_Tabs.cl.tabsPanel])(getActiveClass(state)(Members.value))), Halogen_HTML_Properties.id_("members-panel")])([Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("The Beatles' members were:")]), Halogen_HTML_Elements.ul_([Halogen_HTML_Elements.li_([Halogen_HTML_Core.text("John Lennon (1940-1980)")]), Halogen_HTML_Elements.li_([Halogen_HTML_Core.text("Paul McCartney (1942-)")]), Halogen_HTML_Elements.li_([Halogen_HTML_Core.text("George Harrison (1943-2001)")]), Halogen_HTML_Elements.li_([Halogen_HTML_Core.text("Ringo Starr (1940-)")])])]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Tabs.cl.tabsPanel]), Halogen_HTML_Properties.id_("albums-panel")])([Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("The Beatles' original UK LPs, in order of release:")]), Halogen_HTML_Elements.ol_([Halogen_HTML_Elements.li_([Halogen_HTML_Core.text("Please, Please Me (1963)")]), Halogen_HTML_Elements.li_([Halogen_HTML_Core.text("With the Beatles (1963)")]), Halogen_HTML_Elements.li_([Halogen_HTML_Core.text("...")])])])]), Halogen_HTML_Elements.em_([Halogen_HTML_Core.text("Current tab: " + Data_Show.show(showTab)(state.currentTab))])];
    };

    var render = function render(state) {
      return Halogen_MDL_Grid.el.grid_([renderTabsHeader, renderDemoHeader("Example with ripple effect"), renderDemoSection(renderExampleWithRipple(state))]);
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Halogen_MDL.upgradeElementsByClassNames([Halogen_MDL_Tabs.cl.jsTabs, Halogen_MDL_RippleEffect.cl.jsRippleEffect])))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof UpdateCurrentTab) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
          var $20 = {};

          for (var $21 in v1) {
            if ({}.hasOwnProperty.call(v1, $21)) {
              $20[$21] = v1[$21];
            }

            ;
          }

          ;
          $20.currentTab = v.value0;
          return $20;
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;
      throw new Error("Failed pattern match at DemoTabs (line 167, column 10 - line 178, column 12): " + [v.constructor.name]);
    };

    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["About"] = About;
  exports["Members"] = Members;
  exports["Albums"] = Albums;
  exports["isCurrentTab"] = isCurrentTab;
  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["UpdateCurrentTab"] = UpdateCurrentTab;
  exports["Initialize"] = Initialize;
  exports["init"] = init;
  exports["demoTabs"] = demoTabs;
  exports["eqTab"] = eqTab;
  exports["showTab"] = showTab;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Checkbox"] = $PS["Halogen.MDL.Checkbox"] || {};
  var exports = $PS["Halogen.MDL.Checkbox"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL_RippleEffect = $PS["Halogen.MDL.RippleEffect"];
  var cl = {
    checkbox: "mdl-checkbox",
    jsCheckbox: "mdl-js-checkbox",
    checkboxInput: "mdl-checkbox__input",
    checkboxLabel: "mdl-checkbox__label"
  };
  var bl = {
    checkbox: function checkbox(options) {
      return Halogen_HTML_Elements.label([Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)([cl.checkbox, cl.jsCheckbox])(function () {
        if (options.ripple) {
          return [Halogen_MDL_RippleEffect.cl.jsRippleEffect];
        }

        ;
        return [];
      }())), Halogen_HTML_Properties["for"](options.id)])([Halogen_HTML_Elements.input([Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputCheckbox.value), Halogen_HTML_Properties.id_(options.id), Halogen_HTML_Properties.class_(cl.checkboxInput), Halogen_HTML_Properties.checked(options.checked), Halogen_HTML_Events.onClick(options.onClick)]), Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(cl.checkboxLabel)])([Halogen_HTML_Core.text(options.label)])]);
    }
  };
  exports["cl"] = cl;
  exports["bl"] = bl;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Radio"] = $PS["Halogen.MDL.Radio"] || {};
  var exports = $PS["Halogen.MDL.Radio"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Array = $PS["Data.Array"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_Show = $PS["Data.Show"];
  var Halogen_HTML_CSS = $PS["Halogen.HTML.CSS"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL_RippleEffect = $PS["Halogen.MDL.RippleEffect"];
  var cl = {
    radio: "mdl-radio",
    jsRadio: "mdl-js-radio",
    radioButton: "mdl-radio__button",
    radioLabel: "mdl-radio__label"
  };
  var bl = {
    radio: function radio(options) {
      return Halogen_HTML_Elements.label([Halogen_HTML_Properties.classes(Data_Semigroup.append(Data_Semigroup.semigroupArray)([cl.radio, cl.jsRadio])(function () {
        if (options.ripple) {
          return [Halogen_MDL_RippleEffect.cl.jsRippleEffect];
        }

        ;
        return [];
      }())), Halogen_HTML_Properties["for"](options.id), Halogen_HTML_CSS.style(options.css)])([Halogen_HTML_Elements.input([Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputRadio.value), Halogen_HTML_Properties.id_(options.id), Halogen_HTML_Properties.name(options.name), Halogen_HTML_Properties.value(options.value), Halogen_HTML_Properties.class_(cl.radioButton), Halogen_HTML_Properties.checked(options.checked), Halogen_HTML_Events.onClick(options.onClick)]), Halogen_HTML_Elements.span([Halogen_HTML_Properties.class_(cl.radioLabel)])([Halogen_HTML_Core.text(options.label)])]);
    },
    radioGroup: function radioGroup(groupOptions) {
      var createRadioButton = function createRadioButton(index) {
        return function (groupButtonOptions) {
          return {
            id: groupOptions.idPrefix + (" " + Data_Show.show(Data_Show.showInt)(index)),
            name: groupOptions.name,
            value: groupButtonOptions.value,
            label: groupButtonOptions.label,
            checked: groupButtonOptions.checked,
            onClick: groupButtonOptions.onClick,
            ripple: groupOptions.ripple,
            css: groupOptions.buttonCSS
          };
        };
      };

      var radioButtons = Data_Array.mapWithIndex(createRadioButton)(groupOptions.buttons);
      var radios = Data_Functor.map(Data_Functor.functorArray)(bl.radio)(radioButtons);
      return groupOptions.container(radios);
    }
  };
  exports["cl"] = cl;
  exports["bl"] = bl;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoToggles"] = $PS["DemoToggles"] || {};
  var exports = $PS["DemoToggles"];
  var CSS_Geometry = $PS["CSS.Geometry"];
  var CSS_Size = $PS["CSS.Size"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_MDL = $PS["Halogen.MDL"];
  var Halogen_MDL_Cell = $PS["Halogen.MDL.Cell"];
  var Halogen_MDL_Checkbox = $PS["Halogen.MDL.Checkbox"];
  var Halogen_MDL_Grid = $PS["Halogen.MDL.Grid"];
  var Halogen_MDL_Radio = $PS["Halogen.MDL.Radio"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var OnCheckbox1Click = function () {
    function OnCheckbox1Click(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnCheckbox1Click.create = function (value0) {
      return function (value1) {
        return new OnCheckbox1Click(value0, value1);
      };
    };

    return OnCheckbox1Click;
  }();

  var OnCheckbox2Click = function () {
    function OnCheckbox2Click(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnCheckbox2Click.create = function (value0) {
      return function (value1) {
        return new OnCheckbox2Click(value0, value1);
      };
    };

    return OnCheckbox2Click;
  }();

  var OnRadio1Click = function () {
    function OnRadio1Click(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnRadio1Click.create = function (value0) {
      return function (value1) {
        return new OnRadio1Click(value0, value1);
      };
    };

    return OnRadio1Click;
  }();

  var OnRadio2Click = function () {
    function OnRadio2Click(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnRadio2Click.create = function (value0) {
      return function (value1) {
        return new OnRadio2Click(value0, value1);
      };
    };

    return OnRadio2Click;
  }();

  var OnRadio3Click = function () {
    function OnRadio3Click(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnRadio3Click.create = function (value0) {
      return function (value1) {
        return new OnRadio3Click(value0, value1);
      };
    };

    return OnRadio3Click;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var init = new Initialize({
    checkbox1Checked: false,
    checkbox2Checked: true,
    radio1Checked: false,
    radio2Checked: true,
    radio3Checked: false
  });

  var demoToggles = function () {
    var render = function render(state) {
      return Halogen_MDL_Grid.el.grid_([Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h3_([Halogen_HTML_Core.text("Toggles")])]), Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h4_([Halogen_HTML_Core.text("Checkboxes")]), Halogen_MDL_Checkbox.bl.checkbox({
        id: "my-checkbox-1",
        label: "Checkbox",
        ripple: true,
        checked: state.checkbox1Checked,
        onClick: Halogen_HTML_Events.input(OnCheckbox1Click.create)
      }), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Checkbox is: " + function () {
        if (state.checkbox1Checked) {
          return "checked";
        }

        ;
        return "not checked";
      }())]), Halogen_MDL_Checkbox.bl.checkbox({
        id: "my-checkbox-2",
        label: "Checkbox (no ripple)",
        ripple: false,
        checked: state.checkbox2Checked,
        onClick: Halogen_HTML_Events.input(OnCheckbox2Click.create)
      }), Halogen_HTML_Elements.p_([Halogen_HTML_Core.text("Checkbox is: " + function () {
        if (state.checkbox2Checked) {
          return "checked";
        }

        ;
        return "not checked";
      }())])]), Halogen_MDL_Cell.el.cell12Col_([Halogen_HTML_Elements.h4_([Halogen_HTML_Core.text("Radios")]), Halogen_MDL_Radio.bl.radioGroup({
        container: Halogen_HTML_Elements.div_,
        idPrefix: "my-radio",
        name: "radio-1",
        ripple: true,
        buttonCSS: CSS_Geometry.marginRight(CSS_Size.px(20.0)),
        buttons: [{
          value: "one",
          label: "One",
          checked: true,
          onClick: Halogen_HTML_Events.input(OnRadio1Click.create)
        }, {
          value: "two",
          label: "Two",
          checked: false,
          onClick: Halogen_HTML_Events.input(OnRadio2Click.create)
        }]
      })])]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Halogen_MDL.upgradeElementsByClassNames([Halogen_MDL_Checkbox.cl.jsCheckbox, Halogen_MDL_Radio.cl.jsRadio])))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof OnCheckbox1Click) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
          var $19 = {};

          for (var $20 in state) {
            if ({}.hasOwnProperty.call(state, $20)) {
              $19[$20] = state[$20];
            }

            ;
          }

          ;
          $19.checkbox1Checked = !state.checkbox1Checked;
          return $19;
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof OnCheckbox2Click) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
          var $24 = {};

          for (var $25 in state) {
            if ({}.hasOwnProperty.call(state, $25)) {
              $24[$25] = state[$25];
            }

            ;
          }

          ;
          $24.checkbox2Checked = !state.checkbox2Checked;
          return $24;
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof OnRadio1Click) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
          var $29 = {};

          for (var $30 in state) {
            if ({}.hasOwnProperty.call(state, $30)) {
              $29[$30] = state[$30];
            }

            ;
          }

          ;
          $29.radio1Checked = !state.radio1Checked;
          return $29;
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof OnRadio2Click) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
          var $34 = {};

          for (var $35 in state) {
            if ({}.hasOwnProperty.call(state, $35)) {
              $34[$35] = state[$35];
            }

            ;
          }

          ;
          $34.radio2Checked = !state.radio2Checked;
          return $34;
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof OnRadio3Click) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
          var $39 = {};

          for (var $40 in state) {
            if ({}.hasOwnProperty.call(state, $40)) {
              $39[$40] = state[$40];
            }

            ;
          }

          ;
          $39.radio3Checked = !state.radio3Checked;
          return $39;
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;
      throw new Error("Failed pattern match at DemoToggles (line 130, column 10 - line 153, column 12): " + [v.constructor.name]);
    };

    return Halogen_Component.lifecycleComponent(Halogen_HTML_Core.bifunctorHTML)({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["OnCheckbox1Click"] = OnCheckbox1Click;
  exports["OnCheckbox2Click"] = OnCheckbox2Click;
  exports["OnRadio1Click"] = OnRadio1Click;
  exports["OnRadio2Click"] = OnRadio2Click;
  exports["OnRadio3Click"] = OnRadio3Click;
  exports["Initialize"] = Initialize;
  exports["init"] = init;
  exports["demoToggles"] = demoToggles;
})(PS);

(function (exports) {
  // Hack to hide the layout drawer (it does not automatically hide on a drawer link click)
  // https://stackoverflow.com/questions/31536467/how-to-hide-drawer-upon-user-click/37625650#37625650
  exports.toggleDrawer = function () {
    var layout = document.querySelector('.mdl-layout');

    if (layout && layout.MaterialLayout && layout.MaterialLayout.toggleDrawer) {
      layout.MaterialLayout.toggleDrawer();
    }

    return {};
  };
})(PS["Halogen.MDL.Layout"] = PS["Halogen.MDL.Layout"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Layout"] = $PS["Halogen.MDL.Layout"] || {};
  var exports = $PS["Halogen.MDL.Layout"];
  var $foreign = $PS["Halogen.MDL.Layout"];
  var cl = {
    layout: "mdl-layout",
    layoutFixedTabs: "mdl-layout--fixed-tabs",
    layoutLargeScreenOnly: "mdl-layout--large-screen-only",
    layoutSmallScreenOnly: "mdl-layout--small-screen-only",
    layoutNoDrawerButton: "mdl-layout--no-drawer-button",
    layoutNoDesktopDrawerButton: "mdl-layout--no-desktop-drawer-button",
    layoutContainer: "mdl-layout__container",
    layoutContent: "mdl-layout__content",
    layoutDrawer: "mdl-layout__drawer",
    layoutFixedDrawer: "mdl-layout__fixed-drawer",
    layoutFixedHeader: "mdl-layout__fixed-header",
    layoutHeader: "mdl-layout__header",
    layoutHeaderScroll: "mdl-layout__header--scroll",
    layoutHeaderSeamed: "mdl-layout__header--seamed",
    layoutHeaderTransparent: "mdl-layout__header--transparent",
    layoutHeaderWaterfall: "mdl-layout__header--waterfall",
    layoutHeaderWaterfallHideTop: "mdl-layout__header--waterfall-hide-top",
    layoutHeaderRow: "mdl-layout__header-row",
    layoutTab: "mdl-layout__tab",
    isActive: "is-active",
    layoutTabBar: "mdl-layout__tab-bar",
    layoutTabManualSwitch: "mdl-layout__tab-manual-switch",
    layoutTabPanel: "mdl-layout__tab-panel",
    layoutTitle: "mdl-layout__title",
    layoutIcon: "mdl-layout-icon",
    layoutSpacer: "mdl-layout-spacer",
    jsLayout: "mdl-js-layout"
  };
  exports["cl"] = cl;
  exports["toggleDrawer"] = $foreign.toggleDrawer;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Basic"] = $PS["Halogen.MDL.Basic"] || {};
  var exports = $PS["Halogen.MDL.Basic"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var el = {
    link_: function link_(v) {
      return Halogen_HTML_Elements.a([Halogen_HTML_Properties.href(v.href)])([Halogen_HTML_Core.text(v.text)]);
    }
  };
  exports["el"] = el;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Logo"] = $PS["Halogen.MDL.Logo"] || {};
  var exports = $PS["Halogen.MDL.Logo"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var cl = {
    logo: "mdl-logo"
  };
  var el = {
    logo_: function logo_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(cl.logo)])(children);
    },
    logoText_: function logoText_(text) {
      return el.logo_([Halogen_HTML_Core.text(text)]);
    }
  };
  exports["cl"] = cl;
  exports["el"] = el;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.MegaFooter"] = $PS["Halogen.MDL.MegaFooter"] || {};
  var exports = $PS["Halogen.MDL.MegaFooter"];
  var DOM_HTML_Indexed_InputType = $PS["DOM.HTML.Indexed.InputType"];
  var Data_Functor = $PS["Data.Functor"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL_Basic = $PS["Halogen.MDL.Basic"];
  var Halogen_MDL_Logo = $PS["Halogen.MDL.Logo"];
  var cl = {
    megaFooter: "mdl-mega-footer",
    megaFooterHeading: "mdl-mega-footer__heading",
    megaFooterHeadingCheckbox: "mdl-mega-footer__heading-checkbox",
    megaFooterTopSection: "mdl-mega-footer__top-section",
    megaFooterBottomSection: "mdl-mega-footer__bottom-section",
    megaFooterLeftSection: "mdl-mega-footer__left-section",
    megaFooterMiddleSection: "mdl-mega-footer__middle-section",
    megaFooterRightSection: "mdl-mega-footer__right-section",
    megaFooterDropDownSection: "mdl-mega-footer__drop-down-section",
    megaFooterLinkList: "mdl-mega-footer__link-list",
    megaFooterSocialBtn: "mdl-mega-footer__social-btn"
  };
  var el = {
    megaFooter_: function megaFooter_(children) {
      return Halogen_HTML_Elements.footer([Halogen_HTML_Properties.class_(cl.megaFooter)])(children);
    },
    middleSection_: function middleSection_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(cl.megaFooterMiddleSection)])(children);
    },
    bottomSection_: function bottomSection_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(cl.megaFooterBottomSection)])(children);
    },
    dropDownSection_: function dropDownSection_(children) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(cl.megaFooterDropDownSection)])(children);
    },
    linkList_: function linkList_(children) {
      return Halogen_HTML_Elements.ul([Halogen_HTML_Properties.class_(cl.megaFooterLinkList)])(children);
    },
    linkListItem_: function linkListItem_(children) {
      return Halogen_HTML_Elements.li_([children]);
    }
  };
  var bl = {
    megaFooter: function megaFooter(block) {
      return el.megaFooter_([bl.middleSection(block.middleSection), bl.bottomSection(block.bottomSection)]);
    },
    middleSection: function middleSection(block) {
      return el.middleSection_(Data_Functor.map(Data_Functor.functorArray)(bl.dropDownSection)(block.dropDownSections));
    },
    bottomSection: function bottomSection(block) {
      return el.bottomSection_([Halogen_MDL_Logo.el.logoText_(block.title), bl.linkList(block.linkList)]);
    },
    dropDownSection: function dropDownSection(block) {
      return el.dropDownSection_([Halogen_HTML_Elements.input([Halogen_HTML_Properties.class_(cl.megaFooterHeadingCheckbox), Halogen_HTML_Properties.type_(Halogen_HTML_Core.inputTypeIsProp)(DOM_HTML_Indexed_InputType.InputCheckbox.value), Halogen_HTML_Properties.checked(true)]), Halogen_HTML_Elements.h1([Halogen_HTML_Properties.class_(cl.megaFooterHeading)])([Halogen_HTML_Core.text(block.title)]), bl.linkList(block.linkList)]);
    },
    linkList: function linkList(block) {
      return el.linkList_(Data_Functor.map(Data_Functor.functorArray)(function ($0) {
        return el.linkListItem_(Halogen_MDL_Basic.el.link_($0));
      })(block.links));
    }
  };
  exports["cl"] = cl;
  exports["el"] = el;
  exports["bl"] = bl;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.MDL.Navigation"] = $PS["Halogen.MDL.Navigation"] || {};
  var exports = $PS["Halogen.MDL.Navigation"];
  var cl = {
    navigation: "mdl-navigation",
    navigationLink: "mdl-navigation__link"
  };
  exports["cl"] = cl;
})(PS);

(function ($PS) {
  "use strict";

  $PS["Route"] = $PS["Route"] || {};
  var exports = $PS["Route"];
  var Data_Show = $PS["Data.Show"];

  var Home = function () {
    function Home() {}

    ;
    Home.value = new Home();
    return Home;
  }();

  var Badges = function () {
    function Badges() {}

    ;
    Badges.value = new Badges();
    return Badges;
  }();

  var Buttons = function () {
    function Buttons() {}

    ;
    Buttons.value = new Buttons();
    return Buttons;
  }();

  var Cards = function () {
    function Cards() {}

    ;
    Cards.value = new Cards();
    return Cards;
  }();

  var Chips = function () {
    function Chips() {}

    ;
    Chips.value = new Chips();
    return Chips;
  }();

  var Dialogs = function () {
    function Dialogs() {}

    ;
    Dialogs.value = new Dialogs();
    return Dialogs;
  }();

  var Lists = function () {
    function Lists() {}

    ;
    Lists.value = new Lists();
    return Lists;
  }();

  var Menus = function () {
    function Menus() {}

    ;
    Menus.value = new Menus();
    return Menus;
  }();

  var Progress = function () {
    function Progress() {}

    ;
    Progress.value = new Progress();
    return Progress;
  }();

  var Sliders = function () {
    function Sliders() {}

    ;
    Sliders.value = new Sliders();
    return Sliders;
  }();

  var Snackbars = function () {
    function Snackbars() {}

    ;
    Snackbars.value = new Snackbars();
    return Snackbars;
  }();

  var Spinners = function () {
    function Spinners() {}

    ;
    Spinners.value = new Spinners();
    return Spinners;
  }();

  var Tabs = function () {
    function Tabs() {}

    ;
    Tabs.value = new Tabs();
    return Tabs;
  }();

  var Toggles = function () {
    function Toggles() {}

    ;
    Toggles.value = new Toggles();
    return Toggles;
  }();

  var urlSegment = function urlSegment(v) {
    if (v instanceof Home) {
      return "home";
    }

    ;

    if (v instanceof Badges) {
      return "badges";
    }

    ;

    if (v instanceof Buttons) {
      return "buttons";
    }

    ;

    if (v instanceof Cards) {
      return "cards";
    }

    ;

    if (v instanceof Chips) {
      return "chips";
    }

    ;

    if (v instanceof Dialogs) {
      return "dialogs";
    }

    ;

    if (v instanceof Lists) {
      return "lists";
    }

    ;

    if (v instanceof Menus) {
      return "menus";
    }

    ;

    if (v instanceof Progress) {
      return "progress";
    }

    ;

    if (v instanceof Sliders) {
      return "sliders";
    }

    ;

    if (v instanceof Snackbars) {
      return "snackbars";
    }

    ;

    if (v instanceof Spinners) {
      return "spinners";
    }

    ;

    if (v instanceof Tabs) {
      return "tabs";
    }

    ;

    if (v instanceof Toggles) {
      return "toggles";
    }

    ;
    throw new Error("Failed pattern match at Route (line 21, column 1 - line 21, column 30): " + [v.constructor.name]);
  };

  var showRoute = new Data_Show.Show(function (v) {
    if (v instanceof Home) {
      return "Home";
    }

    ;

    if (v instanceof Badges) {
      return "Badges";
    }

    ;

    if (v instanceof Buttons) {
      return "Buttons";
    }

    ;

    if (v instanceof Cards) {
      return "Cards";
    }

    ;

    if (v instanceof Chips) {
      return "Chips";
    }

    ;

    if (v instanceof Dialogs) {
      return "Dialogs";
    }

    ;

    if (v instanceof Lists) {
      return "Lists";
    }

    ;

    if (v instanceof Menus) {
      return "Menus";
    }

    ;

    if (v instanceof Progress) {
      return "Progress";
    }

    ;

    if (v instanceof Sliders) {
      return "Sliders";
    }

    ;

    if (v instanceof Snackbars) {
      return "Snackbars";
    }

    ;

    if (v instanceof Spinners) {
      return "Spinners";
    }

    ;

    if (v instanceof Tabs) {
      return "Tabs";
    }

    ;

    if (v instanceof Toggles) {
      return "Toggles";
    }

    ;
    throw new Error("Failed pattern match at Route (line 43, column 1 - line 43, column 33): " + [v.constructor.name]);
  });
  var label = Data_Show.show(showRoute);

  var href = function href(route) {
    return "#/" + urlSegment(route);
  };

  exports["Home"] = Home;
  exports["Badges"] = Badges;
  exports["Buttons"] = Buttons;
  exports["Cards"] = Cards;
  exports["Chips"] = Chips;
  exports["Dialogs"] = Dialogs;
  exports["Lists"] = Lists;
  exports["Menus"] = Menus;
  exports["Progress"] = Progress;
  exports["Sliders"] = Sliders;
  exports["Snackbars"] = Snackbars;
  exports["Spinners"] = Spinners;
  exports["Tabs"] = Tabs;
  exports["Toggles"] = Toggles;
  exports["urlSegment"] = urlSegment;
  exports["href"] = href;
  exports["label"] = label;
  exports["showRoute"] = showRoute;
})(PS);

(function ($PS) {
  "use strict";

  $PS["DemoContainer"] = $PS["DemoContainer"] || {};
  var exports = $PS["DemoContainer"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Array = $PS["Data.Array"];
  var Data_Either = $PS["Data.Either"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var Data_Show = $PS["Data.Show"];
  var Data_Unit = $PS["Data.Unit"];
  var DemoBadges = $PS["DemoBadges"];
  var DemoButtons = $PS["DemoButtons"];
  var DemoCards = $PS["DemoCards"];
  var DemoChips = $PS["DemoChips"];
  var DemoDialogs = $PS["DemoDialogs"];
  var DemoHome = $PS["DemoHome"];
  var DemoLists = $PS["DemoLists"];
  var DemoMenus = $PS["DemoMenus"];
  var DemoProgress = $PS["DemoProgress"];
  var DemoSliders = $PS["DemoSliders"];
  var DemoSnackbars = $PS["DemoSnackbars"];
  var DemoSpinners = $PS["DemoSpinners"];
  var DemoTabs = $PS["DemoTabs"];
  var DemoToggles = $PS["DemoToggles"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_Component_ChildPath = $PS["Halogen.Component.ChildPath"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Core = $PS["Halogen.HTML.Core"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_MDL = $PS["Halogen.MDL"];
  var Halogen_MDL_Layout = $PS["Halogen.MDL.Layout"];
  var Halogen_MDL_MegaFooter = $PS["Halogen.MDL.MegaFooter"];
  var Halogen_MDL_Navigation = $PS["Halogen.MDL.Navigation"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Route = $PS["Route"];

  var InitializeComponent = function () {
    function InitializeComponent(value0) {
      this.value0 = value0;
    }

    ;

    InitializeComponent.create = function (value0) {
      return new InitializeComponent(value0);
    };

    return InitializeComponent;
  }();

  var FinalizeComponent = function () {
    function FinalizeComponent(value0) {
      this.value0 = value0;
    }

    ;

    FinalizeComponent.create = function (value0) {
      return new FinalizeComponent(value0);
    };

    return FinalizeComponent;
  }();

  var UpdateState = function () {
    function UpdateState(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateState.create = function (value0) {
      return function (value1) {
        return new UpdateState(value0, value1);
      };
    };

    return UpdateState;
  }();

  var UpdateRoute = function () {
    function UpdateRoute(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    UpdateRoute.create = function (value0) {
      return function (value1) {
        return new UpdateRoute(value0, value1);
      };
    };

    return UpdateRoute;
  }();

  var OnNavClick = function () {
    function OnNavClick(value0) {
      this.value0 = value0;
    }

    ;

    OnNavClick.create = function (value0) {
      return new OnNavClick(value0);
    };

    return OnNavClick;
  }();

  var OnDemoHomeMessage = function () {
    function OnDemoHomeMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoHomeMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoHomeMessage(value0, value1);
      };
    };

    return OnDemoHomeMessage;
  }();

  var OnDemoBadgesMessage = function () {
    function OnDemoBadgesMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoBadgesMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoBadgesMessage(value0, value1);
      };
    };

    return OnDemoBadgesMessage;
  }();

  var OnDemoButtonsMessage = function () {
    function OnDemoButtonsMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoButtonsMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoButtonsMessage(value0, value1);
      };
    };

    return OnDemoButtonsMessage;
  }();

  var OnDemoCardsMessage = function () {
    function OnDemoCardsMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoCardsMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoCardsMessage(value0, value1);
      };
    };

    return OnDemoCardsMessage;
  }();

  var OnDemoChipsMessage = function () {
    function OnDemoChipsMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoChipsMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoChipsMessage(value0, value1);
      };
    };

    return OnDemoChipsMessage;
  }();

  var OnDemoDialogsMessage = function () {
    function OnDemoDialogsMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoDialogsMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoDialogsMessage(value0, value1);
      };
    };

    return OnDemoDialogsMessage;
  }();

  var OnDemoListsMessage = function () {
    function OnDemoListsMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoListsMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoListsMessage(value0, value1);
      };
    };

    return OnDemoListsMessage;
  }();

  var OnDemoMenusMessage = function () {
    function OnDemoMenusMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoMenusMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoMenusMessage(value0, value1);
      };
    };

    return OnDemoMenusMessage;
  }();

  var OnDemoProgressMessage = function () {
    function OnDemoProgressMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoProgressMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoProgressMessage(value0, value1);
      };
    };

    return OnDemoProgressMessage;
  }();

  var OnDemoSlidersMessage = function () {
    function OnDemoSlidersMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoSlidersMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoSlidersMessage(value0, value1);
      };
    };

    return OnDemoSlidersMessage;
  }();

  var OnDemoSnackbarsMessage = function () {
    function OnDemoSnackbarsMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoSnackbarsMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoSnackbarsMessage(value0, value1);
      };
    };

    return OnDemoSnackbarsMessage;
  }();

  var OnDemoSpinnersMessage = function () {
    function OnDemoSpinnersMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoSpinnersMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoSpinnersMessage(value0, value1);
      };
    };

    return OnDemoSpinnersMessage;
  }();

  var OnDemoTabsMessage = function () {
    function OnDemoTabsMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoTabsMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoTabsMessage(value0, value1);
      };
    };

    return OnDemoTabsMessage;
  }();

  var OnDemoTogglesMessage = function () {
    function OnDemoTogglesMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoTogglesMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoTogglesMessage(value0, value1);
      };
    };

    return OnDemoTogglesMessage;
  }();

  var Initialize = function () {
    function Initialize(value0) {
      this.value0 = value0;
    }

    ;

    Initialize.create = function (value0) {
      return new Initialize(value0);
    };

    return Initialize;
  }();

  var DemoTogglesSlot = function () {
    function DemoTogglesSlot() {}

    ;
    DemoTogglesSlot.value = new DemoTogglesSlot();
    return DemoTogglesSlot;
  }();

  var DemoTabsSlot = function () {
    function DemoTabsSlot() {}

    ;
    DemoTabsSlot.value = new DemoTabsSlot();
    return DemoTabsSlot;
  }();

  var DemoSpinnersSlot = function () {
    function DemoSpinnersSlot() {}

    ;
    DemoSpinnersSlot.value = new DemoSpinnersSlot();
    return DemoSpinnersSlot;
  }();

  var DemoSnackbarsSlot = function () {
    function DemoSnackbarsSlot() {}

    ;
    DemoSnackbarsSlot.value = new DemoSnackbarsSlot();
    return DemoSnackbarsSlot;
  }();

  var DemoSlidersSlot = function () {
    function DemoSlidersSlot() {}

    ;
    DemoSlidersSlot.value = new DemoSlidersSlot();
    return DemoSlidersSlot;
  }();

  var DemoProgressSlot = function () {
    function DemoProgressSlot() {}

    ;
    DemoProgressSlot.value = new DemoProgressSlot();
    return DemoProgressSlot;
  }();

  var DemoMenusSlot = function () {
    function DemoMenusSlot() {}

    ;
    DemoMenusSlot.value = new DemoMenusSlot();
    return DemoMenusSlot;
  }();

  var DemoListsSlot = function () {
    function DemoListsSlot() {}

    ;
    DemoListsSlot.value = new DemoListsSlot();
    return DemoListsSlot;
  }(); // Slots


  var DemoHomeSlot = function () {
    function DemoHomeSlot() {}

    ;
    DemoHomeSlot.value = new DemoHomeSlot();
    return DemoHomeSlot;
  }();

  var DemoDialogsSlot = function () {
    function DemoDialogsSlot() {}

    ;
    DemoDialogsSlot.value = new DemoDialogsSlot();
    return DemoDialogsSlot;
  }();

  var DemoChipsSlot = function () {
    function DemoChipsSlot() {}

    ;
    DemoChipsSlot.value = new DemoChipsSlot();
    return DemoChipsSlot;
  }();

  var DemoCardsSlot = function () {
    function DemoCardsSlot() {}

    ;
    DemoCardsSlot.value = new DemoCardsSlot();
    return DemoCardsSlot;
  }();

  var DemoButtonsSlot = function () {
    function DemoButtonsSlot() {}

    ;
    DemoButtonsSlot.value = new DemoButtonsSlot();
    return DemoButtonsSlot;
  }();

  var DemoBadgesSlot = function () {
    function DemoBadgesSlot() {}

    ;
    DemoBadgesSlot.value = new DemoBadgesSlot();
    return DemoBadgesSlot;
  }();

  var init = function init(state) {
    return new Initialize(state);
  };

  var eqDemoTogglesSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordDemoTogglesSlot = new Data_Ord.Ord(function () {
    return eqDemoTogglesSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });
  var eqDemoTabsSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordDemoTabsSlot = new Data_Ord.Ord(function () {
    return eqDemoTabsSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });
  var eqDemoSpinnersSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordDemoSpinnersSlot = new Data_Ord.Ord(function () {
    return eqDemoSpinnersSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });
  var eqDemoSnackbarsSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordDemoSnackbarsSlot = new Data_Ord.Ord(function () {
    return eqDemoSnackbarsSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });
  var eqDemoSlidersSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordDemoSlidersSlot = new Data_Ord.Ord(function () {
    return eqDemoSlidersSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });
  var eqDemoProgressSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordDemoProgressSlot = new Data_Ord.Ord(function () {
    return eqDemoProgressSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });
  var eqDemoMenusSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordDemoMenusSlot = new Data_Ord.Ord(function () {
    return eqDemoMenusSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });
  var eqDemoListsSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordDemoListsSlot = new Data_Ord.Ord(function () {
    return eqDemoListsSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });
  var eqDemoHomeSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordDemoHomeSlot = new Data_Ord.Ord(function () {
    return eqDemoHomeSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });
  var eqDemoDialogsSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordDemoDialogsSlot = new Data_Ord.Ord(function () {
    return eqDemoDialogsSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });
  var eqDemoChipsSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordDemoChipsSlot = new Data_Ord.Ord(function () {
    return eqDemoChipsSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });
  var eqDemoCardsSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordDemoCardsSlot = new Data_Ord.Ord(function () {
    return eqDemoCardsSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });
  var eqDemoButtonsSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordDemoButtonsSlot = new Data_Ord.Ord(function () {
    return eqDemoButtonsSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });
  var eqDemoBadgesSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordDemoBadgesSlot = new Data_Ord.Ord(function () {
    return eqDemoBadgesSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });
  var cpDemoToggles = Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.cpR)(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpL);
  var cpDemoTabs = Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.cpR)(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpL);
  var cpDemoSpinners = Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.cpR)(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpL);
  var cpDemoSnackbars = Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.compose(Halogen_Component_ChildPath.cpR)(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpR))(Halogen_Component_ChildPath.cpL);
  var cpDemoSliders = Halogen_Component_ChildPath.cp10;
  var cpDemoProgress = Halogen_Component_ChildPath.cp9;
  var cpDemoMenus = Halogen_Component_ChildPath.cp8;
  var cpDemoLists = Halogen_Component_ChildPath.cp7;
  var cpDemoHome = Halogen_Component_ChildPath.cp1;
  var cpDemoDialogs = Halogen_Component_ChildPath.cp6;
  var cpDemoChips = Halogen_Component_ChildPath.cp5;
  var cpDemoCards = Halogen_Component_ChildPath.cp4;
  var cpDemoButtons = Halogen_Component_ChildPath.cp3;
  var cpDemoBadges = Halogen_Component_ChildPath.cp2;

  var demoContainer = function () {
    var renderSpacer = Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(Halogen_MDL_Layout.cl.layoutSpacer)])([]);

    var renderPageContent = function renderPageContent(state) {
      if (state.currentRoute instanceof Route.Home) {
        return Halogen_HTML["slot'"](cpDemoHome)(DemoHomeSlot.value)(DemoHome.demoHome)(DemoHome.init(Data_Unit.unit))(Halogen_HTML_Events.input(OnDemoHomeMessage.create));
      }

      ;

      if (state.currentRoute instanceof Route.Badges) {
        return Halogen_HTML["slot'"](cpDemoBadges)(DemoBadgesSlot.value)(DemoBadges.demoBadges)(DemoBadges.init(Data_Unit.unit))(Halogen_HTML_Events.input(OnDemoBadgesMessage.create));
      }

      ;

      if (state.currentRoute instanceof Route.Buttons) {
        return Halogen_HTML["slot'"](cpDemoButtons)(DemoButtonsSlot.value)(DemoButtons.demoButtons)(DemoButtons.init({
          clickDemo: {
            clickCount: 0
          },
          nonComponentDemo: {
            isLoading: false
          }
        }))(Halogen_HTML_Events.input(OnDemoButtonsMessage.create));
      }

      ;

      if (state.currentRoute instanceof Route.Cards) {
        return Halogen_HTML["slot'"](cpDemoCards)(DemoCardsSlot.value)(DemoCards.demoCards)(DemoCards.init(Data_Unit.unit))(Halogen_HTML_Events.input(OnDemoCardsMessage.create));
      }

      ;

      if (state.currentRoute instanceof Route.Chips) {
        return Halogen_HTML["slot'"](cpDemoChips)(DemoChipsSlot.value)(DemoChips.demoChips)(DemoChips.init(Data_Unit.unit))(Halogen_HTML_Events.input(OnDemoChipsMessage.create));
      }

      ;

      if (state.currentRoute instanceof Route.Dialogs) {
        return Halogen_HTML["slot'"](cpDemoDialogs)(DemoDialogsSlot.value)(DemoDialogs.demoDialogs)(DemoDialogs.init(Data_Unit.unit))(Halogen_HTML_Events.input(OnDemoDialogsMessage.create));
      }

      ;

      if (state.currentRoute instanceof Route.Lists) {
        return Halogen_HTML["slot'"](cpDemoLists)(DemoListsSlot.value)(DemoLists.demoLists)(DemoLists.init(Data_Unit.unit))(Halogen_HTML_Events.input(OnDemoListsMessage.create));
      }

      ;

      if (state.currentRoute instanceof Route.Menus) {
        return Halogen_HTML["slot'"](cpDemoMenus)(DemoMenusSlot.value)(DemoMenus.demoMenus)(DemoMenus.init(Data_Unit.unit))(Halogen_HTML_Events.input(OnDemoMenusMessage.create));
      }

      ;

      if (state.currentRoute instanceof Route.Progress) {
        return Halogen_HTML["slot'"](cpDemoProgress)(DemoProgressSlot.value)(DemoProgress.demoProgress)(DemoProgress.init({
          progress: 0
        }))(Halogen_HTML_Events.input(OnDemoProgressMessage.create));
      }

      ;

      if (state.currentRoute instanceof Route.Sliders) {
        return Halogen_HTML["slot'"](cpDemoSliders)(DemoSlidersSlot.value)(DemoSliders.demoSliders)(DemoSliders.init({
          slider1: 0.0,
          slider2: 20.0,
          slider3: 20.0
        }))(Halogen_HTML_Events.input(OnDemoSlidersMessage.create));
      }

      ;

      if (state.currentRoute instanceof Route.Snackbars) {
        return Halogen_HTML["slot'"](cpDemoSnackbars)(DemoSnackbarsSlot.value)(DemoSnackbars.demoSnackbars)(DemoSnackbars.init({
          snackbar2ActionCount: 0
        }))(Halogen_HTML_Events.input(OnDemoSnackbarsMessage.create));
      }

      ;

      if (state.currentRoute instanceof Route.Spinners) {
        return Halogen_HTML["slot'"](cpDemoSpinners)(DemoSpinnersSlot.value)(DemoSpinners.demoSpinners)(DemoSpinners.init(Data_Unit.unit))(Halogen_HTML_Events.input(OnDemoSpinnersMessage.create));
      }

      ;

      if (state.currentRoute instanceof Route.Tabs) {
        return Halogen_HTML["slot'"](cpDemoTabs)(DemoTabsSlot.value)(DemoTabs.demoTabs)(DemoTabs.init({
          currentTab: DemoTabs.About.value
        }))(Halogen_HTML_Events.input(OnDemoTabsMessage.create));
      }

      ;

      if (state.currentRoute instanceof Route.Toggles) {
        return Halogen_HTML["slot'"](cpDemoToggles)(DemoTogglesSlot.value)(DemoToggles.demoToggles)(DemoToggles.init)(Halogen_HTML_Events.input(OnDemoTogglesMessage.create));
      }

      ;
      throw new Error("Failed pattern match at DemoContainer (line 331, column 29 - line 429, column 40): " + [state.currentRoute.constructor.name]);
    };

    var renderLayoutHeaderLink = function renderLayoutHeaderLink(link) {
      return Halogen_HTML_Elements.a([Halogen_HTML_Properties.href(link.href), Halogen_HTML_Properties.classes([Halogen_MDL_Navigation.cl.navigationLink])])([Halogen_HTML_Core.text(link.text)]);
    };

    var renderLayoutHeader = Halogen_HTML_Elements.header([Halogen_HTML_Properties.classes([Halogen_MDL_Layout.cl.layoutHeader])])([Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Layout.cl.layoutHeaderRow])])([Halogen_HTML_Elements.span([Halogen_HTML_Properties.classes([Halogen_MDL_Layout.cl.layoutTitle])])([Halogen_HTML_Core.text("Halogen MDL")]), Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Layout.cl.layoutSpacer])])([]), Halogen_HTML_Elements.nav([Halogen_HTML_Properties.classes([Halogen_MDL_Navigation.cl.navigation, Halogen_MDL_Layout.cl.layoutLargeScreenOnly])])([renderLayoutHeaderLink({
      href: "#",
      text: "Link 1"
    }), renderLayoutHeaderLink({
      href: "#",
      text: "Link 2"
    }), renderLayoutHeaderLink({
      href: "#",
      text: "Link 3"
    }), renderLayoutHeaderLink({
      href: "#",
      text: "Link 4"
    })])])]);

    var renderLayoutDrawerLink = function renderLayoutDrawerLink(route) {
      return Halogen_HTML_Elements.a([Halogen_HTML_Properties.href(Route.href(route)), Halogen_HTML_Properties.classes([Halogen_MDL_Navigation.cl.navigationLink]), Halogen_HTML_Events.onClick(Halogen_HTML_Events.input_(OnNavClick.create))])([Halogen_HTML_Core.text(Route.label(route))]);
    };

    var renderLayoutContent = function renderLayoutContent(state) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Layout.cl.layoutContent])])([Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes(["page-content"])])([renderPageContent(state)])]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Just.create(Halogen_Query.action(UpdateState.create(v.value0)));
    };

    var initializer = Data_Maybe.Just.create(Halogen_Query.action(InitializeComponent.create));

    var initialState = function initialState(v) {
      return v.value0;
    };

    var finalizer = Data_Maybe.Just.create(Halogen_Query.action(FinalizeComponent.create));
    var dummyLinkList = {
      links: [{
        href: "#",
        text: "Link 1"
      }, {
        href: "#",
        text: "Link 2"
      }, {
        href: "#",
        text: "Link 3"
      }, {
        href: "#",
        text: "Link 4"
      }]
    };

    var dummyDropDownSection = function dummyDropDownSection(i) {
      return {
        title: "Drop down section " + Data_Show.show(Data_Show.showInt)(i),
        linkList: dummyLinkList
      };
    };

    var renderMegaFooter = Halogen_MDL_MegaFooter.bl.megaFooter({
      middleSection: {
        dropDownSections: Data_Functor.map(Data_Functor.functorArray)(dummyDropDownSection)(Data_Array.range(1)(4))
      },
      bottomSection: {
        title: "Bottom title",
        linkList: dummyLinkList
      }
    });

    var $$eval = function $$eval(v) {
      if (v instanceof InitializeComponent) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Halogen_MDL.upgradeElementByRef(Effect_Aff.monadEffectAff)("mdl-layout-ref"))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
        });
      }

      ;

      if (v instanceof FinalizeComponent) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
      }

      ;

      if (v instanceof UpdateState) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.put(Halogen_Query_HalogenM.monadStateHalogenM)(v.value0))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof UpdateRoute) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (state) {
          var $127 = {};

          for (var $128 in state) {
            if ({}.hasOwnProperty.call(state, $128)) {
              $127[$128] = state[$128];
            }

            ;
          }

          ;
          $127.currentRoute = v.value0;
          return $127;
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof OnNavClick) {
        return Control_Bind.bind(Halogen_Query_HalogenM.bindHalogenM)(Halogen_Query.getHTMLElementRef("mdl-layout-drawer"))(function (v1) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(function () {
            if (v1 instanceof Data_Maybe.Just) {
              return Effect_Class.liftEffect(Halogen_Query_HalogenM.monadEffectHalogenM(Effect_Aff.monadEffectAff))(Halogen_MDL_Layout.toggleDrawer);
            }

            ;

            if (v1 instanceof Data_Maybe.Nothing) {
              return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(Data_Unit.unit);
            }

            ;
            throw new Error("Failed pattern match at DemoContainer (line 479, column 7 - line 481, column 29): " + [v1.constructor.name]);
          }())(function () {
            return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value0);
          });
        });
      }

      ;

      if (v instanceof OnDemoHomeMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;

      if (v instanceof OnDemoBadgesMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;

      if (v instanceof OnDemoButtonsMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;

      if (v instanceof OnDemoCardsMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;

      if (v instanceof OnDemoChipsMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;

      if (v instanceof OnDemoDialogsMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;

      if (v instanceof OnDemoListsMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;

      if (v instanceof OnDemoMenusMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;

      if (v instanceof OnDemoProgressMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;

      if (v instanceof OnDemoSlidersMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;

      if (v instanceof OnDemoSnackbarsMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;

      if (v instanceof OnDemoSpinnersMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;

      if (v instanceof OnDemoTabsMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;

      if (v instanceof OnDemoTogglesMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;
      throw new Error("Failed pattern match at DemoContainer (line 465, column 10 - line 510, column 12): " + [v.constructor.name]);
    };

    var renderLayoutDrawer = Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Layout.cl.layoutDrawer]), Halogen_HTML_Properties.ref("mdl-layout-drawer")])([Halogen_HTML_Elements.span([Halogen_HTML_Properties.classes([Halogen_MDL_Layout.cl.layoutTitle])])([Halogen_HTML_Core.text("Halogen MDL")]), Halogen_HTML_Elements.nav([Halogen_HTML_Properties.classes([Halogen_MDL_Navigation.cl.navigation])])([renderLayoutDrawerLink(Route.Home.value), renderLayoutDrawerLink(Route.Badges.value), renderLayoutDrawerLink(Route.Buttons.value), renderLayoutDrawerLink(Route.Cards.value), renderLayoutDrawerLink(Route.Chips.value), renderLayoutDrawerLink(Route.Dialogs.value), renderLayoutDrawerLink(Route.Lists.value), renderLayoutDrawerLink(Route.Menus.value), renderLayoutDrawerLink(Route.Progress.value), renderLayoutDrawerLink(Route.Sliders.value), renderLayoutDrawerLink(Route.Snackbars.value), renderLayoutDrawerLink(Route.Spinners.value), renderLayoutDrawerLink(Route.Tabs.value), renderLayoutDrawerLink(Route.Toggles.value)])]);

    var render = function render(state) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_(Halogen_MDL_Layout.cl.layoutContainer)])([Halogen_HTML_Elements.div([Halogen_HTML_Properties.classes([Halogen_MDL_Layout.cl.layout, Halogen_MDL_Layout.cl.jsLayout, Halogen_MDL_Layout.cl.layoutFixedHeader]), Halogen_HTML_Properties.ref("mdl-layout-ref")])([renderLayoutHeader, renderLayoutDrawer, renderLayoutContent(state), renderSpacer, renderMegaFooter])]);
    };

    return Halogen_Component.lifecycleParentComponent(Data_Either.ordEither(ordDemoHomeSlot)(Data_Either.ordEither(ordDemoBadgesSlot)(Data_Either.ordEither(ordDemoButtonsSlot)(Data_Either.ordEither(ordDemoCardsSlot)(Data_Either.ordEither(ordDemoChipsSlot)(Data_Either.ordEither(ordDemoDialogsSlot)(Data_Either.ordEither(ordDemoListsSlot)(Data_Either.ordEither(ordDemoMenusSlot)(Data_Either.ordEither(ordDemoProgressSlot)(Data_Either.ordEither(ordDemoSlidersSlot)(Data_Either.ordEither(ordDemoSnackbarsSlot)(Data_Either.ordEither(ordDemoSpinnersSlot)(Data_Either.ordEither(ordDemoTabsSlot)(Data_Either.ordEither(ordDemoTogglesSlot)(Data_Ord.ordVoid)))))))))))))))({
      initialState: initialState,
      initializer: initializer,
      finalizer: finalizer,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["InitializeComponent"] = InitializeComponent;
  exports["FinalizeComponent"] = FinalizeComponent;
  exports["UpdateState"] = UpdateState;
  exports["UpdateRoute"] = UpdateRoute;
  exports["OnNavClick"] = OnNavClick;
  exports["OnDemoHomeMessage"] = OnDemoHomeMessage;
  exports["OnDemoBadgesMessage"] = OnDemoBadgesMessage;
  exports["OnDemoButtonsMessage"] = OnDemoButtonsMessage;
  exports["OnDemoCardsMessage"] = OnDemoCardsMessage;
  exports["OnDemoChipsMessage"] = OnDemoChipsMessage;
  exports["OnDemoDialogsMessage"] = OnDemoDialogsMessage;
  exports["OnDemoListsMessage"] = OnDemoListsMessage;
  exports["OnDemoMenusMessage"] = OnDemoMenusMessage;
  exports["OnDemoProgressMessage"] = OnDemoProgressMessage;
  exports["OnDemoSlidersMessage"] = OnDemoSlidersMessage;
  exports["OnDemoSnackbarsMessage"] = OnDemoSnackbarsMessage;
  exports["OnDemoSpinnersMessage"] = OnDemoSpinnersMessage;
  exports["OnDemoTabsMessage"] = OnDemoTabsMessage;
  exports["OnDemoTogglesMessage"] = OnDemoTogglesMessage;
  exports["Initialize"] = Initialize;
  exports["DemoHomeSlot"] = DemoHomeSlot;
  exports["cpDemoHome"] = cpDemoHome;
  exports["DemoBadgesSlot"] = DemoBadgesSlot;
  exports["cpDemoBadges"] = cpDemoBadges;
  exports["DemoButtonsSlot"] = DemoButtonsSlot;
  exports["cpDemoButtons"] = cpDemoButtons;
  exports["DemoCardsSlot"] = DemoCardsSlot;
  exports["cpDemoCards"] = cpDemoCards;
  exports["DemoChipsSlot"] = DemoChipsSlot;
  exports["cpDemoChips"] = cpDemoChips;
  exports["DemoDialogsSlot"] = DemoDialogsSlot;
  exports["cpDemoDialogs"] = cpDemoDialogs;
  exports["DemoListsSlot"] = DemoListsSlot;
  exports["cpDemoLists"] = cpDemoLists;
  exports["DemoMenusSlot"] = DemoMenusSlot;
  exports["cpDemoMenus"] = cpDemoMenus;
  exports["DemoProgressSlot"] = DemoProgressSlot;
  exports["cpDemoProgress"] = cpDemoProgress;
  exports["DemoSlidersSlot"] = DemoSlidersSlot;
  exports["cpDemoSliders"] = cpDemoSliders;
  exports["DemoSnackbarsSlot"] = DemoSnackbarsSlot;
  exports["cpDemoSnackbars"] = cpDemoSnackbars;
  exports["DemoSpinnersSlot"] = DemoSpinnersSlot;
  exports["cpDemoSpinners"] = cpDemoSpinners;
  exports["DemoTabsSlot"] = DemoTabsSlot;
  exports["cpDemoTabs"] = cpDemoTabs;
  exports["DemoTogglesSlot"] = DemoTogglesSlot;
  exports["cpDemoToggles"] = cpDemoToggles;
  exports["init"] = init;
  exports["demoContainer"] = demoContainer;
  exports["eqDemoHomeSlot"] = eqDemoHomeSlot;
  exports["ordDemoHomeSlot"] = ordDemoHomeSlot;
  exports["eqDemoBadgesSlot"] = eqDemoBadgesSlot;
  exports["ordDemoBadgesSlot"] = ordDemoBadgesSlot;
  exports["eqDemoButtonsSlot"] = eqDemoButtonsSlot;
  exports["ordDemoButtonsSlot"] = ordDemoButtonsSlot;
  exports["eqDemoCardsSlot"] = eqDemoCardsSlot;
  exports["ordDemoCardsSlot"] = ordDemoCardsSlot;
  exports["eqDemoChipsSlot"] = eqDemoChipsSlot;
  exports["ordDemoChipsSlot"] = ordDemoChipsSlot;
  exports["eqDemoDialogsSlot"] = eqDemoDialogsSlot;
  exports["ordDemoDialogsSlot"] = ordDemoDialogsSlot;
  exports["eqDemoListsSlot"] = eqDemoListsSlot;
  exports["ordDemoListsSlot"] = ordDemoListsSlot;
  exports["eqDemoMenusSlot"] = eqDemoMenusSlot;
  exports["ordDemoMenusSlot"] = ordDemoMenusSlot;
  exports["eqDemoProgressSlot"] = eqDemoProgressSlot;
  exports["ordDemoProgressSlot"] = ordDemoProgressSlot;
  exports["eqDemoSlidersSlot"] = eqDemoSlidersSlot;
  exports["ordDemoSlidersSlot"] = ordDemoSlidersSlot;
  exports["eqDemoSnackbarsSlot"] = eqDemoSnackbarsSlot;
  exports["ordDemoSnackbarsSlot"] = ordDemoSnackbarsSlot;
  exports["eqDemoSpinnersSlot"] = eqDemoSpinnersSlot;
  exports["ordDemoSpinnersSlot"] = ordDemoSpinnersSlot;
  exports["eqDemoTabsSlot"] = eqDemoTabsSlot;
  exports["ordDemoTabsSlot"] = ordDemoTabsSlot;
  exports["eqDemoTogglesSlot"] = eqDemoTogglesSlot;
  exports["ordDemoTogglesSlot"] = ordDemoTogglesSlot;
})(PS);

(function (exports) {
  /* globals exports, setTimeout */
  "use strict";

  var AVar = function () {
    function MutableQueue() {
      this.head = null;
      this.last = null;
      this.size = 0;
    }

    function MutableCell(queue, value) {
      this.queue = queue;
      this.value = value;
      this.next = null;
      this.prev = null;
    }

    function AVar(value) {
      this.draining = false;
      this.error = null;
      this.value = value;
      this.takes = new MutableQueue();
      this.reads = new MutableQueue();
      this.puts = new MutableQueue();
    }

    var EMPTY = {};

    function runEff(eff) {
      try {
        eff();
      } catch (error) {
        setTimeout(function () {
          throw error;
        }, 0);
      }
    }

    function putLast(queue, value) {
      var cell = new MutableCell(queue, value);

      switch (queue.size) {
        case 0:
          queue.head = cell;
          break;

        case 1:
          cell.prev = queue.head;
          queue.head.next = cell;
          queue.last = cell;
          break;

        default:
          cell.prev = queue.last;
          queue.last.next = cell;
          queue.last = cell;
      }

      queue.size++;
      return cell;
    }

    function takeLast(queue) {
      var cell;

      switch (queue.size) {
        case 0:
          return null;

        case 1:
          cell = queue.head;
          queue.head = null;
          break;

        case 2:
          cell = queue.last;
          queue.head.next = null;
          queue.last = null;
          break;

        default:
          cell = queue.last;
          queue.last = cell.prev;
          queue.last.next = null;
      }

      cell.prev = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function takeHead(queue) {
      var cell;

      switch (queue.size) {
        case 0:
          return null;

        case 1:
          cell = queue.head;
          queue.head = null;
          break;

        case 2:
          cell = queue.head;
          queue.last.prev = null;
          queue.head = queue.last;
          queue.last = null;
          break;

        default:
          cell = queue.head;
          queue.head = cell.next;
          queue.head.prev = null;
      }

      cell.next = null;
      cell.queue = null;
      queue.size--;
      return cell.value;
    }

    function deleteCell(cell) {
      if (cell.queue === null) {
        return;
      }

      if (cell.queue.last === cell) {
        takeLast(cell.queue);
        return;
      }

      if (cell.queue.head === cell) {
        takeHead(cell.queue);
        return;
      }

      if (cell.prev) {
        cell.prev.next = cell.next;
      }

      if (cell.next) {
        cell.next.prev = cell.prev;
      }

      cell.queue.size--;
      cell.queue = null;
      cell.value = null;
      cell.next = null;
      cell.prev = null;
    }

    function drainVar(util, avar) {
      if (avar.draining) {
        return;
      }

      var ps = avar.puts;
      var ts = avar.takes;
      var rs = avar.reads;
      var p, r, t, value, rsize;
      avar.draining = true;

      while (1) {
        // eslint-disable-line no-constant-condition
        p = null;
        r = null;
        t = null;
        value = avar.value;
        rsize = rs.size;

        if (avar.error !== null) {
          value = util.left(avar.error);

          while (p = takeHead(ps)) {
            // eslint-disable-line no-cond-assign
            runEff(p.cb(value));
          }

          while (r = takeHead(rs)) {
            // eslint-disable-line no-cond-assign
            runEff(r(value));
          }

          while (t = takeHead(ts)) {
            // eslint-disable-line no-cond-assign
            runEff(t(value));
          }

          break;
        } // Process the next put. We do not immediately invoke the callback
        // because we want to preserve ordering. If there are takes/reads
        // we want to run those first.


        if (value === EMPTY && (p = takeHead(ps))) {
          avar.value = value = p.value;
        }

        if (value !== EMPTY) {
          // We go ahead and queue up the next take for the same reasons as
          // above. Invoking the read callbacks can affect the mutable queue.
          t = takeHead(ts); // We only want to process the reads queued up before running these
          // callbacks so we guard on rsize.

          while (rsize-- && (r = takeHead(rs))) {
            runEff(r(util.right(value)));
          }

          if (t !== null) {
            avar.value = EMPTY;
            runEff(t(util.right(value)));
          }
        }

        if (p !== null) {
          runEff(p.cb(util.right(void 0)));
        } // Callbacks could have queued up more items so we need to guard on the
        // actual mutable properties.


        if (avar.value === EMPTY && ps.size === 0 || avar.value !== EMPTY && ts.size === 0) {
          break;
        }
      }

      avar.draining = false;
    }

    AVar.EMPTY = EMPTY;
    AVar.putLast = putLast;
    AVar.takeLast = takeLast;
    AVar.takeHead = takeHead;
    AVar.deleteCell = deleteCell;
    AVar.drainVar = drainVar;
    return AVar;
  }();

  exports.empty = function () {
    return new AVar(AVar.EMPTY);
  };

  exports._killVar = function (util, error, avar) {
    return function () {
      if (avar.error === null) {
        avar.error = error;
        avar.value = AVar.EMPTY;
        AVar.drainVar(util, avar);
      }
    };
  };

  exports._putVar = function (util, value, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.puts, {
        cb: cb,
        value: value
      });
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };

  exports._takeVar = function (util, avar, cb) {
    return function () {
      var cell = AVar.putLast(avar.takes, cb);
      AVar.drainVar(util, avar);
      return function () {
        AVar.deleteCell(cell);
      };
    };
  };
})(PS["Effect.AVar"] = PS["Effect.AVar"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect.AVar"] = $PS["Effect.AVar"] || {};
  var exports = $PS["Effect.AVar"];
  var $foreign = $PS["Effect.AVar"];
  var Data_Either = $PS["Data.Either"];
  var Data_Maybe = $PS["Data.Maybe"];

  var Killed = function () {
    function Killed(value0) {
      this.value0 = value0;
    }

    ;

    Killed.create = function (value0) {
      return new Killed(value0);
    };

    return Killed;
  }();

  var Filled = function () {
    function Filled(value0) {
      this.value0 = value0;
    }

    ;

    Filled.create = function (value0) {
      return new Filled(value0);
    };

    return Filled;
  }();

  var Empty = function () {
    function Empty() {}

    ;
    Empty.value = new Empty();
    return Empty;
  }();

  var ffiUtil = {
    left: Data_Either.Left.create,
    right: Data_Either.Right.create,
    nothing: Data_Maybe.Nothing.value,
    just: Data_Maybe.Just.create,
    killed: Killed.create,
    filled: Filled.create,
    empty: Empty.value
  };

  var kill = function kill(err) {
    return function (avar) {
      return $foreign["_killVar"](ffiUtil, err, avar);
    };
  };

  var put = function put(value) {
    return function (avar) {
      return function (cb) {
        return $foreign["_putVar"](ffiUtil, value, avar, cb);
      };
    };
  };

  var take = function take(avar) {
    return function (cb) {
      return $foreign["_takeVar"](ffiUtil, avar, cb);
    };
  };

  exports["Killed"] = Killed;
  exports["Filled"] = Filled;
  exports["Empty"] = Empty;
  exports["take"] = take;
  exports["put"] = put;
  exports["kill"] = kill;
  exports["empty"] = $foreign.empty;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect.Aff.AVar"] = $PS["Effect.Aff.AVar"] || {};
  var exports = $PS["Effect.Aff.AVar"];
  var Effect_AVar = $PS["Effect.AVar"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];

  var take = function take(avar) {
    return Effect_Aff.makeAff(function (k) {
      return function __do() {
        var v = Effect_AVar.take(avar)(k)();
        return Effect_Aff.effectCanceler(v);
      };
    });
  };

  var put = function put(value) {
    return function (avar) {
      return Effect_Aff.makeAff(function (k) {
        return function __do() {
          var v = Effect_AVar.put(value)(avar)(k)();
          return Effect_Aff.effectCanceler(v);
        };
      });
    };
  };

  var kill = function kill(error) {
    return function ($11) {
      return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.kill(error)($11));
    };
  };

  var empty = Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_AVar.empty);
  exports["empty"] = empty;
  exports["take"] = take;
  exports["put"] = put;
  exports["kill"] = kill;
})(PS);

(function (exports) {
  "use strict";

  exports.warn = function (s) {
    return function () {
      console.warn(s);
      return {};
    };
  };
})(PS["Effect.Console"] = PS["Effect.Console"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect.Console"] = $PS["Effect.Console"] || {};
  var exports = $PS["Effect.Console"];
  var $foreign = $PS["Effect.Console"];
  exports["warn"] = $foreign.warn;
})(PS);

(function (exports) {
  "use strict";

  exports.error = function (msg) {
    return new Error(msg);
  };

  exports.throwException = function (e) {
    return function () {
      throw e;
    };
  };
})(PS["Effect.Exception"] = PS["Effect.Exception"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Effect.Exception"] = $PS["Effect.Exception"] || {};
  var exports = $PS["Effect.Exception"];
  var $foreign = $PS["Effect.Exception"];

  var $$throw = function $$throw($1) {
    return $foreign.throwException($foreign.error($1));
  };

  exports["throw"] = $$throw;
  exports["error"] = $foreign.error;
  exports["throwException"] = $foreign.throwException;
})(PS);

(function (exports) {
  /* globals exports, JSON */
  "use strict";

  exports.unsafeDecodeURIComponent = decodeURIComponent;
})(PS["Global.Unsafe"] = PS["Global.Unsafe"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Global.Unsafe"] = $PS["Global.Unsafe"] || {};
  var exports = $PS["Global.Unsafe"];
  var $foreign = $PS["Global.Unsafe"];
  exports["unsafeDecodeURIComponent"] = $foreign.unsafeDecodeURIComponent;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.Aff.Driver.State"] = $PS["Halogen.Aff.Driver.State"] || {};
  var exports = $PS["Halogen.Aff.Driver.State"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var unRenderStateX = Unsafe_Coerce.unsafeCoerce;
  var unDriverStateX = Unsafe_Coerce.unsafeCoerce;

  var renderStateX_ = function renderStateX_(dictApplicative) {
    return function (f) {
      return unDriverStateX(function (st) {
        return Data_Foldable.traverse_(dictApplicative)(Data_Foldable.foldableMaybe)(f)(st.rendering);
      });
    };
  };

  var mkRenderStateX = function mkRenderStateX(v) {
    return Unsafe_Coerce.unsafeCoerce;
  };

  var renderStateX = function renderStateX(dictFunctor) {
    return function (f) {
      return unDriverStateX(function (st) {
        return mkRenderStateX(st.prjQuery)(f(st.rendering));
      });
    };
  };

  var mkDriverStateXRef = Unsafe_Coerce.unsafeCoerce;

  var initDriverState = function initDriverState(component) {
    return function (input) {
      return function (handler) {
        return function (prjQuery) {
          return function (lchs) {
            return function __do() {
              var v = Effect_Ref["new"]({})();
              var v1 = Effect_Ref["new"](Data_Map_Internal.empty)();
              var v2 = Effect_Ref["new"](Data_Map_Internal.empty)();
              var v3 = Effect_Ref["new"](Data_Functor.voidLeft(Data_Maybe.functorMaybe)(component.initializer)(Data_List_Types.Nil.value))();
              var v4 = Effect_Ref["new"](new Data_Maybe.Just(Data_List_Types.Nil.value))();
              var v5 = Effect_Ref["new"](Data_Maybe.Nothing.value)();
              var v6 = Effect_Ref["new"](0)();
              var v7 = Effect_Ref["new"](new Data_Maybe.Just(Data_Map_Internal.empty))();
              var ds = {
                component: component,
                state: component.initialState(input),
                refs: Data_Map_Internal.empty,
                children: Data_Map_Internal.empty,
                childrenIn: v1,
                childrenOut: v2,
                selfRef: v,
                handler: handler,
                pendingQueries: v3,
                pendingOuts: v4,
                pendingHandlers: v5,
                rendering: Data_Maybe.Nothing.value,
                prjQuery: prjQuery,
                fresh: v6,
                subscriptions: v7,
                lifecycleHandlers: lchs
              };
              Effect_Ref.write(ds)(v)();
              return mkDriverStateXRef(v);
            };
          };
        };
      };
    };
  };

  exports["unDriverStateX"] = unDriverStateX;
  exports["mkDriverStateXRef"] = mkDriverStateXRef;
  exports["renderStateX"] = renderStateX;
  exports["renderStateX_"] = renderStateX_;
  exports["unRenderStateX"] = unRenderStateX;
  exports["initDriverState"] = initDriverState;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.Query.EventSource"] = $PS["Halogen.Query.EventSource"] || {};
  var exports = $PS["Halogen.Query.EventSource"];
  var Data_Eq = $PS["Data.Eq"];

  var Listening = function () {
    function Listening() {}

    ;
    Listening.value = new Listening();
    return Listening;
  }();

  var Done = function () {
    function Done() {}

    ;
    Done.value = new Done();
    return Done;
  }();

  var unEventSource = function unEventSource(v) {
    return v;
  };

  var eqSubscribeStatus = new Data_Eq.Eq(function (x) {
    return function (y) {
      if (x instanceof Listening && y instanceof Listening) {
        return true;
      }

      ;

      if (x instanceof Done && y instanceof Done) {
        return true;
      }

      ;
      return false;
    };
  });
  exports["Listening"] = Listening;
  exports["Done"] = Done;
  exports["unEventSource"] = unEventSource;
  exports["eqSubscribeStatus"] = eqSubscribeStatus;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.Query.ForkF"] = $PS["Halogen.Query.ForkF"] || {};
  var exports = $PS["Halogen.Query.ForkF"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var unFork = Unsafe_Coerce.unsafeCoerce;
  exports["unFork"] = unFork;
})(PS);

(function (exports) {
  "use strict";

  exports.reallyUnsafeRefEq = function (a) {
    return function (b) {
      return a === b;
    };
  };
})(PS["Unsafe.Reference"] = PS["Unsafe.Reference"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Unsafe.Reference"] = $PS["Unsafe.Reference"] || {};
  var exports = $PS["Unsafe.Reference"];
  var $foreign = $PS["Unsafe.Reference"];
  var unsafeRefEq = $foreign.reallyUnsafeRefEq;
  exports["unsafeRefEq"] = unsafeRefEq;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.Aff.Driver.Eval"] = $PS["Halogen.Aff.Driver.Eval"] || {};
  var exports = $PS["Halogen.Aff.Driver.Eval"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Applicative_Free = $PS["Control.Applicative.Free"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Control_Monad_Fork_Class = $PS["Control.Monad.Fork.Class"];
  var Control_Monad_Free = $PS["Control.Monad.Free"];
  var Control_Monad_Free_Trans = $PS["Control.Monad.Free.Trans"];
  var Control_Monad_Trans_Class = $PS["Control.Monad.Trans.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Control_Parallel_Class = $PS["Control.Parallel.Class"];
  var Data_Boolean = $PS["Data.Boolean"];
  var Data_Coyoneda = $PS["Data.Coyoneda"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map = $PS["Data.Map"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Set = $PS["Data.Set"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Data_OrdBox = $PS["Halogen.Data.OrdBox"];
  var Halogen_Query_EventSource = $PS["Halogen.Query.EventSource"];
  var Halogen_Query_ForkF = $PS["Halogen.Query.ForkF"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Halogen_Query_InputF = $PS["Halogen.Query.InputF"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];

  var queuingHandler = function queuingHandler(handler) {
    return function (ref) {
      return function (message) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
          if (v instanceof Data_Maybe.Nothing) {
            return handler(message);
          }

          ;

          if (v instanceof Data_Maybe.Just) {
            return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write(new Data_Maybe.Just(new Data_List_Types.Cons(handler(message), v.value0)))(ref));
          }

          ;
          throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 171, column 3 - line 175, column 59): " + [v.constructor.name]);
        });
      };
    };
  };

  var handleLifecycle = function handleLifecycle(lchs) {
    return function (f) {
      return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
        initializers: Data_List_Types.Nil.value,
        finalizers: Data_List_Types.Nil.value
      })(lchs)))(function () {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(f))(function (v) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(lchs)))(function (v1) {
            return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(v1.finalizers))(function () {
              return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(v1.initializers))(function () {
                return Control_Applicative.pure(Effect_Aff.applicativeAff)(v);
              });
            });
          });
        });
      });
    };
  };

  var $$eval = function $$eval(render) {
    return function (r) {
      var go = function go(ref) {
        return function (v) {
          if (v instanceof Halogen_Query_HalogenM.State) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
              var v2 = v.value0(v1.state);

              if (Unsafe_Reference.unsafeRefEq(v1.state)(v2.value1)) {
                return Control_Applicative.pure(Effect_Aff.applicativeAff)(v2.value0);
              }

              ;

              if (Data_Boolean.otherwise) {
                return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.write({
                  component: v1.component,
                  state: v2.value1,
                  refs: v1.refs,
                  children: v1.children,
                  childrenIn: v1.childrenIn,
                  childrenOut: v1.childrenOut,
                  selfRef: v1.selfRef,
                  handler: v1.handler,
                  pendingQueries: v1.pendingQueries,
                  pendingOuts: v1.pendingOuts,
                  pendingHandlers: v1.pendingHandlers,
                  rendering: v1.rendering,
                  prjQuery: v1.prjQuery,
                  fresh: v1.fresh,
                  subscriptions: v1.subscriptions,
                  lifecycleHandlers: v1.lifecycleHandlers
                })(ref)))(function () {
                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(handleLifecycle(v1.lifecycleHandlers)(render(v1.lifecycleHandlers)(ref)))(function () {
                    return Control_Applicative.pure(Effect_Aff.applicativeAff)(v2.value0);
                  });
                });
              }

              ;
              throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 76, column 7 - line 82, column 21): " + [v2.constructor.name]);
            });
          }

          ;

          if (v instanceof Halogen_Query_HalogenM.Subscribe) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Query_EventSource.unEventSource(v.value0))(function (v2) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["modify'"](function (i) {
                  return {
                    state: i + 1 | 0,
                    value: i
                  };
                })(v1.fresh)))(function (v3) {
                  var done$prime = Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v1.subscriptions)))(function (v4) {
                    return Control_Applicative.when(Effect_Aff.applicativeAff)(Data_Maybe.maybe(false)(Data_Map_Internal.member(Data_Ord.ordInt)(v3))(v4))(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal["delete"](Data_Ord.ordInt)(v3)))(v1.subscriptions)));
                  });
                  return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.insert(Data_Ord.ordInt)(v3)(done$prime)))(v1.subscriptions)))(function () {
                    var consumer = Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Coroutine["await"](Effect_Aff.monadAff))(function (v4) {
                      return Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v1.subscriptions))))(function (v5) {
                        return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Maybe.isJust(v5))(Control_Bind.bind(Control_Monad_Free_Trans.bindFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Control_Monad_Trans_Class.lift(Control_Monad_Free_Trans.monadTransFreeT(Control_Coroutine.functorAwait))(Effect_Aff.monadAff)(evalF(ref)(v4)))(function (v6) {
                          return Control_Applicative.when(Control_Monad_Free_Trans.applicativeFreeT(Control_Coroutine.functorAwait)(Effect_Aff.monadAff))(Data_Eq.eq(Halogen_Query_EventSource.eqSubscribeStatus)(v6)(Halogen_Query_EventSource.Listening.value))(consumer);
                        }));
                      });
                    });
                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.pullFrom(Effect_Aff.monadRecAff)(consumer)(v2.producer)))(function () {
                      return done$prime;
                    });
                  });
                });
              })))(function (v2) {
                return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1);
              });
            });
          }

          ;

          if (v instanceof Halogen_Query_HalogenM.Lift) {
            return v.value0;
          }

          ;

          if (v instanceof Halogen_Query_HalogenM.Halt) {
            return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error(v.value0));
          }

          ;

          if (v instanceof Halogen_Query_HalogenM.GetSlots) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value0(Data_Functor.map(Data_List_Types.functorList)(Halogen_Data_OrdBox.unOrdBox)(Data_List.fromFoldable(Data_Set.foldableSet)(Data_Map.keys(v1.children)))));
            });
          }

          ;

          if (v instanceof Halogen_Query_HalogenM.CheckSlot) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1(Data_Map_Internal.member(Halogen_Data_OrdBox.ordOrdBox)(v1.component.mkOrdBox(v.value0))(v1.children)));
            });
          }

          ;

          if (v instanceof Halogen_Query_HalogenM.ChildQuery) {
            return evalChildQuery(ref)(v.value0)(v.value1);
          }

          ;

          if (v instanceof Halogen_Query_HalogenM.Raise) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
              return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(queuingHandler(v1.handler)(v1.pendingOuts)(v.value0))(function () {
                return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1);
              });
            });
          }

          ;

          if (v instanceof Halogen_Query_HalogenM.Par) {
            return Control_Parallel_Class.sequential(Effect_Aff.parallelAff)(Control_Applicative_Free.retractFreeAp(Effect_Aff.applicativeParAff)(Control_Applicative_Free.hoistFreeAp(function ($103) {
              return Control_Parallel_Class.parallel(Effect_Aff.parallelAff)(evalM(ref)($103));
            })(v.value0)));
          }

          ;

          if (v instanceof Halogen_Query_HalogenM.Fork) {
            return Halogen_Query_ForkF.unFork(function (v1) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(evalM(ref)(v1.value0)))(function (v2) {
                return Control_Applicative.pure(Effect_Aff.applicativeAff)(v1.value1(Data_Function.flip(Effect_Aff.killFiber)(v2)));
              });
            })(v.value0);
          }

          ;

          if (v instanceof Halogen_Query_HalogenM.GetRef) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v1) {
              return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value1(Data_Map_Internal.lookup(Data_Ord.ordString)(v.value0)(v1.refs)));
            });
          }

          ;
          throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 73, column 12 - line 128, column 33): " + [v.constructor.name]);
        };
      };

      var evalM = function evalM(ref) {
        return function (v) {
          return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(ref))(v);
        };
      };

      var evalF = function evalF(ref) {
        return function (q) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
            var v1 = v["component"]["eval"](q);
            return Control_Monad_Free.foldFree(Effect_Aff.monadRecAff)(go(ref))(v1);
          });
        };
      };

      var evalChildQuery = function evalChildQuery(ref) {
        return function (p) {
          return Data_Coyoneda.unCoyoneda(function (k) {
            return function (q) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
                var v1 = Data_Map_Internal.lookup(Halogen_Data_OrdBox.ordOrdBox)(v.component.mkOrdBox(p))(v.children);

                if (v1 instanceof Data_Maybe.Just) {
                  return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(v1.value0)))(function (v2) {
                    return Halogen_Aff_Driver_State.unDriverStateX(function (ds) {
                      var v3 = ds.prjQuery(q);

                      if (v3 instanceof Data_Maybe.Just) {
                        return Data_Functor.map(Effect_Aff.functorAff)(k)(evalF(ds.selfRef)(v3.value0));
                      }

                      ;

                      if (v3 instanceof Data_Maybe.Nothing) {
                        return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Query projection failed for child query"));
                      }

                      ;
                      throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 141, column 32 - line 143, column 82): " + [v3.constructor.name]);
                    })(v2);
                  });
                }

                ;

                if (v1 instanceof Data_Maybe.Nothing) {
                  return Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Slot lookup failed for child query"));
                }

                ;
                throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 138, column 5 - line 144, column 73): " + [v1.constructor.name]);
              });
            };
          });
        };
      };

      return function (v) {
        if (v instanceof Halogen_Query_InputF.RefUpdate) {
          return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(function (v1) {
            return {
              component: v1.component,
              state: v1.state,
              refs: Data_Map_Internal.alter(Data_Ord.ordString)(Data_Function["const"](v.value1))(v.value0)(v1.refs),
              children: v1.children,
              childrenIn: v1.childrenIn,
              childrenOut: v1.childrenOut,
              selfRef: v1.selfRef,
              handler: v1.handler,
              pendingQueries: v1.pendingQueries,
              pendingOuts: v1.pendingOuts,
              pendingHandlers: v1.pendingHandlers,
              rendering: v1.rendering,
              prjQuery: v1.prjQuery,
              fresh: v1.fresh,
              subscriptions: v1.subscriptions,
              lifecycleHandlers: v1.lifecycleHandlers
            };
          })(r)))(function () {
            return Control_Applicative.pure(Effect_Aff.applicativeAff)(v.value2);
          });
        }

        ;

        if (v instanceof Halogen_Query_InputF.Query) {
          return evalF(r)(v.value0);
        }

        ;
        throw new Error("Failed pattern match at Halogen.Aff.Driver.Eval (line 59, column 3 - line 64, column 25): " + [v.constructor.name]);
      };
    };
  };

  exports["handleLifecycle"] = handleLifecycle;
  exports["eval"] = $$eval;
  exports["queuingHandler"] = queuingHandler;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.Aff.Driver"] = $PS["Halogen.Aff.Driver"] || {};
  var exports = $PS["Halogen.Aff.Driver"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Coroutine = $PS["Control.Coroutine"];
  var Control_Monad_Fork_Class = $PS["Control.Monad.Fork.Class"];
  var Control_Monad_Rec_Class = $PS["Control.Monad.Rec.Class"];
  var Control_Parallel = $PS["Control.Parallel"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Aff_AVar = $PS["Effect.Aff.AVar"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Console = $PS["Effect.Console"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver_Eval = $PS["Halogen.Aff.Driver.Eval"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_Data_OrdBox = $PS["Halogen.Data.OrdBox"];
  var Halogen_Query_InputF = $PS["Halogen.Query.InputF"];
  var newLifecycleHandlers = Effect_Ref["new"]({
    initializers: Data_List_Types.Nil.value,
    finalizers: Data_List_Types.Nil.value
  });
  var handleAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));

  var runUI = function runUI(renderSpec) {
    return function (component) {
      return function (i) {
        var subscribe = function subscribe(fresh) {
          return function (ref) {
            return function (consumer) {
              return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Aff_AVar.empty)(function (v) {
                return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                  var v1 = Effect_Ref.read(fresh)();
                  Effect_Ref.modify_(function (v2) {
                    return v2 + 1 | 0;
                  })(fresh)();
                  Effect_Ref.modify_(Data_Map_Internal.insert(Data_Ord.ordInt)(v1)(v))(ref)();
                  return v1;
                }))(function (v1) {
                  var producer = Control_Coroutine.producer(Effect_Aff.monadAff)(Data_Functor.map(Effect_Aff.functorAff)(Data_Either.Left.create)(Effect_Aff_AVar.take(v)));
                  return Data_Functor["void"](Effect_Aff.functorAff)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff)(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Coroutine.runProcess(Effect_Aff.monadRecAff)(Control_Coroutine.connect(Effect_Aff.monadRecAff)(Effect_Aff.parallelAff)(producer)(consumer)))(function () {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.modify_(Data_Map_Internal["delete"](Data_Ord.ordInt)(v1))(ref)))(function () {
                      return Effect_Aff_AVar.kill(Effect_Exception.error("ended"))(v);
                    });
                  })));
                });
              });
            };
          };
        };

        var rootHandler = function rootHandler(ref) {
          return function (message) {
            return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref.read(ref)))(function (v) {
              return Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_Functor.map(Data_Map_Internal.functorMap)(Effect_Aff_AVar.put(message))(v));
            });
          };
        };

        var handlePending = function handlePending(ref) {
          return function __do() {
            var v = Effect_Ref.read(ref)();
            Effect_Ref.write(Data_Maybe.Nothing.value)(ref)();
            return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(v)(function ($63) {
              return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($63)));
            })();
          };
        };

        var cleanupSubscriptions = function cleanupSubscriptions(v) {
          return function __do() {
            Control_Bind.bindFlipped(Effect.bindEffect)(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($64) {
              return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_Map_Internal.foldableMap)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))($64));
            }))(Effect_Ref.read(v.subscriptions))();
            return Effect_Ref.write(Data_Maybe.Nothing.value)(v.subscriptions)();
          };
        };

        var squashChildInitializers = function squashChildInitializers(lchs) {
          return function (preInits) {
            return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
              var parentInitializer = Data_Functor.map(Data_Maybe.functorMaybe)(function ($65) {
                return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($65));
              })(st.component.initializer);
              return Effect_Ref.modify_(function (handlers) {
                return {
                  initializers: new Data_List_Types.Cons(Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Control_Parallel.parSequence_(Effect_Aff.parallelAff)(Data_List_Types.foldableList)(Data_List.reverse(handlers.initializers)))(function () {
                    return Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(Data_Foldable.sequence_(Effect_Aff.applicativeAff)(Data_Foldable.foldableMaybe)(parentInitializer))(function () {
                      return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(function __do() {
                        handlePending(st.pendingQueries)();
                        return handlePending(st.pendingOuts)();
                      });
                    });
                  }), preInits),
                  finalizers: handlers.finalizers
                };
              })(lchs);
            });
          };
        };

        var runComponent = function runComponent(lchs) {
          return function (handler) {
            return function (j) {
              return function (prjQuery) {
                return Halogen_Component.unComponent(function (c) {
                  return function __do() {
                    var v = newLifecycleHandlers();
                    var v1 = Halogen_Aff_Driver_State.initDriverState(c)(j)(handler)(prjQuery)(v)();
                    var v2 = Effect_Ref.read(lchs)();
                    Effect_Ref.write({
                      initializers: Data_List_Types.Nil.value,
                      finalizers: v2.finalizers
                    })(lchs)();
                    Control_Bind.bindFlipped(Effect.bindEffect)(Halogen_Aff_Driver_State.unDriverStateX(function ($66) {
                      return render(lchs)(function (v3) {
                        return v3.selfRef;
                      }($66));
                    }))(Effect_Ref.read(v1))();
                    Control_Bind.bindFlipped(Effect.bindEffect)(squashChildInitializers(lchs)(v2.initializers))(Effect_Ref.read(v1))();
                    return v1;
                  };
                });
              };
            };
          };
        };

        var renderChild = function renderChild(lchs) {
          return function (handler) {
            return function (mkOrdBox) {
              return function (childrenInRef) {
                return function (childrenOutRef) {
                  return Halogen_Component.unComponentSlot(function (p) {
                    return function (ctor) {
                      return function (input) {
                        return function (inputQuery) {
                          return function (outputQuery) {
                            return function (prjQuery) {
                              var ordP = mkOrdBox(p);
                              return function __do() {
                                var v = Effect_Ref.read(childrenInRef)();

                                var v1 = function () {
                                  var v1 = Data_Map_Internal.pop(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v);

                                  if (v1 instanceof Data_Maybe.Just) {
                                    Effect_Ref.write(v1.value0.value1)(childrenInRef)();
                                    Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(inputQuery(input))(function (q) {
                                      return function __do() {
                                        var v2 = Effect_Ref.read(v1.value0.value0)();
                                        return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                                          return Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(st.prjQuery(q))(function ($67) {
                                            return handleAff(evalF(st.selfRef)(Halogen_Query_InputF.Query.create($67)));
                                          });
                                        })(v2)();
                                      };
                                    })();
                                    return v1.value0.value0;
                                  }

                                  ;

                                  if (v1 instanceof Data_Maybe.Nothing) {
                                    return runComponent(lchs)(function ($68) {
                                      return Data_Maybe.maybe(Control_Applicative.pure(Effect_Aff.applicativeAff)(Data_Unit.unit))(handler)(outputQuery($68));
                                    })(input)(prjQuery)(ctor)();
                                  }

                                  ;
                                  throw new Error("Failed pattern match at Halogen.Aff.Driver (line 258, column 14 - line 266, column 92): " + [v1.constructor.name]);
                                }();

                                var v2 = Data_Functor.map(Effect.functorEffect)(Data_Map_Internal.member(Halogen_Data_OrdBox.ordOrdBox)(ordP))(Effect_Ref.read(childrenOutRef))();
                                Control_Applicative.when(Effect.applicativeEffect)(v2)(Effect_Console.warn("Halogen: Duplicate slot address was detected during rendering, unexpected results may occur"))();
                                Effect_Ref.modify_(Data_Map_Internal.insert(Halogen_Data_OrdBox.ordOrdBox)(ordP)(v1))(childrenOutRef)();
                                return Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v1))(Halogen_Aff_Driver_State.renderStateX(Effect.functorEffect)(function (v3) {
                                  if (v3 instanceof Data_Maybe.Nothing) {
                                    return Effect_Exception["throw"]("Halogen internal error: child was not initialized in renderChild");
                                  }

                                  ;

                                  if (v3 instanceof Data_Maybe.Just) {
                                    return Control_Applicative.pure(Effect.applicativeEffect)(renderSpec.renderChild(v3.value0));
                                  }

                                  ;
                                  throw new Error("Failed pattern match at Halogen.Aff.Driver (line 271, column 37 - line 273, column 50): " + [v3.constructor.name]);
                                }))();
                              };
                            };
                          };
                        };
                      };
                    };
                  });
                };
              };
            };
          };
        };

        var render = function render(lchs) {
          return function ($$var) {
            return function __do() {
              var v = Effect_Ref.read($$var)();
              var v1 = Data_Functor.map(Effect.functorEffect)(Data_Maybe.isNothing)(Effect_Ref.read(v.pendingHandlers))();
              Control_Applicative.when(Effect.applicativeEffect)(v1)(Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers))();
              Effect_Ref.write(Data_Map_Internal.empty)(v.childrenOut)();
              Effect_Ref.write(v.children)(v.childrenIn)();
              var handler = Halogen_Aff_Driver_Eval.queuingHandler(function ($69) {
                return Data_Functor["void"](Effect_Aff.functorAff)(evalF(v.selfRef)($69));
              })(v.pendingHandlers);
              var childHandler = Halogen_Aff_Driver_Eval.queuingHandler(function ($70) {
                return handler(Halogen_Query_InputF.Query.create($70));
              })(v.pendingQueries);
              var v2 = renderSpec.render(function ($71) {
                return handleAff(handler($71));
              })(renderChild(lchs)(childHandler)(v.component.mkOrdBox)(v.childrenIn)(v.childrenOut))(v.component.render(v.state))(v.rendering)();
              var v3 = Effect_Ref.read(v.childrenOut)();
              Control_Bind.bind(Effect.bindEffect)(Effect_Ref.read(v.childrenIn))(Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(function (childVar) {
                return function __do() {
                  var v4 = Effect_Ref.read(childVar)();
                  Halogen_Aff_Driver_State.renderStateX_(Effect.applicativeEffect)(renderSpec.removeChild)(v4)();
                  return finalize(lchs)(v4)();
                };
              }))();
              Effect_Ref.modify_(function (v4) {
                return {
                  rendering: new Data_Maybe.Just(v2),
                  children: v3,
                  component: v4.component,
                  state: v4.state,
                  refs: v4.refs,
                  childrenIn: v4.childrenIn,
                  childrenOut: v4.childrenOut,
                  selfRef: v4.selfRef,
                  handler: v4.handler,
                  pendingQueries: v4.pendingQueries,
                  pendingOuts: v4.pendingOuts,
                  pendingHandlers: v4.pendingHandlers,
                  prjQuery: v4.prjQuery,
                  fresh: v4.fresh,
                  subscriptions: v4.subscriptions,
                  lifecycleHandlers: v4.lifecycleHandlers
                };
              })(v.selfRef)();
              return Control_Applicative.when(Effect.applicativeEffect)(v1)(Data_Function.flip(Control_Monad_Rec_Class.tailRecM(Control_Monad_Rec_Class.monadRecEffect))(Data_Unit.unit)(function (v4) {
                return function __do() {
                  var v5 = Effect_Ref.read(v.pendingHandlers)();
                  Effect_Ref.write(new Data_Maybe.Just(Data_List_Types.Nil.value))(v.pendingHandlers)();
                  Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function ($72) {
                    return handleAff(Data_Foldable.traverse_(Effect_Aff.applicativeAff)(Data_List_Types.foldableList)(Control_Monad_Fork_Class.fork(Control_Monad_Fork_Class.monadForkAff))(Data_List.reverse($72)));
                  })(v5)();
                  var v6 = Effect_Ref.read(v.pendingHandlers)();
                  var $57 = Data_Maybe.maybe(false)(Data_List["null"])(v6);

                  if ($57) {
                    return Data_Functor.voidLeft(Effect.functorEffect)(Effect_Ref.write(Data_Maybe.Nothing.value)(v.pendingHandlers))(new Control_Monad_Rec_Class.Done(Data_Unit.unit))();
                  }

                  ;
                  return new Control_Monad_Rec_Class.Loop(Data_Unit.unit);
                };
              }))();
            };
          };
        };

        var finalize = function finalize(lchs) {
          return Halogen_Aff_Driver_State.unDriverStateX(function (st) {
            return function __do() {
              cleanupSubscriptions(st)();
              Data_Foldable.for_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(function ($73) {
                return evalF(st.selfRef)(Halogen_Query_InputF.Query.create($73));
              })(st.component.finalizer))(function (f) {
                return Effect_Ref.modify_(function (handlers) {
                  return {
                    initializers: handlers.initializers,
                    finalizers: new Data_List_Types.Cons(f, handlers.finalizers)
                  };
                })(lchs);
              })();
              return Data_Foldable.for_(Effect.applicativeEffect)(Data_Map_Internal.foldableMap)(st.children)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)(finalize(lchs))(Effect_Ref.read))();
            };
          });
        };

        var evalF = function evalF(ref) {
          return Halogen_Aff_Driver_Eval["eval"](render)(ref);
        };

        var evalDriver = function evalDriver(ref) {
          return function (prjQuery) {
            return function (q) {
              var v = prjQuery(q);

              if (v instanceof Data_Maybe.Just) {
                return evalF(ref)(new Halogen_Query_InputF.Query(v.value0));
              }

              ;

              if (v instanceof Data_Maybe.Nothing) {
                return Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Exception.throwException(Effect_Exception.error("Halogen internal error: query projection failed in runUI'")));
              }

              ;
              throw new Error("Failed pattern match at Halogen.Aff.Driver (line 136, column 5 - line 138, column 113): " + [v.constructor.name]);
            };
          };
        };

        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(newLifecycleHandlers))(function (v) {
          return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Effect_Ref["new"](0)))(function (v1) {
            return Halogen_Aff_Driver_Eval.handleLifecycle(v)(function __do() {
              var v2 = Effect_Ref["new"](Data_Map_Internal.empty)();
              return Control_Bind.bind(Effect.bindEffect)(Control_Bind.bind(Effect.bindEffect)(runComponent(v)(rootHandler(v2))(i)(Data_Maybe.Just.create)(component))(Effect_Ref.read))(Halogen_Aff_Driver_State.unDriverStateX(function (st) {
                return Control_Applicative.pure(Effect.applicativeEffect)({
                  query: evalDriver(st.selfRef)(st.prjQuery),
                  subscribe: subscribe(v1)(v2)
                });
              }))();
            });
          });
        });
      };
    };
  };

  exports["runUI"] = runUI;
})(PS);

(function (exports) {
  "use strict";

  exports._querySelector = function (selector) {
    return function (node) {
      return function () {
        return node.querySelector(selector);
      };
    };
  };
})(PS["Web.DOM.ParentNode"] = PS["Web.DOM.ParentNode"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Web.DOM.ParentNode"] = $PS["Web.DOM.ParentNode"] || {};
  var exports = $PS["Web.DOM.ParentNode"];
  var $foreign = $PS["Web.DOM.ParentNode"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];

  var querySelector = function querySelector(qs) {
    return function ($3) {
      return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_querySelector"](qs)($3));
    };
  };

  exports["querySelector"] = querySelector;
})(PS);

(function (exports) {
  /* global window */
  "use strict";

  exports.window = function () {
    return window;
  };
})(PS["Web.HTML"] = PS["Web.HTML"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Web.HTML"] = $PS["Web.HTML"] || {};
  var exports = $PS["Web.HTML"];
  var $foreign = $PS["Web.HTML"];
  exports["window"] = $foreign.window;
})(PS);

(function (exports) {
  "use strict";

  exports._readyState = function (doc) {
    return function () {
      return doc.readyState;
    };
  };
})(PS["Web.HTML.HTMLDocument"] = PS["Web.HTML.HTMLDocument"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Web.HTML.HTMLDocument.ReadyState"] = $PS["Web.HTML.HTMLDocument.ReadyState"] || {};
  var exports = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var Data_Maybe = $PS["Data.Maybe"];

  var Loading = function () {
    function Loading() {}

    ;
    Loading.value = new Loading();
    return Loading;
  }();

  var Interactive = function () {
    function Interactive() {}

    ;
    Interactive.value = new Interactive();
    return Interactive;
  }();

  var Complete = function () {
    function Complete() {}

    ;
    Complete.value = new Complete();
    return Complete;
  }();

  var parse = function parse(v) {
    if (v === "loading") {
      return new Data_Maybe.Just(Loading.value);
    }

    ;

    if (v === "interactive") {
      return new Data_Maybe.Just(Interactive.value);
    }

    ;

    if (v === "complete") {
      return new Data_Maybe.Just(Complete.value);
    }

    ;
    return Data_Maybe.Nothing.value;
  };

  exports["Loading"] = Loading;
  exports["Interactive"] = Interactive;
  exports["Complete"] = Complete;
  exports["parse"] = parse;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Web.HTML.HTMLDocument"] = $PS["Web.HTML.HTMLDocument"] || {};
  var exports = $PS["Web.HTML.HTMLDocument"];
  var $foreign = $PS["Web.HTML.HTMLDocument"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Effect = $PS["Effect"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var Web_HTML_HTMLDocument_ReadyState = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var toParentNode = Unsafe_Coerce.unsafeCoerce;
  var toDocument = Unsafe_Coerce.unsafeCoerce;

  var readyState = function readyState($0) {
    return Data_Functor.map(Effect.functorEffect)(function ($1) {
      return Data_Maybe.fromMaybe(Web_HTML_HTMLDocument_ReadyState.Loading.value)(Web_HTML_HTMLDocument_ReadyState.parse($1));
    })($foreign["_readyState"]($0));
  };

  exports["toDocument"] = toDocument;
  exports["toParentNode"] = toParentNode;
  exports["readyState"] = readyState;
})(PS);

(function (exports) {
  "use strict";

  exports.document = function (window) {
    return function () {
      return window.document;
    };
  };

  exports.location = function (window) {
    return function () {
      return window.location;
    };
  };
})(PS["Web.HTML.Window"] = PS["Web.HTML.Window"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Web.HTML.Window"] = $PS["Web.HTML.Window"] || {};
  var exports = $PS["Web.HTML.Window"];
  var $foreign = $PS["Web.HTML.Window"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var toEventTarget = Unsafe_Coerce.unsafeCoerce;
  exports["toEventTarget"] = toEventTarget;
  exports["document"] = $foreign.document;
  exports["location"] = $foreign.location;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.Aff.Util"] = $PS["Halogen.Aff.Util"] || {};
  var exports = $PS["Halogen.Aff.Util"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_Error_Class = $PS["Control.Monad.Error.Class"];
  var Data_Either = $PS["Data.Either"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Exception = $PS["Effect.Exception"];
  var Web_DOM_ParentNode = $PS["Web.DOM.ParentNode"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Event_EventTypes = $PS["Web.HTML.Event.EventTypes"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLDocument_ReadyState = $PS["Web.HTML.HTMLDocument.ReadyState"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];

  var selectElement = function selectElement(query) {
    return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Control_Bind.bindFlipped(Effect.bindEffect)(Control_Bind.composeKleisliFlipped(Effect.bindEffect)(function ($12) {
      return Web_DOM_ParentNode.querySelector(query)(Web_HTML_HTMLDocument.toParentNode($12));
    })(Web_HTML_Window.document))(Web_HTML.window)))(function (v) {
      return Control_Applicative.pure(Effect_Aff.applicativeAff)(Control_Bind.bindFlipped(Data_Maybe.bindMaybe)(Web_HTML_HTMLElement.fromElement)(v));
    });
  };

  var runHalogenAff = Effect_Aff.runAff_(Data_Either.either(Effect_Exception.throwException)(Data_Function["const"](Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit))));
  var awaitLoad = Effect_Aff.makeAff(function (callback) {
    return function __do() {
      var v = Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_HTMLDocument.readyState)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))();

      if (v instanceof Web_HTML_HTMLDocument_ReadyState.Loading) {
        var v1 = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
        var v2 = Web_Event_EventTarget.eventListener(function (v2) {
          return callback(new Data_Either.Right(Data_Unit.unit));
        })();
        Web_Event_EventTarget.addEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(v2)(false)(v1)();
        return Effect_Aff.effectCanceler(Web_Event_EventTarget.removeEventListener(Web_HTML_Event_EventTypes.domcontentloaded)(v2)(false)(v1));
      }

      ;
      callback(new Data_Either.Right(Data_Unit.unit))();
      return Effect_Aff.nonCanceler;
    };
  });
  var awaitBody = Control_Bind.discard(Control_Bind.discardUnit)(Effect_Aff.bindAff)(awaitLoad)(function () {
    return Control_Bind.bind(Effect_Aff.bindAff)(selectElement("body"))(function (v) {
      return Data_Maybe.maybe(Control_Monad_Error_Class.throwError(Effect_Aff.monadThrowAff)(Effect_Exception.error("Could not find body")))(Control_Applicative.pure(Effect_Aff.applicativeAff))(v);
    });
  });
  exports["awaitLoad"] = awaitLoad;
  exports["awaitBody"] = awaitBody;
  exports["selectElement"] = selectElement;
  exports["runHalogenAff"] = runHalogenAff;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Web.DOM.Element"] = $PS["Web.DOM.Element"] || {};
  var exports = $PS["Web.DOM.Element"];
  var Unsafe_Coerce = $PS["Unsafe.Coerce"];
  var toNode = Unsafe_Coerce.unsafeCoerce;
  exports["toNode"] = toNode;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.VDom.DOM"] = $PS["Halogen.VDom.DOM"] || {};
  var exports = $PS["Halogen.VDom.DOM"];
  var Data_Array = $PS["Data.Array"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Effect = $PS["Effect"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Halogen_VDom_Types = $PS["Halogen.VDom.Types"];
  var Halogen_VDom_Util = $PS["Halogen.VDom.Util"];
  var Web_DOM_Element = $PS["Web.DOM.Element"];

  var eqElemSpec = function eqElemSpec(a, b) {
    if (a.value1 === b.value1) {
      if (a.value0 instanceof Data_Maybe.Just && b.value0 instanceof Data_Maybe.Just && a.value0.value0 === b.value0.value0) {
        return true;
      }

      ;

      if (a.value0 instanceof Data_Maybe.Nothing && b.value0 instanceof Data_Maybe.Nothing) {
        return true;
      }

      ;
      return false;
    }

    ;
    return false;
  };

  var buildWidget = function () {
    var patch = function patch(build, v) {
      return function (v1) {
        if (v1 instanceof Halogen_VDom_Types.Grafted) {
          return patch(build, v)(Halogen_VDom_Types.runGraft(v1.value0));
        }

        ;

        if (v1 instanceof Halogen_VDom_Types.Widget) {
          var v2 = v.value1(v1.value0);
          return new Halogen_VDom_Machine.Step(v2.value0, patch(build, v2), v2.value2);
        }

        ;
        v.value2();
        return build(v1);
      };
    };

    var render = function render(v, build, w) {
      var v1 = v.buildWidget(v)(w);
      return new Halogen_VDom_Machine.Step(v1.value0, patch(build, v1), v1.value2);
    };

    return render;
  }();

  var buildText = function () {
    var patch = function patch(build, halt, node, s1) {
      return function (v) {
        if (v instanceof Halogen_VDom_Types.Grafted) {
          return patch(build, halt, node, s1)(Halogen_VDom_Types.runGraft(v.value0));
        }

        ;

        if (v instanceof Halogen_VDom_Types.Text) {
          var res = new Halogen_VDom_Machine.Step(node, patch(build, halt, node, v.value0), halt);
          var $84 = s1 === v.value0;

          if ($84) {
            return res;
          }

          ;
          Halogen_VDom_Util.setTextContent(v.value0, node);
          return res;
        }

        ;
        halt();
        return build(v);
      };
    };

    var done = function done(node) {
      return function __do() {
        var v = Halogen_VDom_Util.parentNode(node);
        return Halogen_VDom_Util.removeChild(node, v);
      };
    };

    var render = function render(v, build, s) {
      var v1 = Halogen_VDom_Util.createTextNode(s, v.document);
      var halt = done(v1);
      return new Halogen_VDom_Machine.Step(v1, patch(build, halt, v1, s), halt);
    };

    return render;
  }();

  var buildKeyed = function () {
    var done = function done(node, attrs, steps) {
      return function __do() {
        var v = Halogen_VDom_Util.parentNode(node);
        Halogen_VDom_Util.removeChild(node, v);
        Halogen_VDom_Util.forInE(steps, function (v1, v2) {
          return v2.value2();
        });
        return Halogen_VDom_Machine.halt(attrs)();
      };
    };

    var patch = function patch(build, halt, node, attrs, v, ch1, len1) {
      return function (v1) {
        if (v1 instanceof Halogen_VDom_Types.Grafted) {
          return patch(build, halt, node, attrs, v, ch1, len1)(Halogen_VDom_Types.runGraft(v1.value0));
        }

        ;

        if (v1 instanceof Halogen_VDom_Types.Keyed && eqElemSpec(v, v1.value0)) {
          var v2 = Data_Array.length(v1.value1);

          if (len1 === 0 && v2 === 0) {
            var v4 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
            var halt$prime = done(node, v4, ch1);
            return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v4, v1.value0, ch1, 0), halt$prime);
          }

          ;

          var onThis = function onThis(v4, v5) {
            return v5.value2();
          };

          var onThese = function onThese(v4, ix$prime, v5, v6) {
            var v7 = v5.value1(v6.value1);
            Halogen_VDom_Util.insertChildIx(ix$prime, v7.value0, node);
            return v7;
          };

          var onThat = function onThat(v4, ix, v5) {
            var v6 = build(v5.value1);
            Halogen_VDom_Util.insertChildIx(ix, v6.value0, node);
            return v6;
          };

          var v4 = Halogen_VDom_Util.diffWithKeyAndIxE(ch1, v1.value1, Data_Tuple.fst, onThese, onThis, onThat);
          var v5 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
          var halt$prime = done(node, v5, v4);
          return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v5, v1.value0, v4, v2), halt$prime);
        }

        ;
        halt();
        return build(v1);
      };
    };

    var render = function render(v, build, v1, ch1) {
      var v2 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0), v1.value1, v.document);
      var node = Web_DOM_Element.toNode(v2);

      var onChild = function onChild(k, ix, v3) {
        var v4 = build(v3.value1);
        Halogen_VDom_Util.insertChildIx(ix, v4.value0, node);
        return v4;
      };

      var v3 = Halogen_VDom_Util.strMapWithIxE(ch1, Data_Tuple.fst, onChild);
      var v4 = v.buildAttributes(v2)(v1.value2);
      var halt = done(node, v4, v3);
      return new Halogen_VDom_Machine.Step(node, patch(build, halt, node, v4, v1, v3, Data_Array.length(ch1)), halt);
    };

    return render;
  }();

  var buildElem = function () {
    var done = function done(node, attrs, steps) {
      return function __do() {
        var v = Halogen_VDom_Util.parentNode(node);
        Halogen_VDom_Util.removeChild(node, v);
        Effect.foreachE(steps)(Halogen_VDom_Machine.halt)();
        return Halogen_VDom_Machine.halt(attrs)();
      };
    };

    var patch = function patch(build, halt, node, attrs, v, ch1) {
      return function (v1) {
        if (v1 instanceof Halogen_VDom_Types.Grafted) {
          return patch(build, halt, node, attrs, v, ch1)(Halogen_VDom_Types.runGraft(v1.value0));
        }

        ;

        if (v1 instanceof Halogen_VDom_Types.Elem && eqElemSpec(v, v1.value0)) {
          var v2 = Data_Array.length(v1.value1);
          var v3 = Data_Array.length(ch1);

          if (v3 === 0 && v2 === 0) {
            var v4 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
            var halt$prime = done(node, v4, ch1);
            return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v4, v1.value0, ch1), halt$prime);
          }

          ;

          var onThis = function onThis(ix, v4) {
            return v4.value2();
          };

          var onThese = function onThese(ix, v4, vdom) {
            var v5 = v4.value1(vdom);
            Halogen_VDom_Util.insertChildIx(ix, v5.value0, node);
            return v5;
          };

          var onThat = function onThat(ix, vdom) {
            var v4 = build(vdom);
            Halogen_VDom_Util.insertChildIx(ix, v4.value0, node);
            return v4;
          };

          var v4 = Halogen_VDom_Util.diffWithIxE(ch1, v1.value1, onThese, onThis, onThat);
          var v5 = Halogen_VDom_Machine.step(attrs)(v1.value0.value2);
          var halt$prime = done(node, v5, v4);
          return new Halogen_VDom_Machine.Step(node, patch(build, halt$prime, node, v5, v1.value0, v4), halt$prime);
        }

        ;
        halt();
        return build(v1);
      };
    };

    var render = function render(v, build, v1, ch1) {
      var v2 = Halogen_VDom_Util.createElement(Data_Nullable.toNullable(v1.value0), v1.value1, v.document);
      var node = Web_DOM_Element.toNode(v2);

      var onChild = function onChild(ix, child) {
        var v3 = build(child);
        Halogen_VDom_Util.insertChildIx(ix, v3.value0, node);
        return v3;
      };

      var v3 = Halogen_VDom_Util.forE(ch1, onChild);
      var v4 = v.buildAttributes(v2)(v1.value2);
      var halt = done(node, v4, v3);
      return new Halogen_VDom_Machine.Step(node, patch(build, halt, node, v4, v1, v3), halt);
    };

    return render;
  }();

  var buildVDom = function buildVDom(spec) {
    var build = function build(v) {
      if (v instanceof Halogen_VDom_Types.Text) {
        return buildText(spec, build, v.value0);
      }

      ;

      if (v instanceof Halogen_VDom_Types.Elem) {
        return buildElem(spec, build, v.value0, v.value1);
      }

      ;

      if (v instanceof Halogen_VDom_Types.Keyed) {
        return buildKeyed(spec, build, v.value0, v.value1);
      }

      ;

      if (v instanceof Halogen_VDom_Types.Widget) {
        return buildWidget(spec, build, v.value0);
      }

      ;

      if (v instanceof Halogen_VDom_Types.Grafted) {
        return build(Halogen_VDom_Types.runGraft(v.value0));
      }

      ;
      throw new Error("Failed pattern match at Halogen.VDom.DOM (line 58, column 27 - line 63, column 52): " + [v.constructor.name]);
    };

    return build;
  };

  exports["buildVDom"] = buildVDom;
  exports["buildText"] = buildText;
  exports["buildElem"] = buildElem;
  exports["buildKeyed"] = buildKeyed;
  exports["buildWidget"] = buildWidget;
})(PS);

(function (exports) {
  "use strict";

  var getEffProp = function getEffProp(name) {
    return function (node) {
      return function () {
        return node[name];
      };
    };
  };

  exports._parentNode = getEffProp("parentNode");
  exports._nextSibling = getEffProp("nextSibling");

  exports.insertBefore = function (node1) {
    return function (node2) {
      return function (parent) {
        return function () {
          return parent.insertBefore(node1, node2);
        };
      };
    };
  };

  exports.appendChild = function (node) {
    return function (parent) {
      return function () {
        return parent.appendChild(node);
      };
    };
  };

  exports.removeChild = function (node) {
    return function (parent) {
      return function () {
        return parent.removeChild(node);
      };
    };
  };
})(PS["Web.DOM.Node"] = PS["Web.DOM.Node"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Web.DOM.Node"] = $PS["Web.DOM.Node"] || {};
  var exports = $PS["Web.DOM.Node"];
  var $foreign = $PS["Web.DOM.Node"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Nullable = $PS["Data.Nullable"];
  var Effect = $PS["Effect"];

  var parentNode = function parentNode($2) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_parentNode"]($2));
  };

  var nextSibling = function nextSibling($6) {
    return Data_Functor.map(Effect.functorEffect)(Data_Nullable.toMaybe)($foreign["_nextSibling"]($6));
  };

  exports["parentNode"] = parentNode;
  exports["nextSibling"] = nextSibling;
  exports["insertBefore"] = $foreign.insertBefore;
  exports["appendChild"] = $foreign.appendChild;
  exports["removeChild"] = $foreign.removeChild;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Halogen.VDom.Driver"] = $PS["Halogen.VDom.Driver"] || {};
  var exports = $PS["Halogen.VDom.Driver"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_HeytingAlgebra = $PS["Data.HeytingAlgebra"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect = $PS["Effect"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Halogen_Aff_Driver = $PS["Halogen.Aff.Driver"];
  var Halogen_Aff_Driver_State = $PS["Halogen.Aff.Driver.State"];
  var Halogen_VDom_DOM = $PS["Halogen.VDom.DOM"];
  var Halogen_VDom_DOM_Prop = $PS["Halogen.VDom.DOM.Prop"];
  var Halogen_VDom_Machine = $PS["Halogen.VDom.Machine"];
  var Unsafe_Reference = $PS["Unsafe.Reference"];
  var Web_DOM_Node = $PS["Web.DOM.Node"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_HTMLDocument = $PS["Web.HTML.HTMLDocument"];
  var Web_HTML_HTMLElement = $PS["Web.HTML.HTMLElement"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];

  var substInParent = function substInParent(v) {
    return function (v1) {
      return function (v2) {
        if (v1 instanceof Data_Maybe.Just && v2 instanceof Data_Maybe.Just) {
          return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.insertBefore(v)(v1.value0)(v2.value0));
        }

        ;

        if (v1 instanceof Data_Maybe.Nothing && v2 instanceof Data_Maybe.Just) {
          return Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(v)(v2.value0));
        }

        ;
        return Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);
      };
    };
  };

  var removeChild = function removeChild(v) {
    return function __do() {
      var v1 = Web_DOM_Node.parentNode(v.node)();
      return Data_Foldable.traverse_(Effect.applicativeEffect)(Data_Foldable.foldableMaybe)(function (pn) {
        return Web_DOM_Node.removeChild(v.node)(pn);
      })(v1)();
    };
  };

  var mkSpec = function mkSpec(handler) {
    return function (renderChildRef) {
      return function (document) {
        var getNode = Halogen_Aff_Driver_State.unRenderStateX(function (v) {
          return v.node;
        });
        var done = Control_Applicative.pure(Effect.applicativeEffect)(Data_Unit.unit);

        var patch = function patch(slot) {
          var v = Effect_Ref.read(renderChildRef)();
          var v1 = v(slot)();
          var node = getNode(v1);
          return new Halogen_VDom_Machine.Step(node, patch, done);
        };

        var buildWidget = function buildWidget(spec) {
          return function (slot) {
            var v = Effect_Ref.read(renderChildRef)();
            var v1 = v(slot)();
            var node = getNode(v1);
            return new Halogen_VDom_Machine.Step(node, patch, done);
          };
        };

        var buildAttributes = Halogen_VDom_DOM_Prop.buildProp(handler);
        return {
          buildWidget: buildWidget,
          buildAttributes: buildAttributes,
          document: document
        };
      };
    };
  };

  var renderSpec = function renderSpec(document) {
    return function (container) {
      var render = function render(handler) {
        return function (child) {
          return function (v) {
            return function (v1) {
              if (v1 instanceof Data_Maybe.Nothing) {
                return function __do() {
                  var v2 = Effect_Ref["new"](child)();
                  var spec = mkSpec(handler)(v2)(document);
                  var v3 = Halogen_VDom_DOM.buildVDom(spec)(v);
                  var node = Halogen_VDom_Machine.extract(v3);
                  Data_Functor["void"](Effect.functorEffect)(Web_DOM_Node.appendChild(node)(Web_HTML_HTMLElement.toNode(container)))();
                  return {
                    machine: v3,
                    node: node,
                    renderChildRef: v2
                  };
                };
              }

              ;

              if (v1 instanceof Data_Maybe.Just) {
                return function __do() {
                  Effect_Ref.write(child)(v1.value0.renderChildRef)();
                  var v2 = Web_DOM_Node.parentNode(v1.value0.node)();
                  var v3 = Web_DOM_Node.nextSibling(v1.value0.node)();
                  var v4 = Halogen_VDom_Machine.step(v1.value0.machine)(v);
                  var newNode = Halogen_VDom_Machine.extract(v4);
                  Control_Applicative.when(Effect.applicativeEffect)(Data_HeytingAlgebra.not(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraFunction(Data_HeytingAlgebra.heytingAlgebraBoolean)))(Unsafe_Reference.unsafeRefEq)(v1.value0.node)(newNode))(substInParent(newNode)(v3)(v2))();
                  return {
                    machine: v4,
                    node: newNode,
                    renderChildRef: v1.value0.renderChildRef
                  };
                };
              }

              ;
              throw new Error("Failed pattern match at Halogen.VDom.Driver (line 118, column 5 - line 134, column 80): " + [v1.constructor.name]);
            };
          };
        };
      };

      return {
        render: render,
        renderChild: Control_Category.identity(Control_Category.categoryFn),
        removeChild: removeChild
      };
    };
  };

  var runUI = function runUI(component) {
    return function (i) {
      return function (element) {
        return Control_Bind.bind(Effect_Aff.bindAff)(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Data_Functor.map(Effect.functorEffect)(Web_HTML_HTMLDocument.toDocument)(Control_Bind.bindFlipped(Effect.bindEffect)(Web_HTML_Window.document)(Web_HTML.window))))(function (v) {
          return Halogen_Aff_Driver.runUI(renderSpec(v)(element))(component)(i);
        });
      };
    };
  };

  exports["runUI"] = runUI;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Routing.Match.Error"] = $PS["Routing.Match.Error"] || {};
  var exports = $PS["Routing.Match.Error"];

  var UnexpectedPath = function () {
    function UnexpectedPath(value0) {
      this.value0 = value0;
    }

    ;

    UnexpectedPath.create = function (value0) {
      return new UnexpectedPath(value0);
    };

    return UnexpectedPath;
  }();

  var ExpectedBoolean = function () {
    function ExpectedBoolean() {}

    ;
    ExpectedBoolean.value = new ExpectedBoolean();
    return ExpectedBoolean;
  }();

  var ExpectedEnd = function () {
    function ExpectedEnd() {}

    ;
    ExpectedEnd.value = new ExpectedEnd();
    return ExpectedEnd;
  }();

  var ExpectedNumber = function () {
    function ExpectedNumber() {}

    ;
    ExpectedNumber.value = new ExpectedNumber();
    return ExpectedNumber;
  }();

  var ExpectedInt = function () {
    function ExpectedInt() {}

    ;
    ExpectedInt.value = new ExpectedInt();
    return ExpectedInt;
  }();

  var ExpectedString = function () {
    function ExpectedString() {}

    ;
    ExpectedString.value = new ExpectedString();
    return ExpectedString;
  }();

  var ExpectedQuery = function () {
    function ExpectedQuery() {}

    ;
    ExpectedQuery.value = new ExpectedQuery();
    return ExpectedQuery;
  }();

  var ExpectedPathPart = function () {
    function ExpectedPathPart() {}

    ;
    ExpectedPathPart.value = new ExpectedPathPart();
    return ExpectedPathPart;
  }();

  var KeyNotFound = function () {
    function KeyNotFound(value0) {
      this.value0 = value0;
    }

    ;

    KeyNotFound.create = function (value0) {
      return new KeyNotFound(value0);
    };

    return KeyNotFound;
  }();

  var Fail = function () {
    function Fail(value0) {
      this.value0 = value0;
    }

    ;

    Fail.create = function (value0) {
      return new Fail(value0);
    };

    return Fail;
  }();

  var showMatchError = function showMatchError(err) {
    if (err instanceof UnexpectedPath) {
      return "expected path part: " + err.value0;
    }

    ;

    if (err instanceof KeyNotFound) {
      return "key: " + (err.value0 + " has not found in query part");
    }

    ;

    if (err instanceof ExpectedQuery) {
      return "expected query - found path";
    }

    ;

    if (err instanceof ExpectedNumber) {
      return "expected number";
    }

    ;

    if (err instanceof ExpectedInt) {
      return "expected int";
    }

    ;

    if (err instanceof ExpectedBoolean) {
      return "expected boolean";
    }

    ;

    if (err instanceof ExpectedEnd) {
      return "expected end";
    }

    ;

    if (err instanceof ExpectedString) {
      return "expected string var";
    }

    ;

    if (err instanceof ExpectedPathPart) {
      return "expected path part, found query";
    }

    ;

    if (err instanceof Fail) {
      return "match error: " + err.value0;
    }

    ;
    throw new Error("Failed pattern match at Routing.Match.Error (line 29, column 3 - line 39, column 36): " + [err.constructor.name]);
  };

  exports["UnexpectedPath"] = UnexpectedPath;
  exports["ExpectedBoolean"] = ExpectedBoolean;
  exports["ExpectedEnd"] = ExpectedEnd;
  exports["ExpectedNumber"] = ExpectedNumber;
  exports["ExpectedInt"] = ExpectedInt;
  exports["ExpectedString"] = ExpectedString;
  exports["ExpectedQuery"] = ExpectedQuery;
  exports["ExpectedPathPart"] = ExpectedPathPart;
  exports["KeyNotFound"] = KeyNotFound;
  exports["Fail"] = Fail;
  exports["showMatchError"] = showMatchError;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Routing.Types"] = $PS["Routing.Types"] || {};
  var exports = $PS["Routing.Types"];

  var Path = function () {
    function Path(value0) {
      this.value0 = value0;
    }

    ;

    Path.create = function (value0) {
      return new Path(value0);
    };

    return Path;
  }();

  var Query = function () {
    function Query(value0) {
      this.value0 = value0;
    }

    ;

    Query.create = function (value0) {
      return new Query(value0);
    };

    return Query;
  }();

  exports["Path"] = Path;
  exports["Query"] = Query;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Routing.Match"] = $PS["Routing.Match"] || {};
  var exports = $PS["Routing.Match"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Category = $PS["Control.Category"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Newtype = $PS["Data.Newtype"];
  var Data_Semiring = $PS["Data.Semiring"];
  var Data_Semiring_Free = $PS["Data.Semiring.Free"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Data_Unit = $PS["Data.Unit"];
  var Data_Validation_Semiring = $PS["Data.Validation.Semiring"];
  var Routing_Match_Error = $PS["Routing.Match.Error"];
  var Routing_Types = $PS["Routing.Types"];

  var Match = function Match(x) {
    return x;
  };

  var runMatch = function runMatch(v) {
    return function (route) {
      var foldErrors = function foldErrors(errs) {
        return Data_Either.Left.create(Data_Foldable.foldl(Data_List_Types.foldableList)(function (b) {
          return function (a) {
            return a + ("\x0a" + b);
          };
        })("")(Control_Bind.bind(Data_List_Types.bindList)(Data_Functor.map(Data_List_Types.functorList)(Data_List.reverse)(Data_Newtype.unwrap(Data_Semiring_Free.newtypeFree)(errs)))(function (v1) {
          return Control_Applicative.pure(Data_List_Types.applicativeList)(Data_Foldable.foldl(Data_List_Types.foldableList)(function (b) {
            return function (a) {
              return a + (";" + b);
            };
          })("")(Data_Functor.map(Data_List_Types.functorList)(Routing_Match_Error.showMatchError)(v1)));
        })));
      };

      return Data_Validation_Semiring.unV(foldErrors)(function ($90) {
        return Data_Either.Right.create(Data_Tuple.snd($90));
      })(v(route));
    };
  };

  var matchFunctor = new Data_Functor.Functor(function (fn) {
    return function (v) {
      return Match(function (r) {
        return Data_Validation_Semiring.unV(Data_Validation_Semiring.invalid)(function (v1) {
          return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(v1.value0, fn(v1.value1)));
        })(v(r));
      });
    };
  });
  var matchApply = new Control_Apply.Apply(function () {
    return matchFunctor;
  }, function (v) {
    return function (v1) {
      var processFnRes = function processFnRes(v2) {
        return Data_Validation_Semiring.unV(Data_Validation_Semiring.invalid)(function (v3) {
          return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(v3.value0, v2.value1(v3.value1)));
        })(v1(v2.value0));
      };

      var processFnErr = function processFnErr(r) {
        return function (err) {
          return Data_Validation_Semiring.invalid(Data_Semiring.mul(Data_Semiring_Free.semiringFree)(err)(Data_Validation_Semiring.unV(Control_Category.identity(Control_Category.categoryFn))(Data_Function["const"](Data_Semiring.one(Data_Semiring_Free.semiringFree)))(v1(r))));
        };
      };

      return Match(function (r) {
        return Data_Validation_Semiring.unV(processFnErr(r))(processFnRes)(v(r));
      });
    };
  });
  var matchAlt = new Control_Alt.Alt(function () {
    return matchFunctor;
  }, function (v) {
    return function (v1) {
      return Match(function (r) {
        return Control_Alt.alt(Data_Validation_Semiring.altV(Data_Semiring_Free.semiringFree))(v(r))(v1(r));
      });
    };
  });

  var lit = function lit(input) {
    return function (route) {
      if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path && route.value0.value0 === input) {
        return Control_Applicative.pure(Data_Validation_Semiring.applicativeV(Data_Semiring_Free.semiringFree))(new Data_Tuple.Tuple(route.value1, Data_Unit.unit));
      }

      ;

      if (route instanceof Data_List_Types.Cons && route.value0 instanceof Routing_Types.Path) {
        return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(new Routing_Match_Error.UnexpectedPath(input)));
      }

      ;
      return Data_Validation_Semiring.invalid(Data_Semiring_Free.free(Routing_Match_Error.ExpectedPathPart.value));
    };
  };

  exports["Match"] = Match;
  exports["lit"] = lit;
  exports["runMatch"] = runMatch;
  exports["matchFunctor"] = matchFunctor;
  exports["matchAlt"] = matchAlt;
  exports["matchApply"] = matchApply;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Routing.Parser"] = $PS["Routing.Parser"] || {};
  var exports = $PS["Routing.Parser"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_MonadZero = $PS["Control.MonadZero"];
  var Data_Array = $PS["Data.Array"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_List = $PS["Data.List"];
  var Data_List_Types = $PS["Data.List.Types"];
  var Data_Map_Internal = $PS["Data.Map.Internal"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Semigroup = $PS["Data.Semigroup"];
  var Data_String_CodePoints = $PS["Data.String.CodePoints"];
  var Data_String_Common = $PS["Data.String.Common"];
  var Data_Traversable = $PS["Data.Traversable"];
  var Data_Tuple = $PS["Data.Tuple"];
  var Routing_Types = $PS["Routing.Types"];

  var parseQueryPart = function parseQueryPart(decoder) {
    var part2tuple = function part2tuple(input) {
      var keyVal = Data_Functor.map(Data_Functor.functorArray)(decoder)(Data_String_Common.split("=")(input));
      return Control_Bind.discard(Control_Bind.discardUnit)(Data_Maybe.bindMaybe)(Control_MonadZero.guard(Data_Maybe.monadZeroMaybe)(Data_Array.length(keyVal) <= 2))(function () {
        return Control_Apply.apply(Data_Maybe.applyMaybe)(Data_Functor.map(Data_Maybe.functorMaybe)(Data_Tuple.Tuple.create)(Data_Array.head(keyVal)))(Data_Array.index(keyVal)(1));
      });
    };

    return function ($11) {
      return Data_Functor.map(Data_Maybe.functorMaybe)(Data_Map_Internal.fromFoldable(Data_Ord.ordString)(Data_Foldable.foldableArray))(Data_Traversable.traverse(Data_Traversable.traversableArray)(Data_Maybe.applicativeMaybe)(part2tuple)(Data_String_Common.split("&")($11)));
    };
  };

  var parse = function parse(decoder) {
    return function (hash) {
      var pathParts = function pathParts(str) {
        var parts = Data_List.fromFoldable(Data_Foldable.foldableArray)(Data_Functor.map(Data_Functor.functorArray)(function ($12) {
          return Routing_Types.Path.create(decoder($12));
        })(Data_String_Common.split("/")(str)));
        var v = Data_List.unsnoc(parts);

        if (v instanceof Data_Maybe.Just && v.value0.last instanceof Routing_Types.Path && v.value0.last.value0 === "") {
          return v.value0.init;
        }

        ;
        return parts;
      };

      var v = Data_Functor.map(Data_Maybe.functorMaybe)(Data_Function.flip(Data_String_CodePoints.splitAt)(hash))(Data_String_CodePoints.indexOf("?")(hash));

      if (v instanceof Data_Maybe.Just) {
        return Data_Semigroup.append(Data_List_Types.semigroupList)(pathParts(v.value0.before))(Data_Functor.map(Data_List_Types.functorList)(Routing_Types.Query.create)(Data_List.fromFoldable(Data_Foldable.foldableMaybe)(parseQueryPart(decoder)(Data_String_CodePoints.drop(1)(v.value0.after)))));
      }

      ;

      if (v instanceof Data_Maybe.Nothing) {
        return pathParts(hash);
      }

      ;
      throw new Error("Failed pattern match at Routing.Parser (line 32, column 3 - line 37, column 21): " + [v.constructor.name]);
    };
  };

  exports["parse"] = parse;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Routing"] = $PS["Routing"] || {};
  var exports = $PS["Routing"];
  var Global_Unsafe = $PS["Global.Unsafe"];
  var Routing_Match = $PS["Routing.Match"];
  var Routing_Parser = $PS["Routing.Parser"];

  var matchWith = function matchWith(decoder) {
    return function (matcher) {
      return function ($0) {
        return Routing_Match.runMatch(matcher)(Routing_Parser.parse(decoder)($0));
      };
    };
  };

  var match = matchWith(Global_Unsafe.unsafeDecodeURIComponent);
  exports["match"] = match;
  exports["matchWith"] = matchWith;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Web.HTML.Event.HashChangeEvent.EventTypes"] = $PS["Web.HTML.Event.HashChangeEvent.EventTypes"] || {};
  var exports = $PS["Web.HTML.Event.HashChangeEvent.EventTypes"];
  var hashchange = "hashchange";
  exports["hashchange"] = hashchange;
})(PS);

(function (exports) {
  "use strict";

  exports.hash = function (location) {
    return function () {
      return location.hash;
    };
  };
})(PS["Web.HTML.Location"] = PS["Web.HTML.Location"] || {});

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Web.HTML.Location"] = $PS["Web.HTML.Location"] || {};
  var exports = $PS["Web.HTML.Location"];
  var $foreign = $PS["Web.HTML.Location"];
  exports["hash"] = $foreign.hash;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Routing.Hash"] = $PS["Routing.Hash"] || {};
  var exports = $PS["Routing.Hash"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Either = $PS["Data.Either"];
  var Data_Foldable = $PS["Data.Foldable"];
  var Data_Function = $PS["Data.Function"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_String_CodeUnits = $PS["Data.String.CodeUnits"];
  var Effect = $PS["Effect"];
  var Effect_Ref = $PS["Effect.Ref"];
  var Routing = $PS["Routing"];
  var Web_Event_EventTarget = $PS["Web.Event.EventTarget"];
  var Web_HTML = $PS["Web.HTML"];
  var Web_HTML_Event_HashChangeEvent_EventTypes = $PS["Web.HTML.Event.HashChangeEvent.EventTypes"];
  var Web_HTML_Location = $PS["Web.HTML.Location"];
  var Web_HTML_Window = $PS["Web.HTML.Window"];

  var getHash = function __do() {
    var $8 = Control_Bind.bind(Effect.bindEffect)(Web_HTML.window)(Web_HTML_Window.location)();
    return Data_Functor.map(Effect.functorEffect)(function ($9) {
      return Data_Maybe.fromMaybe("")(Data_String_CodeUnits.stripPrefix("#")($9));
    })(Web_HTML_Location.hash($8))();
  };

  var foldHashes = function foldHashes(cb) {
    return function (init) {
      return function __do() {
        var v = Control_Bind.bindFlipped(Effect.bindEffect)(Effect_Ref["new"])(Control_Bind.bindFlipped(Effect.bindEffect)(init)(getHash))();
        var v1 = Data_Functor.map(Effect.functorEffect)(Web_HTML_Window.toEventTarget)(Web_HTML.window)();
        var v2 = Web_Event_EventTarget.eventListener(function (v2) {
          return Control_Bind.bindFlipped(Effect.bindEffect)(Data_Function.flip(Effect_Ref.write)(v))(Control_Bind.join(Effect.bindEffect)(Control_Apply.apply(Effect.applyEffect)(Data_Functor.map(Effect.functorEffect)(cb)(Effect_Ref.read(v)))(getHash)));
        })();
        Web_Event_EventTarget.addEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(v2)(false)(v1)();
        return Web_Event_EventTarget.removeEventListener(Web_HTML_Event_HashChangeEvent_EventTypes.hashchange)(v2)(false)(v1);
      };
    };
  };

  var matchesWith = function matchesWith(dictFoldable) {
    return function (parser) {
      return function (cb) {
        var go = function go(a) {
          return function ($10) {
            return Data_Maybe.maybe(Control_Applicative.pure(Effect.applicativeEffect)(a))(function (b) {
              return Data_Functor.voidRight(Effect.functorEffect)(new Data_Maybe.Just(b))(cb(a)(b));
            })(Data_Foldable.indexl(dictFoldable)(0)(parser($10)));
          };
        };

        return foldHashes(go)(go(Data_Maybe.Nothing.value));
      };
    };
  };

  var matches = function matches($11) {
    return matchesWith(Data_Either.foldableEither)(Routing.match($11));
  };

  exports["getHash"] = getHash;
  exports["foldHashes"] = foldHashes;
  exports["matches"] = matches;
  exports["matchesWith"] = matchesWith;
})(PS);

(function ($PS) {
  "use strict";

  $PS["Router"] = $PS["Router"] || {};
  var exports = $PS["Router"];
  var Control_Alt = $PS["Control.Alt"];
  var Control_Applicative = $PS["Control.Applicative"];
  var Control_Apply = $PS["Control.Apply"];
  var Control_Bind = $PS["Control.Bind"];
  var Control_Monad_State_Class = $PS["Control.Monad.State.Class"];
  var Data_Eq = $PS["Data.Eq"];
  var Data_Functor = $PS["Data.Functor"];
  var Data_Maybe = $PS["Data.Maybe"];
  var Data_Ord = $PS["Data.Ord"];
  var Data_Ordering = $PS["Data.Ordering"];
  var DemoContainer = $PS["DemoContainer"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Effect_Class = $PS["Effect.Class"];
  var Halogen_Component = $PS["Halogen.Component"];
  var Halogen_HTML = $PS["Halogen.HTML"];
  var Halogen_HTML_Elements = $PS["Halogen.HTML.Elements"];
  var Halogen_HTML_Events = $PS["Halogen.HTML.Events"];
  var Halogen_HTML_Properties = $PS["Halogen.HTML.Properties"];
  var Halogen_Query = $PS["Halogen.Query"];
  var Halogen_Query_HalogenM = $PS["Halogen.Query.HalogenM"];
  var Route = $PS["Route"];
  var Routing_Hash = $PS["Routing.Hash"];
  var Routing_Match = $PS["Routing.Match"];

  var DemoContainerSlot = function () {
    function DemoContainerSlot() {}

    ;
    DemoContainerSlot.value = new DemoContainerSlot();
    return DemoContainerSlot;
  }();

  var OnDemoContainerMessage = function () {
    function OnDemoContainerMessage(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    OnDemoContainerMessage.create = function (value0) {
      return function (value1) {
        return new OnDemoContainerMessage(value0, value1);
      };
    };

    return OnDemoContainerMessage;
  }();

  var GoTo = function () {
    function GoTo(value0, value1) {
      this.value0 = value0;
      this.value1 = value1;
    }

    ;

    GoTo.create = function (value0) {
      return function (value1) {
        return new GoTo(value0, value1);
      };
    };

    return GoTo;
  }();

  var matchRoute = function () {
    var route = function route(str) {
      return Control_Apply.applySecond(Routing_Match.matchApply)(Routing_Match.lit(""))(Routing_Match.lit(str));
    };

    var sliders = Data_Functor.voidRight(Routing_Match.matchFunctor)(Route.Sliders.value)(route(Route.urlSegment(Route.Sliders.value)));
    var snackbars = Data_Functor.voidRight(Routing_Match.matchFunctor)(Route.Snackbars.value)(route(Route.urlSegment(Route.Snackbars.value)));
    var spinners = Data_Functor.voidRight(Routing_Match.matchFunctor)(Route.Spinners.value)(route(Route.urlSegment(Route.Spinners.value)));
    var tabs = Data_Functor.voidRight(Routing_Match.matchFunctor)(Route.Tabs.value)(route(Route.urlSegment(Route.Tabs.value)));
    var toggles = Data_Functor.voidRight(Routing_Match.matchFunctor)(Route.Toggles.value)(route(Route.urlSegment(Route.Toggles.value)));
    var progress = Data_Functor.voidRight(Routing_Match.matchFunctor)(Route.Progress.value)(route(Route.urlSegment(Route.Progress.value)));
    var menus = Data_Functor.voidRight(Routing_Match.matchFunctor)(Route.Menus.value)(route(Route.urlSegment(Route.Menus.value)));
    var lists = Data_Functor.voidRight(Routing_Match.matchFunctor)(Route.Lists.value)(route(Route.urlSegment(Route.Lists.value)));
    var home = Data_Functor.voidRight(Routing_Match.matchFunctor)(Route.Home.value)(Routing_Match.lit(""));
    var dialogs = Data_Functor.voidRight(Routing_Match.matchFunctor)(Route.Dialogs.value)(route(Route.urlSegment(Route.Dialogs.value)));
    var chips = Data_Functor.voidRight(Routing_Match.matchFunctor)(Route.Chips.value)(route(Route.urlSegment(Route.Chips.value)));
    var cards = Data_Functor.voidRight(Routing_Match.matchFunctor)(Route.Cards.value)(route(Route.urlSegment(Route.Cards.value)));
    var buttons = Data_Functor.voidRight(Routing_Match.matchFunctor)(Route.Buttons.value)(route(Route.urlSegment(Route.Buttons.value)));
    var badges = Data_Functor.voidRight(Routing_Match.matchFunctor)(Route.Badges.value)(route(Route.urlSegment(Route.Badges.value)));
    return Control_Alt.alt(Routing_Match.matchAlt)(Control_Alt.alt(Routing_Match.matchAlt)(Control_Alt.alt(Routing_Match.matchAlt)(Control_Alt.alt(Routing_Match.matchAlt)(Control_Alt.alt(Routing_Match.matchAlt)(Control_Alt.alt(Routing_Match.matchAlt)(Control_Alt.alt(Routing_Match.matchAlt)(Control_Alt.alt(Routing_Match.matchAlt)(Control_Alt.alt(Routing_Match.matchAlt)(Control_Alt.alt(Routing_Match.matchAlt)(Control_Alt.alt(Routing_Match.matchAlt)(Control_Alt.alt(Routing_Match.matchAlt)(Control_Alt.alt(Routing_Match.matchAlt)(badges)(buttons))(cards))(chips))(dialogs))(lists))(menus))(progress))(sliders))(snackbars))(spinners))(tabs))(toggles))(home);
  }();

  var goToRoute = function goToRoute(driver) {
    return function (v) {
      return function ($21) {
        return Effect_Aff.launchAff_(driver.query(Halogen_Query.action(GoTo.create($21))));
      };
    };
  }; // Routing logic


  var routeSignal = function routeSignal(driver) {
    return Data_Functor["void"](Effect_Aff.functorAff)(Effect_Aff.forkAff(Effect_Class.liftEffect(Effect_Aff.monadEffectAff)(Routing_Hash.matches(matchRoute)(goToRoute(driver)))));
  };

  var eqSlot = new Data_Eq.Eq(function (x) {
    return function (y) {
      return true;
    };
  });
  var ordSlot = new Data_Ord.Ord(function () {
    return eqSlot;
  }, function (x) {
    return function (y) {
      return Data_Ordering.EQ.value;
    };
  });

  var component = function () {
    var render = function render(state) {
      return Halogen_HTML_Elements.div([Halogen_HTML_Properties.class_("root")])([Halogen_HTML.slot(DemoContainerSlot.value)(DemoContainer.demoContainer)(DemoContainer.init({
        currentRoute: state.currentRoute
      }))(Halogen_HTML_Events.input(OnDemoContainerMessage.create))]);
    };

    var receiver = function receiver(v) {
      return Data_Maybe.Nothing.value;
    };

    var initialState = function initialState(v) {
      return {
        currentRoute: Route.Home.value
      };
    };

    var $$eval = function $$eval(v) {
      if (v instanceof GoTo) {
        return Control_Bind.discard(Control_Bind.discardUnit)(Halogen_Query_HalogenM.bindHalogenM)(Control_Monad_State_Class.modify_(Halogen_Query_HalogenM.monadStateHalogenM)(function (v1) {
          var $14 = {};

          for (var $15 in v1) {
            if ({}.hasOwnProperty.call(v1, $15)) {
              $14[$15] = v1[$15];
            }

            ;
          }

          ;
          $14.currentRoute = v.value0;
          return $14;
        }))(function () {
          return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
        });
      }

      ;

      if (v instanceof OnDemoContainerMessage) {
        return Control_Applicative.pure(Halogen_Query_HalogenM.applicativeHalogenM)(v.value1);
      }

      ;
      throw new Error("Failed pattern match at Router (line 110, column 12 - line 116, column 14): " + [v.constructor.name]);
    };

    return Halogen_Component.parentComponent(ordSlot)({
      initialState: initialState,
      receiver: receiver,
      render: render,
      "eval": $$eval
    });
  }();

  exports["routeSignal"] = routeSignal;
  exports["matchRoute"] = matchRoute;
  exports["goToRoute"] = goToRoute;
  exports["OnDemoContainerMessage"] = OnDemoContainerMessage;
  exports["GoTo"] = GoTo;
  exports["DemoContainerSlot"] = DemoContainerSlot;
  exports["component"] = component;
  exports["eqSlot"] = eqSlot;
  exports["ordSlot"] = ordSlot;
})(PS);

(function ($PS) {
  // Generated by purs version 0.12.5
  "use strict";

  $PS["Main"] = $PS["Main"] || {};
  var exports = $PS["Main"];
  var Control_Bind = $PS["Control.Bind"];
  var Data_Unit = $PS["Data.Unit"];
  var Effect_Aff = $PS["Effect.Aff"];
  var Halogen_Aff_Util = $PS["Halogen.Aff.Util"];
  var Halogen_VDom_Driver = $PS["Halogen.VDom.Driver"];
  var Router = $PS["Router"];
  var main = Halogen_Aff_Util.runHalogenAff(Control_Bind.bind(Effect_Aff.bindAff)(Halogen_Aff_Util.awaitBody)(function (v) {
    return Control_Bind.bind(Effect_Aff.bindAff)(Halogen_VDom_Driver.runUI(Router.component)(Data_Unit.unit)(v))(function (v1) {
      return Router.routeSignal(v1);
    });
  }));
  exports["main"] = main;
})(PS);

PS["Main"].main();
},{}],"../../../../../../../usr/local/lib/node_modules/parcel/src/builtins/hmr-runtime.js":[function(require,module,exports) {
var global = arguments[3];
var OVERLAY_ID = '__parcel__error__overlay__';
var OldModule = module.bundle.Module;

function Module(moduleName) {
  OldModule.call(this, moduleName);
  this.hot = {
    data: module.bundle.hotData,
    _acceptCallbacks: [],
    _disposeCallbacks: [],
    accept: function (fn) {
      this._acceptCallbacks.push(fn || function () {});
    },
    dispose: function (fn) {
      this._disposeCallbacks.push(fn);
    }
  };
  module.bundle.hotData = null;
}

module.bundle.Module = Module;
var checkedAssets, assetsToAccept;
var parent = module.bundle.parent;

if ((!parent || !parent.isParcelRequire) && typeof WebSocket !== 'undefined') {
  var hostname = "" || location.hostname;
  var protocol = location.protocol === 'https:' ? 'wss' : 'ws';
  var ws = new WebSocket(protocol + '://' + hostname + ':' + "65176" + '/');

  ws.onmessage = function (event) {
    checkedAssets = {};
    assetsToAccept = [];
    var data = JSON.parse(event.data);

    if (data.type === 'update') {
      var handled = false;
      data.assets.forEach(function (asset) {
        if (!asset.isNew) {
          var didAccept = hmrAcceptCheck(global.parcelRequire, asset.id);

          if (didAccept) {
            handled = true;
          }
        }
      }); // Enable HMR for CSS by default.

      handled = handled || data.assets.every(function (asset) {
        return asset.type === 'css' && asset.generated.js;
      });

      if (handled) {
        console.clear();
        data.assets.forEach(function (asset) {
          hmrApply(global.parcelRequire, asset);
        });
        assetsToAccept.forEach(function (v) {
          hmrAcceptRun(v[0], v[1]);
        });
      } else {
        window.location.reload();
      }
    }

    if (data.type === 'reload') {
      ws.close();

      ws.onclose = function () {
        location.reload();
      };
    }

    if (data.type === 'error-resolved') {
      console.log('[parcel] ✨ Error resolved');
      removeErrorOverlay();
    }

    if (data.type === 'error') {
      console.error('[parcel] 🚨  ' + data.error.message + '\n' + data.error.stack);
      removeErrorOverlay();
      var overlay = createErrorOverlay(data);
      document.body.appendChild(overlay);
    }
  };
}

function removeErrorOverlay() {
  var overlay = document.getElementById(OVERLAY_ID);

  if (overlay) {
    overlay.remove();
  }
}

function createErrorOverlay(data) {
  var overlay = document.createElement('div');
  overlay.id = OVERLAY_ID; // html encode message and stack trace

  var message = document.createElement('div');
  var stackTrace = document.createElement('pre');
  message.innerText = data.error.message;
  stackTrace.innerText = data.error.stack;
  overlay.innerHTML = '<div style="background: black; font-size: 16px; color: white; position: fixed; height: 100%; width: 100%; top: 0px; left: 0px; padding: 30px; opacity: 0.85; font-family: Menlo, Consolas, monospace; z-index: 9999;">' + '<span style="background: red; padding: 2px 4px; border-radius: 2px;">ERROR</span>' + '<span style="top: 2px; margin-left: 5px; position: relative;">🚨</span>' + '<div style="font-size: 18px; font-weight: bold; margin-top: 20px;">' + message.innerHTML + '</div>' + '<pre>' + stackTrace.innerHTML + '</pre>' + '</div>';
  return overlay;
}

function getParents(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return [];
  }

  var parents = [];
  var k, d, dep;

  for (k in modules) {
    for (d in modules[k][1]) {
      dep = modules[k][1][d];

      if (dep === id || Array.isArray(dep) && dep[dep.length - 1] === id) {
        parents.push(k);
      }
    }
  }

  if (bundle.parent) {
    parents = parents.concat(getParents(bundle.parent, id));
  }

  return parents;
}

function hmrApply(bundle, asset) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (modules[asset.id] || !bundle.parent) {
    var fn = new Function('require', 'module', 'exports', asset.generated.js);
    asset.isNew = !modules[asset.id];
    modules[asset.id] = [fn, asset.deps];
  } else if (bundle.parent) {
    hmrApply(bundle.parent, asset);
  }
}

function hmrAcceptCheck(bundle, id) {
  var modules = bundle.modules;

  if (!modules) {
    return;
  }

  if (!modules[id] && bundle.parent) {
    return hmrAcceptCheck(bundle.parent, id);
  }

  if (checkedAssets[id]) {
    return;
  }

  checkedAssets[id] = true;
  var cached = bundle.cache[id];
  assetsToAccept.push([bundle, id]);

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    return true;
  }

  return getParents(global.parcelRequire, id).some(function (id) {
    return hmrAcceptCheck(global.parcelRequire, id);
  });
}

function hmrAcceptRun(bundle, id) {
  var cached = bundle.cache[id];
  bundle.hotData = {};

  if (cached) {
    cached.hot.data = bundle.hotData;
  }

  if (cached && cached.hot && cached.hot._disposeCallbacks.length) {
    cached.hot._disposeCallbacks.forEach(function (cb) {
      cb(bundle.hotData);
    });
  }

  delete bundle.cache[id];
  bundle(id);
  cached = bundle.cache[id];

  if (cached && cached.hot && cached.hot._acceptCallbacks.length) {
    cached.hot._acceptCallbacks.forEach(function (cb) {
      cb();
    });

    return true;
  }
}
},{}]},{},["../../../../../../../usr/local/lib/node_modules/parcel/src/builtins/hmr-runtime.js","app.js"], null)
//# sourceMappingURL=/app.c328ef1a.js.map